# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.79 Manual 2.79\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-17 17:01+1000\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/physics/soft_body/collision.rst:4
msgid "Collision"
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:6
msgid ""
"There are two different collision types that you may use: collision "
"between different objects and internal collision. We should set one thing"
" straight from the start -- the primary targets of the collision "
"calculation are the vertices of a soft body. So if you have too few "
"vertices too few collision takes place. Secondarily, you can use edges "
"and faces to improve the collision calculation."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:15
msgid "Collisions with Other Objects"
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:17
msgid ""
"For a soft body to collide with another object there are a few "
"prerequisites:"
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:19
msgid ""
"If *Collision Collection* is set, the object must belong to the "
"collection."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:20
msgid "The collision object has to be a mesh object."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:21
msgid ""
"You have to activate the *Collision* in the *Physics* tab for the "
"collision object. The collision object may also be a soft body."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:26
msgid "Examples"
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:28
msgid ""
"A soft body cube colliding with a plane (Fig. :ref:`fig-softbody-"
"collision-plane1`) works pretty well, but a soft body plane falls right "
"through a cube that it is supposed to collide with (Fig. :ref:`fig-"
"softbody-collision-plane2`)."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:38
msgid "A soft body cube colliding with a plane."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:44
msgid "A soft body plane colliding with a cube, so no interaction at all."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:46
msgid ""
"Why is that? Because the default method of calculation only checks to see"
" if the four vertices of the soft body plane collides with the cube as "
"the plane is pulled down by gravity. You can activate *Collision: Face* "
"(in the *Soft Body Edges* panel) to enable collision between the face of "
"the plane and the object instead, but this type of calculation takes much"
" longer."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:51
msgid ""
"Let us have a closer look at the collision calculation, so you can get an"
" idea of how we might optimize it."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:55
msgid "Calculating Collisions"
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:57
msgid ""
"Soft body simulations are by default done on a per-vertex basis. If the "
"vertices of the soft body do not collide with the collision object, there"
" will be no interaction between the two objects."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:60
msgid ""
"In the video below, you can see the vertices colliding with a plane. If a"
" vertex penetrates the zone between *Outer* and *Inner*, it is repulsed "
"by a force in the direction of the face normal. The position that a "
"vertex finally ends up in is dependent on the forces that act upon it. In"
" the example (the first vertex on the left in the video below) gravity "
"and the repulsion force of the face balance out. The speed at which the "
"vertex is pulled out of the collision zone is influenced by the *Choke* "
"parameter in the :ref:`Soft Body Solver settings <physics-softbody-"
"settings-solver>`."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:72
msgid ""
"Download the `blend-file "
"<https://en.blender.org/uploads/8/8d/CollidingVertices.blend>`__."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:74
msgid ""
"Now let's see what happens if we make vertices heavier and let them "
"travel at a faster speed. In the video above, you can see vertices "
"traveling at different speeds. The two on the far right (fifth and sixth)"
" are traveling so fast that they pass right through the collision zone "
"(this is because of the default solver precision, which we can fix "
"later). You will notice that the fourth vertex also travels quite fast "
"and because it is heavier it breaches the inner zone. The first three "
"vertices collide correctly."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:81
msgid ""
"You can set up your collision so that edges and even faces are included "
"in the collision calculation in the *Soft Body Edges* panel with the "
"Collision *Face* and *Edge* options. The collision is then calculated "
"differently. It is checked whether the edge or face intersects with the "
"collision object, the collision zones are not used."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:88
msgid "Good Collisions"
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:90
msgid ""
"If the collision you have set up is not behaving properly, you can try "
"the following:"
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:92
msgid ""
"The soft body object must have more subdivisions than the collision "
"object. Add loop cuts to the soft body object in strategic areas that you"
" know are most likely to be involved in a collision."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:95
msgid "Check the direction of the face normals."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:96
msgid ""
"If the collision object has sharp spikes, they might penetrate the soft "
"body."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:97
msgid ""
"The resolution of the solver must match the speed at which soft body "
"vertices are traveling. Lower the parameter *Error Limit* and carefully "
"increase *Min Step*."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:99
msgid ""
"*Outer* and *Inner* should be large enough, but zones of opposite faces "
"should not overlap, or you have forces in opposite directions."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:101
msgid "If you use strong forces you should use large zones."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:102
msgid ""
"Set *Choke* to a high enough value (all the way up if necessary) if you "
"have difficulties with repelled vertices."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:103
msgid ""
"Colliding faces are difficult to control and need long calculation times."
" Try not to use them."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:105
msgid ""
"Often it is better to create a simplified mesh to use as your collision "
"object, however, this may be difficult if you are using an animated mesh."
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:110
msgid "Self-Collisions"
msgstr ""

#: ../../manual/physics/soft_body/collision.rst:112
msgid ""
"For information on self-collision please refer to the :ref:`Self-"
"Collision <physics-softbody-settings-self-collision>` settings."
msgstr ""

#~ msgid ""
#~ "In Fig. :ref:`fig-softbody-collision-"
#~ "vertex` you can see a vertex "
#~ "colliding with a plane. If a "
#~ "vertex penetrates the zone between "
#~ "*Outer* and *Inner*, it is repulsed "
#~ "by a force in the direction of "
#~ "the face normal. The position that "
#~ "a vertex finally ends up in is "
#~ "dependent on the forces that act "
#~ "upon it. In the example gravity "
#~ "and the repulsion force of the "
#~ "face balance out. The speed at "
#~ "which the vertex is pulled out of"
#~ " the collision zone is influenced by"
#~ " the *Choke* parameter in the "
#~ ":ref:`Soft Body Solver settings "
#~ "<physics_softbody_settings_solver>`."
#~ msgstr ""

#~ msgid ""
#~ "The resolution of the solver must "
#~ "match the speed at which Soft Body"
#~ " vertices are traveling. Lower the "
#~ "parameter *Error Lim* and carefully "
#~ "increase *Min S*."
#~ msgstr ""

#~ msgid ""
#~ "Add *Loop Cuts* to your Soft Body"
#~ " object in strategic areas that you"
#~ " know are most likely to  be "
#~ "involved in a collision."
#~ msgstr ""

#~ msgid ""
#~ "A cube colliding with a plane "
#~ "works pretty well Fig. :ref:`fig-"
#~ "softbody-collision-plane1`, but a plane "
#~ "falls right through a cube that it"
#~ " is supposed to collide with Fig. "
#~ ":ref:`fig-softbody-collision-plane2`. Why "
#~ "is that? Because the default method "
#~ "of calculation only checks to see "
#~ "if the four vertices of the plane"
#~ " collides with the cube as the "
#~ "plane is pulled down by gravity. "
#~ "You can activate *CFace* to enable "
#~ "collision between the face of the "
#~ "plane and the object instead Fig. "
#~ ":ref:`fig-softbody-collision-plane3`, but "
#~ "this type of calculation takes much "
#~ "longer."
#~ msgstr ""

#~ msgid "Collision with Face activated."
#~ msgstr ""

#~ msgid ""
#~ "An example image can be found at:"
#~ " "
#~ "https://docs.blender.org/manual/en/dev/physics/soft_body/collision.html#examples"
#~ msgstr ""

#~ msgid "Visualization of the collision of a Soft Body vertex with a plane."
#~ msgstr ""

#~ msgid ""
#~ "In Fig. :ref:`fig-softbody-collision-"
#~ "vertex` you can see a vertex "
#~ "colliding with a plane. If a "
#~ "vertex penetrates the zone between "
#~ "*Outer* and *Inner*, it is repulsed "
#~ "by a force in the direction of "
#~ "the face normal. The position that "
#~ "a vertex finally ends up in is "
#~ "dependent on the forces that act "
#~ "upon it. In the example gravity "
#~ "and the repulsion force of the "
#~ "face balance out. The speed at "
#~ "which the vertex is pulled out of"
#~ " the collision zone is influenced by"
#~ " the *Choke* parameter in the "
#~ ":ref:`Soft Body Solver settings <physics-"
#~ "softbody-settings-solver>`."
#~ msgstr ""

#~ msgid "Six Soft Body vertices with different speed."
#~ msgstr ""

#~ msgid ""
#~ "`Blend file "
#~ "<https://wiki.blender.org/index.php/Media:CollidingVertices.blend>`__."
#~ msgstr ""

#~ msgid ""
#~ "An example image can be found at:"
#~ " "
#~ "https://docs.blender.org/manual/en/dev/physics/soft_body/collision.html"
#~ "#calculating-collisions"
#~ msgstr ""

#~ msgid ""
#~ "In Fig. :ref:`fig-softbody-collision-"
#~ "vertex2` you can see a vertex "
#~ "colliding with a plane. If a "
#~ "vertex penetrates the zone between "
#~ "*Outer* and *Inner*, it is repulsed "
#~ "by a force in the direction of "
#~ "the face normal. The position that "
#~ "a vertex finally ends up in is "
#~ "dependent on the forces that act "
#~ "upon it. In the example gravity "
#~ "and the repulsion force of the "
#~ "face balance out. The speed at "
#~ "which the vertex is pulled out of"
#~ " the collision zone is influenced by"
#~ " the *Choke* parameter in the "
#~ ":ref:`Soft Body Solver settings <physics-"
#~ "softbody-settings-solver>`."
#~ msgstr ""

#~ msgid ""
#~ "Now lets see what happens if we"
#~ " make vertices heavier and let them"
#~ " travel at a faster speed. In "
#~ "Fig. :ref:`fig-softbody-collision-vertex2` "
#~ "you can see vertices traveling at "
#~ "different speeds. The two on the "
#~ "far right (5 and 6) are traveling"
#~ " so fast that they pass right "
#~ "through the collision zone (this is "
#~ "because of the default solver precision,"
#~ " which we can fix later). You "
#~ "will notice that the fourth vertex "
#~ "also travels quite fast and because "
#~ "it is heavier it breaches the "
#~ "inner zone. The first three vertices "
#~ "collide correctly."
#~ msgstr ""

#~ msgid ""
#~ "If the collision object has sharp "
#~ "spikes they might penetrate the Soft "
#~ "Body."
#~ msgstr ""

#~ msgid ""
#~ "There are two different collision types"
#~ " that you may use: collision between"
#~ " different objects and internal collision."
#~ " We should set one thing straight "
#~ "from the start: the primary targets "
#~ "of the collision calculation are the "
#~ "vertices of a Soft Body. So if "
#~ "you have too few vertices too few"
#~ " collision takes place. Secondarily, you"
#~ " can use edges and faces to "
#~ "improve the collision calculation."
#~ msgstr ""

#~ msgid ""
#~ "For a *Soft Body* to collide with"
#~ " another object there are a few "
#~ "prerequisites:"
#~ msgstr ""

#~ msgid ""
#~ "You have to activate the option "
#~ "*Collision* in the *Collision* panel of"
#~ " the *Physics* tab for the collision"
#~ " object. The collision object may "
#~ "also be a Soft Body."
#~ msgstr ""

#~ msgid "A Soft Body cube colliding with a plane."
#~ msgstr ""

#~ msgid "A Soft Body plane colliding with a cube, so no interaction at all."
#~ msgstr ""

#~ msgid ""
#~ "Soft Body simulation is by default "
#~ "done on a per vertex basis. If "
#~ "the vertices of the Soft Body do"
#~ " not collide with the collision "
#~ "object, there will be no interaction "
#~ "between the two objects."
#~ msgstr ""

#~ msgid ""
#~ "Download the `Blend file "
#~ "<https://wiki.blender.org/index.php/Media:CollidingVertices.blend>`__."
#~ msgstr ""

#~ msgid ""
#~ "Add *Loop Cuts* to your Soft Body"
#~ " object in strategic areas that you"
#~ " know are most likely to be "
#~ "involved in a collision."
#~ msgstr ""

#~ msgid ""
#~ "The Soft Body object must have "
#~ "more subdivisions than the collision "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "If the collision object has sharp "
#~ "spikes, they might penetrate the Soft"
#~ " Body."
#~ msgstr ""

#~ msgid ""
#~ "The resolution of the solver must "
#~ "match the speed at which Soft Body"
#~ " vertices are traveling. Lower the "
#~ "parameter *Error Limit* and carefully "
#~ "increase *Min Step*."
#~ msgstr ""

#~ msgid "Self Collisions"
#~ msgstr ""

#~ msgid ""
#~ "For information on self collision please"
#~ " refer to the :ref:`Self Collision "
#~ "<physics-softbody-settings-self-collision>` "
#~ "settings."
#~ msgstr ""

#~ msgid ""
#~ "There are two different collision types"
#~ " that you may use: collision between"
#~ " different objects and internal collision."
#~ " We should set one thing straight "
#~ "from the start: the primary targets "
#~ "of the collision calculation are the "
#~ "vertices of a soft body. So if "
#~ "you have too few vertices too few"
#~ " collision takes place. Secondarily, you"
#~ " can use edges and faces to "
#~ "improve the collision calculation."
#~ msgstr ""

#~ msgid ""
#~ "For a *soft body* to collide with"
#~ " another object there are a few "
#~ "prerequisites:"
#~ msgstr ""

#~ msgid ""
#~ "You have to activate the option "
#~ "*Collision* in the *Collision* panel of"
#~ " the *Physics* tab for the collision"
#~ " object. The collision object may "
#~ "also be a soft body."
#~ msgstr ""

#~ msgid ""
#~ "If you use modifiers such as "
#~ "*Array* and *Mirror* you have to "
#~ "activate *EV.M.Stack* to ensure that "
#~ "collision calculation is based on the"
#~ " modified object. The sequence of "
#~ "*Modifiers* is not important."
#~ msgstr ""

#~ msgid ""
#~ "A cube colliding with a plane "
#~ "works pretty well Fig. :ref:`fig-"
#~ "softbody-collision-plane1`, but a plane "
#~ "falls right through a cube that it"
#~ " is supposed to collide with Fig. "
#~ ":ref:`fig-softbody-collision-plane2`. Why "
#~ "is that? Because the default method "
#~ "of calculation only checks to see "
#~ "if the four vertices of the plane"
#~ " collides with the cube as the "
#~ "plane is pulled down by gravity. "
#~ "You can activate *Face* to enable "
#~ "collision between the face of the "
#~ "plane and the object instead, but "
#~ "this type of calculation takes much "
#~ "longer."
#~ msgstr ""

#~ msgid ""
#~ "In the video below, you can see"
#~ " a vertex colliding with a plane. "
#~ "If a vertex penetrates the zone "
#~ "between *Outer* and *Inner*, it is "
#~ "repulsed by a force in the "
#~ "direction of the face normal. The "
#~ "position that a vertex finally ends "
#~ "up in is dependent on the forces"
#~ " that act upon it. In the "
#~ "example gravity and the repulsion force"
#~ " of the face balance out. The "
#~ "speed at which the vertex is "
#~ "pulled out of the collision zone "
#~ "is influenced by the *Choke* parameter"
#~ " in the :ref:`Soft Body Solver "
#~ "settings <physics-softbody-settings-solver>`."
#~ msgstr ""

#~ msgid ""
#~ "Now lets see what happens if we"
#~ " make vertices heavier and let them"
#~ " travel at a faster speed. In "
#~ "the video above, you can see "
#~ "vertices traveling at different speeds. "
#~ "The two on the far right (5 "
#~ "and 6) are traveling so fast that"
#~ " they pass right through the "
#~ "collision zone (this is because of "
#~ "the default solver precision, which we"
#~ " can fix later). You will notice "
#~ "that the fourth vertex also travels "
#~ "quite fast and because it is "
#~ "heavier it breaches the inner zone. "
#~ "The first three vertices collide "
#~ "correctly."
#~ msgstr ""

#~ msgid "Also Edges and Faces can be used for the collision calculation."
#~ msgstr ""

#~ msgid ""
#~ "You can set up your collision so"
#~ " that edges and even faces are "
#~ "included in the collision calculation "
#~ "Fig. :ref:`fig-softbody-collision-vertex3`."
#~ " The collision is then calculated "
#~ "differently. It is checked whether the"
#~ " edge or face intersects with the "
#~ "collision object, the collision zones "
#~ "are not used."
#~ msgstr ""

#~ msgid ""
#~ "Download the `blend-file "
#~ "<https://wiki.blender.org/index.php/Media:CollidingVertices.blend>`__."
#~ msgstr ""

#~ msgid "The best way"
#~ msgstr ""

#~ msgid ""
#~ "Add *Loop Cuts* to the soft body"
#~ " object in strategic areas that you"
#~ " know are most likely to be "
#~ "involved in a collision."
#~ msgstr ""

#~ msgid ""
#~ "The soft body object must have "
#~ "more subdivisions than the collision "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "Now lets see what happens if we"
#~ " make vertices heavier and let them"
#~ " travel at a faster speed. In "
#~ "the video above, you can see "
#~ "vertices traveling at different speeds. "
#~ "The two on the far right (fifth"
#~ " and sixth) are traveling so fast "
#~ "that they pass right through the "
#~ "collision zone (this is because of "
#~ "the default solver precision, which we"
#~ " can fix later). You will notice "
#~ "that the fourth vertex also travels "
#~ "quite fast and because it is "
#~ "heavier it breaches the inner zone. "
#~ "The first three vertices collide "
#~ "correctly."
#~ msgstr ""

#~ msgid ""
#~ "If *Collision Group* is set, the "
#~ "object must belong to the group. "
#~ "Otherwise, both objects have to share"
#~ " a layer, but the layer does "
#~ "not necessarily have to be visible."
#~ msgstr ""

