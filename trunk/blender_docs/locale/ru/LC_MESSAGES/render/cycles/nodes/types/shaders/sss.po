# Этот файл является частью перевода руководства к Blender'у.
# Соответствующая страница руководства может быть получена по адресу
#   https://www.blender.org/manual/ru/render/cycles/nodes/types/shaders/sss.html
#
# Этот файл распространяется под всемирной лицензией CC-BY-SA 4.0
#   https://creativecommons.org/licenses/by-sa/4.0/deed.ru
#
# Список переводчиков
# ===================
#
# Mingun <alexander_sergey@mail.ru>, 2016.

msgid ""
msgstr ""
"Project-Id-Version: Руководство по Blender 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-07 09:50-0400\n"
"PO-Revision-Date: 2016-10-17 22:19+0500\n"
"Last-Translator: Mingun <alexander_sergey@mail.ru>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:4
msgid "Subsurface Scattering Node"
msgstr "Узел «Подп. рассеивание»"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:10
msgid "Subsurface Scattering Node."
msgstr "Узел «Подп. рассеивание»"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:12
msgid ""
"The *Subsurface Scattering* node is used to add simple subsurface "
"multiple scattering, for materials such as skin, wax, marble, milk and "
"others. For these materials, rather than light being reflect directly off"
" the surface, it will penetrate the surface and bounce around internally "
"before getting absorbed or leaving the surface at a nearby point."
msgstr ""
"Узел *«Подп. рассеивание»* используется для добавления простого "
"многократного подповерхностного рассеивания, предназначенного для "
"материалов типа кожи, воска, мрамора, молока и прочих. Эти материалы "
"отражают свет не сразу с поверхности, вместо этого он сначала проникает "
"под поверхность, отскакивает внутри несколько раз, а затем поглощается "
"или покидает её в ближайшей точке."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:17
msgid ""
"How far the color scatters on average can be configured per RGB color "
"channel. For example, for skin, red colors scatter further, which gives "
"distinctive red-colored shadows, and a soft appearance."
msgstr ""
"Насколько далеко в среднем рассеивается цвет можно настроить для каждого "
"цветового канала RGB. Например, для кожи красный цвет рассеивается "
"дальше, благодаря чему она получает отличительные красноватые тени и "
"мягкий внешний вид."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:23
msgid "Inputs"
msgstr "Входы"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:25
msgid "Color"
msgstr "Цвет"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:26
msgid ""
"Color of the surface, or physically speaking, the probability that light "
"is reflected for each wavelength."
msgstr ""
"Цвет поверхности, или, говоря языком физики, вероятность (для каждой "
"длины волны) того, что свет отразится от поверхности."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:27
msgid "Scale"
msgstr "Масштаб"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:28
msgid "Global scale factor for the scattering radius."
msgstr "Глобальный масштаб для радиуса рассеивания."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:29
msgid "Radius"
msgstr "Радиус"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:30
msgid ""
"Scattering radius for each RGB color channel, the maximum distance that "
"light can scatter."
msgstr ""
"Радиус рассеивания для каждого цветового канала RGB, то есть максимальное"
" расстояние, на которое свет проникает при рассеивании."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:32
msgid "Sharpness"
msgstr "Острогранность"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:32
msgid ""
"Used only with *Cubic* falloff. Values increasing from 0 to 1 prevents "
"softening of sharp edges and reduces unwanted darkening."
msgstr ""
"Используется только в сочетании со спадом *Кубический*. Значение в "
"диапазоне от 0 до 1 предотвращает смягчение острых рёбер и уменьшает "
"нежелательное затемнение."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:34
msgid "Normal"
msgstr "Норм."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:35
msgid ""
"Normal used for shading; if nothing is connected the default shading "
"normal is used."
msgstr ""
"Используемая для затенения нормаль; если к сокету не привязано никакого "
"узла, будет использоваться нормаль по-умолчанию."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:46
msgid "Texture Blur"
msgstr "Размытие текстуры"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:37
msgid ""
"How much of the texture will be blurred along with the lighting, mixing "
"the texture at the incoming and outgoing points on the surface. Note that"
" the right choice depends on the texture. Consider for example a texture "
"created from a photograph of skin, in this cases the colors will already "
"be pre-blurred and texture blur could be set to 0. Even for hand painted "
"textures no or minimal blurring might be appropriate, as a texture artist"
" would likely paint in softening already, one would usually not even know"
" what an unblurred skin texture looks like, we always see it blurred. For"
" a procedural texture on the other hand this option would likely have a "
"higher value."
msgstr ""
"Насколько будет размыта текстура при освещении; смешивает текстуру с "
"точки входа и точки выхода луча света. Обратите внимание, что правильный "
"выбор зависит от текстуры. Рассмотрим, к примеру, текстуру, созданную из "
"фотографии кожи, в этом случае цвета уже будут предварительно размыты и "
"размытие текстуры можно установить в 0. Даже для вручную созданных "
"текстур может быть уместно отсутствие размытия, либо же минимальное "
"размытие, поскольку художник по текстурам, скорее всего, и так уже "
"смягчил её при рисовании. Обычно мы даже не подозреваем, как выглядит не "
"размытая текстура кожи, поскольку мы всегда видим её размытой. С другой "
"стороны, если текстура создана процедурно, этому параметру, скорее всего,"
" следует задать более высокое значение."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:49
msgid "Properties"
msgstr "Свойства"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:65
msgid "Falloff"
msgstr "Спад"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:52
msgid "Lighting distance falloff function."
msgstr "Функция спада интенсивности освещения в зависимости от расстояния."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:54
msgid "Cubic"
msgstr "Кубический"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:55
msgid ""
"Is a sharp falloff useful for many simple materials. The function is "
":math:`(radius - x)^3`."
msgstr ""
"Этот резкий спад полезен для многих простых материалов. Функция спада: "
":math:`(радиус - x)^3`."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:61
msgid "Gaussian"
msgstr "Гауссовский"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:57
msgid ""
"Gives a smoother falloff following a normal distribution, which is "
"particularly useful for more advanced materials that use measured data "
"that was fitted to one or more such Gaussian functions. The function is "
":math:`e^{-8x^2/ radius^2}`, such that the radius roughly matches the "
"maximum falloff distance. To match a given measured variance *v*, set "
":math:`radius = sqrt(16 × v)`."
msgstr ""
"Даёт более плавный спад по нормальному распределению, который особенно "
"полезен для более сложных материалов, использующих подобранные данные, "
"соответствующие одной или нескольким таким функциям Гаусса. Функция спада"
" – :math:`e^{-8x^2/ радиус^2}`, так что, что радиус примерно "
"соответствует максимальному расстоянию затухания. Для соответствия "
"заданной измеренной дисперсии *v*, установите :math:`радиус = sqrt(16 × "
"v)`."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:65
msgid "Christensen-Burley"
msgstr "Christensen-Burley (Кристенсен-Бурлей)"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:64
msgid ""
"Is an approximation to physically based volume scattering. Gives less "
"blurry results than Cubic and Gaussian functions."
msgstr ""
"Это приближение физически корректного рассеивания в объёме. Даёт менее "
"размытые результаты, нежели *Кубический* или *Гауссовский* спады."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:68
msgid "Outputs"
msgstr "Выходы"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:72
msgid "BSSRDF"
msgstr "BSSRDF"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:71
msgid ""
":abbr:`BSSRDF (Bidirectional subsurface scattering distribution "
"function)` shader output."
msgstr ""
"Выход шейдера :abbr:`BSSRDF (Bidirectional subsurface scattering "
"distribution function - функция двунаправленного подповерхностного "
"рассеивания отражения)`."

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:75
msgid "Examples"
msgstr "Примеры"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:79
msgid "A skin-toned SSS shader with color radius (1.0, 0.8, 0.5)."
msgstr ""
"Шейдер подповерхностного рассеивания для кожи с цветовыми радиусами (1.0,"
" 0.8, 0.5)"

