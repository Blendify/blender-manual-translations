# Этот файл является частью перевода руководства к Blender'у.
# Соответствующая страница руководства может быть получена по адресу
#
#
# https://docs.blender.org/manual/ru/dev/render/cycles/optimizations/reducing_noise.html
# Этот файл распространяется под всемирной лицензией CC-BY-SA 4.0
# https://creativecommons.org/licenses/by-sa/4.0/deed.ru
# Список переводчиков
# ===================
# Mingun <alexander_sergey@mail.ru>, 2016 - 2017.
msgid ""
msgstr ""
"Project-Id-Version: Руководство по Blender 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-09-13 14:59+1000\n"
"PO-Revision-Date: 2017-02-23 18:30+0500\n"
"Last-Translator: Mingun <alexander_sergey@mail.ru>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.0\n"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:4
msgid "Reducing Noise"
msgstr "Уменьшение шума"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:6
msgid ""
"When performing a final render, it is important to reduce noise as much "
"as possible. Here we will discuss a number of tricks that, while breaking"
" the laws of physics, are particularly important when rendering "
"animations within a reasonable time. Click to enlarge the example images "
"to see the noise differences well."
msgstr ""
"При выполнении окончательной визуализации важно как можно сильнее "
"уменьшить. Здесь мы обсудим ряд хитростей, которые, хотя и нарушают "
"законы физики, особенно важны при визуализации анимации за разумный "
"период времени. Нажимайте на миниатюры для увеличения изображений, чтобы "
"как следует рассмотреть различия в количестве шумов."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:13
msgid "Path Tracing"
msgstr "Трассировка путей"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:15
msgid ""
"Cycles uses path tracing with next event estimation, which is not good at"
" rendering all types of light effects, like caustics, but has the "
"advantage of being able to render more detailed and larger scenes "
"compared to some other rendering algorithms. This is because we do not "
"need to store, for example, a photon map in memory, and because we can "
"keep rays relatively coherent to use an on-demand image cache, compared "
"to e.g. bidirectional path tracing."
msgstr ""
"Cycles использует трассировку путей с последующей оценкой событий, "
"которая не очень хорошо подходит для визуализации всех видов световых "
"эффектов, например, каустик, но имеет преимущество в том, что в состоянии"
" визуализировать более детальные и большие сцены по сравнению с "
"некоторыми другими алгоритмами визуализации. Это происходит потому, что "
"нам не нужно, например, хранить в памяти фотонную карту, а так же потому,"
" что мы можем сохранять лучи относительно когерентными для использования "
"в кэше изображений по требованию, по сравнению с, например, "
"двунаправленной трассировкой пути."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:25
msgid ""
"We do the inverse of what reality does, tracing light rays from the "
"camera into the scene and onto lights, rather than from the light sources"
" into the scene and then into the camera. This has the advantage that we "
"do not waste light rays that will not end up in the camera, but also "
"means that it is difficult to find some light paths that may contribute a"
" lot. Light rays will be sent either according to the surface BRDF, or in"
" the direction of known light sources (lamps, emitting meshes with Sample"
" as Lamp)."
msgstr ""
"Мы работаем по противоположному, по сравнению с реальностью, пути, "
"отслеживая световые лучи, испущенные из камеры в сцену и на источники "
"света, а не от источников света в сцену, а затем в камеру. Этот подход "
"имеет то преимущество, что мы не испускаем световые лучи, которые в "
"конечном итоге не попадут в камеру, но это также означает, что довольно "
"трудно определить такие световые пути, которые дают наибольший вклад в "
"освещение. Световые лучи будут посылаться либо в соответствии с BRDF "
"поверхности, либо в направлении известных источников света (лампы, "
"излучающие полисетки с выборками как от ламп)."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:35
#, fuzzy
msgid ""
"For more details, see the :doc:`Light Paths "
"</render/cycles/settings/scene/render/light_paths>` and :doc:`Integrator "
"</render/cycles/settings/scene/render/integrator>` documentation."
msgstr ""
"Подробности смотрите в документации по :doc:`световым путям "
"</render/cycles/settings/light_paths>` и :doc:`интегратору "
"</render/cycles/settings/integrator>`."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:41
msgid "Where Noise Comes From"
msgstr "Почему возникает шум"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:43
msgid ""
"To understand where noise can come from, take for example the scene "
"below. When we trace a light ray into the location marked by the white "
"circle on a red dot, the second image below gives an impression of what "
"the diffuse shader \"sees\"."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:47
msgid ""
"To find the light that is reflected from this surface, we need to find "
"the average color from all these pixels. Note the glossy highlight on the"
" sphere, and the bright spot the lamp casts on the nearby wall. These "
"hotspots are 100x brighter than other parts of the image and will "
"contribute significantly to the lighting of this pixel."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:58
msgid "The Scene."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:63
#: ../../manual/render/cycles/optimizations/reducing_noise.rst:95
msgid "What the Shader sees."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:68
#: ../../manual/render/cycles/optimizations/reducing_noise.rst:100
msgid "The detected Highlights."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:71
#, fuzzy
msgid ""
"The lamp is a known light source, so its location is already known, but "
"the glossy highlight(s) that it causes are a different matter. The best "
"we can do with path tracing is to distribute light rays randomly over the"
" hemisphere, hoping to find all the important bright spots. If for some "
"pixels we miss some bright spot, but we do find it for another, that "
"results in noise. The more samples we take, the higher the probability "
"that we cover all the important sources of light."
msgstr ""
"Лампа является известным источником света, так что её не так сложно "
"найти, но вызываемый ей глянцевый блик - это совсем другое дело. Лучшее, "
"что мы можем сделать - это оттрассировать пути от световых лучей, "
"случайным образом распределённых по полусфере, в надежде найти все важные"
" яркие пятна. Если для некоторых пикселей мы пропускаем некоторые яркие "
"пятна, но находим их для других, это приводит к шуму. Чем больше выборок "
"мы делаем, тем выше вероятность того, что мы покроем все важные источники"
" света."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:78
#, fuzzy
msgid ""
"With some tricks we can reduce this noise. If we blur the bright spots, "
"they become bigger and less intense, making them easier to find and less "
"noisy. This will not give the same exact result, but often it's close "
"enough when viewed through a diffuse or soft glossy reflection. Below is "
"an example of using :ref:`Filter Glossy <render-cycles-integrator-filter-"
"glossy>` and :doc:`Light Falloff "
"</render/cycles/nodes/types/color/light_falloff>`."
msgstr ""
"Используя некоторые хитрости, мы можем уменьшить этот шум. Если мы "
"размоем яркие пятна, они станут больше и менее интенсивными, так что их "
"станет проще найти и это уменьшит шум. Это не даст нам в точности тот же "
"самый результат, но часто он достаточно близок, если смотреть на него "
"через диффузное или мягкое глянцевое отражение. Ниже приведен пример "
"использования Фильтра глянца и Сглаживающего спада света."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:90
msgid "Using Glossy Filter & Light Falloff."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:104
msgid "Bounces"
msgstr "Отскоки"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:106
#, fuzzy
msgid ""
"In reality light will bounce a huge number of times due to the speed of "
"light being very high. In practice more bounces will introduce more "
"noise, and it might be good to use something like the Limited Global "
"Illumination preset in the :ref:`Light Paths <render-cycles-integrator-"
"light-paths>` Section that uses *fewer* bounces for different shader "
"types. Diffuse surfaces typically can get away with fewer bounces, while "
"glossy surfaces need a few more, and transmission shaders such as glass "
"usually need the most."
msgstr ""
"В реальности свет будет отскакивать огромное количество раз, поскольку "
"скорость света очень большая. На практике, большее количество отскоков "
"порождает большее количество шума, и хорошо бы использовать какую-нибудь "
"предустановку, вроде Ограниченного глобального освещения, что бы "
"использовать *меньше* отскоков для различных типов шейдеров. Для "
"диффузных поверхностей, как правило, достаточно малого количества "
"отскоков, для глянцевых поверхностей их уже нужно несколько больше, а "
"шейдерам передачи, таким как стекло, как правило, нужно больше всего "
"отскоков."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:119
#, fuzzy
msgid "No bounces."
msgstr "Отскоки"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:124
msgid "Two bounces at max."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:129
msgid "Four bounces at max."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:131
msgid ""
"Also important is to use shader colors that do **not** have components of"
" value 1.0 or values near that; try to keep the maximum value to 0.8 or "
"less and make your lights brighter. In reality, surfaces are rarely "
"perfectly reflecting all light, but there are of course exceptions; "
"usually glass will let most light through, which is why we need more "
"bounces there. High values for the color components tend to introduce "
"noise because light intensity then does not decrease much as it bounces "
"off each surface."
msgstr ""
"Также важно **не использовать** в шейдерах цвета, чьи компоненты содержат"
" значения 1.0 или близкие к ним; пытайтесь держать максимальное значение "
"в районе 0.8 или меньше и сделать ваши источники света ярче. В "
"действительности, поверхности редко полностью отражает весь свет, но "
"есть, конечно, исключения; как правило, через стекло проходит больше "
"света, поэтому для него нужно больше отскоков. Высокие значения для "
"цветовых компонентов, как правило, вносят шум, поскольку при отскоках от "
"каждой поерхности интенсивность света уменьшается не сильно."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:141
msgid "Caustics and Filter Glossy"
msgstr "Каустики и фильтр глянца"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:143
msgid ""
"Caustics are a well-known source of noise, causing fireflies. They happen"
" because the renderer has difficulty finding specular highlights viewed "
"through a soft glossy or diffuse reflection. There is a :ref:`No Caustics"
" <render-cycles-integrator-no-caustics>` option to disable glossy behind "
"a diffuse reflection entirely. Many render engines will typically disable"
" caustics by default."
msgstr ""
"Каустики - это хорошо известные источники шума, вызывающие светлячки. Они"
" возникают потому, что рендеру трудно найти блики при рассматривании их "
"через мягкое глянцевое или диффузное отражение. Существует :ref:`параметр"
" <render-cycles-integrator-no-caustics>`, целиком отключающий глянцевое "
"отражение после диффузного отражения. Многие движки визуализации обычно "
"отключают каустики по умолчанию."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:155
msgid "Default Settings."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:160
msgid "Caustics Disabled."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:165
msgid "Filter Glossy greater than zero."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:167
msgid ""
"However, using No Caustics will result in missing light, and it still "
"does not cover the case where a sharp glossy reflection is viewed through"
" a soft glossy reflection. There is a :ref:`Filter Glossy <render-cycles-"
"integrator-filter-glossy>` option to reduce the noise from such cases at "
"the cost of accuracy. This will blur the sharp glossy reflection to make "
"it easier to find, by increasing the shader Roughness."
msgstr ""
"Однако, использование параметра *Без каустик* ведёт к потере света, кроме"
" того, он не покрывает случай, когда резкое глянцевое отражение "
"рассматривается сквозь мягкое глянцевое отражение. Существует параметр "
":ref:`Фильтр глянца <render-cycles-integrator-filter-glossy>`, "
"уменьшающий шум в таких случаях за счёт точности. Он размывает резкое "
"глянцевое отражение, чтобы его было проще найти, увеличивая Шероховатость"
" шейдера."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:173
msgid ""
"The above images show default settings, no caustics, and filter glossy "
"set to 1.0."
msgstr ""
"Изображения выше показывают разницу между настройками по умолчанию, с "
"отключёнными каустиками и с фильтром глянца, установленным в 1.0."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:177
msgid "Light Falloff"
msgstr "Спад света"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:179
msgid ""
"In reality light in a vacuum will always fall off at a rate of "
"1/(distance^2). However, as distance goes to zero, this value goes to "
"infinity and we can get very bright spots in the image. These are mostly "
"a problem for indirect lighting, where the probability of hitting such a "
"small but extremely bright spot is low and so happens only rarely. This "
"is a typical recipe for fireflies."
msgstr ""
"В реальности интенсивность света в вакууме спадает со скоростью "
"1/(расстояние^2). Однако, если расстояние стремится к нулю, эта величина "
"стремится к бесконечности, и мы можем получить очень яркие пятна на "
"изображении. В основном это проблема для непрямого освещения, у которого "
"вероятность попадания в небольшое, но очень яркое пятно довольно низка и "
"оно случается редко. Это типичный способ возникновения светлячков."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:191
#, fuzzy
msgid "Hard Falloff."
msgstr "Спад света"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:196
#, fuzzy
msgid "Soft Falloff."
msgstr "Спад света"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:198
msgid ""
"To reduce this problem, the :doc:`Light Falloff "
"</render/cycles/nodes/types/color/light_falloff>` node has a *Smooth "
"factor*, that can be used to reduce the maximum intensity a light can "
"contribute to nearby surfaces. The images above show default falloff and "
"smooth value 1.0."
msgstr ""
"Для уменьшения данной проблемы узел :doc:`Спад света "
"</render/cycles/nodes/types/color/light_falloff>` имеет параметр "
"*Гладко*, который может использоваться для уменьшения максимальной "
"интенсивности света, который вносят ближайшие поерхности. Изображения "
"выше показывают разницу между спадом по умолчанию и сглаживанием со "
"значением 1.0."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:204
msgid "Multiple Importance Sampling"
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:206
#, fuzzy
msgid ""
"Materials with emission shaders can be configured to use Multiple "
"Importance Sampling (:doc:`/render/cycles/materials/settings`). This "
"means that they will get rays sent directly towards them, rather than "
"ending up there based on rays randomly bouncing around. For very bright "
"mesh light sources, this can reduce noise significantly. However, when "
"the emission is not particularly bright, this will take samples away from"
" other brighter light sources for which it is important to find them this"
" way."
msgstr ""
"Материалы с шейдерами излучения могут быть сконфигурированы для *выборки "
"как у лампы* (:doc:`/render/cycles/materials/settings`). Это значит, что "
"они будут получать лучи, направленные непосредственно к ним, а не после "
"случайного количества отскоков. При использовании очень ярких полисеток "
"это может значительно снизить шумы. Однако, если излучение не является "
"особенно ярким, оно будет отбирать выборки от других ярких источников "
"света, для которых важно, чтобы их нашли таким образом."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:214
#, fuzzy
msgid ""
"The optimal setting here is difficult to guess; it may be a matter of "
"trial and error, but often it is clear that a somewhat glowing object may"
" be only contributing light locally, while a mesh light used as a lamp "
"would need this option enabled. Here is an example where the emissive "
"spheres contribute little to the lighting, and the image renders with "
"slightly less noise by disabling Multiple Importance on them."
msgstr ""
"В данном случае довольно трудно угадать оптимальную настройку; она может "
"быть установлена путём проб и ошибок, но часто становится ясно, какой "
"светящийся объект влияет только на своё ближайшее окружение, а когда свет"
" от полисетки используется как лампа и для неё нужно включать этот "
"параметр. Ниже приведён пример, в котором сферы с излучением мало "
"способствуют общему освещению, и изображение визуализируется с чуть "
"меньшим шумом при отключении у них выборок как у лампы."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:225
msgid "Multiple Importance off."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:230
msgid "Multiple Importance on."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:232
#, fuzzy
msgid ""
"The world background also has a *Multiple Importance* (:ref:`render-"
"cycles-integrator-world-settings`) option. This is mostly useful for "
"environment maps that have small bright spots in them, rather than being "
"smooth. This option will then, in a preprocess, determine the bright "
"spots, and send light rays directly towards them. Again, enabling this "
"option may take samples away from more important light sources if it is "
"not needed."
msgstr ""
"Фон окружающей среды так же имеет параметр *выборка как у лампы* (:ref"
":`render-cycles-integrator-world-settings`). Он в основном полезен для "
"карт окружения, на которых имеются небольшие яркие пятна. Если этот "
"параметр активен, при препроцессировании будут определены яркие пятна и "
"световые лучи быдут посылаться непосредственно к ним. Опять же, включение"
" этого параметра, если он не нужен, может отобрать выборки от более "
"важных источников света."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:241
msgid "Glass and Transparent Shadows"
msgstr "Стекло и прозрачные тени"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:243
msgid ""
"With caustics disabled, glass will miss shadows, and with filter glossy "
"they might be too soft. We can make a glass shader that will use a Glass "
"BSDF when viewed *directly*, and a Transparent BSDF when viewed "
"*indirectly*. The Transparent BSDF can be used for transparent shadows to"
" find light sources straight through surfaces, and will give properly-"
"colored shadows, but without the caustics. The Light Path node is used to"
" determine when to use which of the two shaders."
msgstr ""
"При отключении каустик стеклу будет не хватать теней, а с фильтром глянца"
" они могут быть слишком мягкими. Мы можем сделать шейдер шейдер, который "
"будет использовать шейдер «BSDF стекла», если смотреть *прямо на него*, и"
" шейдер «Прозрачный BSDF», если смотреть через отражение. Шейдер "
"«Прозрачный BSDF» может использоваться для прозрачных теней, чтобы "
"находить источники света прямо через поверхности, и даст правильные "
"цветные тени, но без каустик. Для определения того, когда какой шейдер "
"использовать, используется узел «Путь света»."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:253
msgid "Optimized glass shader."
msgstr "Оптимизированный шейдер стекла"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:256
msgid ""
"Above we can see the node setup used for the glass transparency trick; on"
" the left the render has too much shadow due to missing caustics, and on "
"the right the render with the trick."
msgstr ""
"Выше вы можете видеть дерево узлов, используемое для хитрости с "
"прозрачностью стекла; на левой визуализации присутствует слишком много "
"тени, поскольку нет каустик, на правой визуализации используется данная "
"хитрость."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:265
msgid "Default Glas BSDF."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:270
#, fuzzy
msgid "Optimized Glass Shader."
msgstr "Оптимизированный шейдер стекла"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:274
msgid "Light Portals"
msgstr "Световые порталы"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:276
msgid ""
"When rendering a daylight indoor scene where most of the light is coming "
"in through a window or door opening, it is difficult for the integrator "
"to find its way to them. To fix this, use :ref:`Light Portals <render-"
"cycles-lamps-area-portals>`, these work by adding a :ref:`Area Lamp "
"<render-cycles-lamps-area>`. You then will need to modify its shape to "
"match that of the opening that you are trying to fill."
msgstr ""
"При визуализации сцен в помещении при дневном освещении, когда большая "
"часть света поступает через окно или дверной проём, интегратору трудно "
"найти к ним световой путь. Чтобы исправить это, используйте "
":ref:`световые порталы <render-cycles-lamps-area-portals>`, которые "
"работают через добавление :ref:`ламп-областей <render-cycles-lamps-"
"area>`. Затем вам нужно будет изменить их форму, чтобы она совпала с "
"отверстием, которое вы хотите закрыть."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:287
msgid "Denoising"
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:289
msgid ""
"Even with all the settings described above there will always end up being"
" some render noise no matter how many samples you use. To fix this there "
"is a post processing technique to cleanup the final bit of noise. To use "
"this enable :doc:`Denoising "
"</render/cycles/settings/scene/render_layers/denoising>` in the *Render "
"Layers* tab of the Properties editor."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:295
msgid ""
"Below is an example render by `The Pixelary "
"<http://blog.thepixelary.com/post/160451378592/denoising-in-cycles-"
"tested>`__."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:302
msgid "Example render before denoising."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:306
msgid "Example render after denoising."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:312
msgid "Clamp Fireflies"
msgstr "Подавление светлячков"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:314
msgid ""
"Ideally with all the previous tricks, fireflies would be eliminated, but "
"they could still happen. For that, the *intensity* that any individual "
"light ray sample will contribute to a pixel can be *clamped* to a maximum"
" value with the integrator :ref:`Clamp setting <render-cycles-integrator-"
"clamp-samples>`."
msgstr ""
"В идеале, используя все предыдущие уловки, светлячки будут устранены, "
"однако они всё ещё могут возникнуть. Чтобы справиться с ними, "
"*интенсивность* любого светового луча, вносящего вклад в освещение "
"пикселя, может быть *ограничена* максимальным значением :ref:`настройками"
" интегратора <render-cycles-integrator-clamp-samples>`."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:318
msgid ""
"If set too low this can cause missing highlights in the image, which "
"might be useful to preserve for camera effects such as bloom or glare. To"
" mitigate this conundrum it's often useful to clamp only indirect "
"bounces, leaving highlights directly visible to the camera untouched."
msgstr ""
"Если параметр установлен в слишком низкое значение, это может привести к "
"отсутствию бликов на изображении, которые могут быть полезны для "
"сохранения эффектов камеры, таких как засветка или блики. Чтобы смягчить "
"это противоречие, часто бывает полезно ограничивать только непрямые "
"отскоки, оставляя нетронутыми блики, непосредственно видимые камерой."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:328
msgid "No Clamp (0)."
msgstr ""

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:333
msgid "With Clamp set to 4."
msgstr ""

#~ msgid ""
#~ "To understand where noise can come "
#~ "from, take for example this scene. "
#~ "When we trace a light ray into "
#~ "the specified location, this is what "
#~ "the diffuse shader \"sees\". To find "
#~ "the light that is reflected from "
#~ "this surface, we need to find the"
#~ " average color from all these pixels."
#~ " Note the glossy highlight on the "
#~ "sphere, and the bright spot the "
#~ "lamp casts on the nearby wall. "
#~ "These hotspots are 100x brighter than"
#~ " other parts of the image and "
#~ "will contribute significantly to the "
#~ "lighting of this pixel."
#~ msgstr ""
#~ "Для понимания того, откуда возникает "
#~ "шум, возьмём для примера указанную "
#~ "сцену. Когда мы пускаем световой луч "
#~ "в указанное место, именно его и "
#~ "«видит» диффузный шейдер. Для того, "
#~ "чтобы найти свет, отразившийся от этой"
#~ " поверхности, мы должны найти средний "
#~ "цвет от всех этих пикселей. Обратите "
#~ "внимание на глянцевый блик на сфере, "
#~ "а также на яркое пятно света, "
#~ "которое даёт лампа на соседней стене."
#~ " Эти горячие точки в 100 раз "
#~ "ярче остальных частей изображения и "
#~ "вносят значительный вклад в освещение "
#~ "этого пикселя."

#~ msgid "Sample as Lamp"
#~ msgstr "Выборка как у лампы"

