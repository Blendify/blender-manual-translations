# Этот файл является частью перевода руководства к Blender'у.
# Соответствующая страница руководства может быть получена по адресу
# https://docs.blender.org/manual/ru/dev/editors/python_console.html
#
# Этот файл распространяется под всемирной лицензией CC-BY-SA 4.0
# https://creativecommons.org/licenses/by-sa/4.0/deed.ru
msgid ""
msgstr ""
"Project-Id-Version: Руководство по Blender 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-27 20:49-0600\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/editors/python_console.rst:7
msgid "Python Console"
msgstr ""

#: ../../manual/editors/python_console.rst:9
msgid ""
"The Python Console is a quick way to execute commands, with access to the"
" entire Python API, command history and auto-complete. The command prompt"
" is typical for Python 3.x, the interpreter is loaded and is ready to "
"accept commands at the prompt ``>>>``."
msgstr ""

#: ../../manual/editors/python_console.rst:14
msgid ""
"The Python Console is a good way to explore the possibilities of Blender "
"built-in Python. The Python Console can be used to test small bits of "
"Python code which can then be pasted into larger scripts."
msgstr ""

#: ../../manual/editors/python_console.rst:19
msgid "Python Console."
msgstr ""

#: ../../manual/editors/python_console.rst:23
msgid "Interface"
msgstr ""

#: ../../manual/editors/python_console.rst:26
msgid "Header Menus"
msgstr ""

#: ../../manual/editors/python_console.rst:29
msgid "View Menu"
msgstr ""

#: ../../manual/editors/python_console.rst:31
msgid "Zoom In / Zoom Out"
msgstr ""

#: ../../manual/editors/python_console.rst:32
msgid "Increases/Decreases the font size of the console text."
msgstr ""

#: ../../manual/editors/python_console.rst:34
msgid "Move to Previous Word :kbd:`Ctrl-Left`"
msgstr ""

#: ../../manual/editors/python_console.rst:34
msgid ""
"Moves the cursor to the beginning of the previous word. If the cursor is "
"in the middle of a word, the cursor is moved to the beginning of the "
"current word."
msgstr ""

#: ../../manual/editors/python_console.rst:37
msgid "Move to Next Word :kbd:`Ctrl-Right`"
msgstr ""

#: ../../manual/editors/python_console.rst:37
msgid ""
"Moves the cursor to the end of the next word. If the cursor is in the "
"middle of a word, the cursor is moved to the end of the current word."
msgstr ""

#: ../../manual/editors/python_console.rst:39
msgid "Move to Line Begin :kbd:`Home`"
msgstr ""

#: ../../manual/editors/python_console.rst:40
msgid "Moves the cursor to the start of the current line."
msgstr ""

#: ../../manual/editors/python_console.rst:43
msgid "Move to Line End :kbd:`End`"
msgstr ""

#: ../../manual/editors/python_console.rst:42
msgid "Moves the cursor to the end of the current line."
msgstr ""

#: ../../manual/editors/python_console.rst:46
msgid "Console Menu"
msgstr ""

#: ../../manual/editors/python_console.rst:49
msgid "Clear All"
msgstr ""

#: ../../manual/editors/python_console.rst:49
msgid ""
"Refreshes the console giving the view a fresh start. Note that command "
"history is not cleared."
msgstr ""

#: ../../manual/editors/python_console.rst:51
msgid "Clear Line :kbd:`Shift-Return`."
msgstr ""

#: ../../manual/editors/python_console.rst:52
msgid "Removes everything from the prompt line."
msgstr ""

#: ../../manual/editors/python_console.rst:54
msgid "Delete Previous Word :kbd:`Ctrl-Backspace`"
msgstr ""

#: ../../manual/editors/python_console.rst:54
msgid ""
"Deletes everything between the cursor and the beginning of the previous "
"word (separated by periods). If the cursor is in the middle of a word, "
"deletes everything to the beginning of the current word."
msgstr ""

#: ../../manual/editors/python_console.rst:57
msgid "Delete Next Word :kbd:`Ctrl-Delete`"
msgstr ""

#: ../../manual/editors/python_console.rst:57
msgid ""
"Deletes everything between the cursor and the end of the next word. If "
"the cursor is in the middle of a word, deletes everything to the end of "
"the current word."
msgstr ""

#: ../../manual/editors/python_console.rst:60
msgid "Copy as Script :kbd:`Shift-Ctrl-C`"
msgstr ""

#: ../../manual/editors/python_console.rst:60
msgid ""
"Copies the full history buffer to the clipboard, this can be pasted into "
"a text file to be used as a Python script."
msgstr ""

#: ../../manual/editors/python_console.rst:62
msgid "Copy :kbd:`Ctrl-C`"
msgstr ""

#: ../../manual/editors/python_console.rst:63
msgid "Copy the selection."
msgstr ""

#: ../../manual/editors/python_console.rst:64
msgid "Paste :kbd:`Ctrl-V`"
msgstr ""

#: ../../manual/editors/python_console.rst:65
msgid "Paste into the command line."
msgstr ""

#: ../../manual/editors/python_console.rst:66
msgid "Indent :kbd:`Tab`"
msgstr ""

#: ../../manual/editors/python_console.rst:67
msgid "Inserts a tab character at the cursor."
msgstr ""

#: ../../manual/editors/python_console.rst:68
msgid "Unindent :kbd:`Shift-Tab`"
msgstr ""

#: ../../manual/editors/python_console.rst:69
msgid "Unindents the selection."
msgstr ""

#: ../../manual/editors/python_console.rst:70
msgid "Backward in History :kbd:`Up`"
msgstr ""

#: ../../manual/editors/python_console.rst:71
msgid ""
"Changes the current command to previous command as they appear in the "
"command history."
msgstr ""

#: ../../manual/editors/python_console.rst:72
msgid "Forward in History :kbd:`Down`"
msgstr ""

#: ../../manual/editors/python_console.rst:73
msgid ""
"Changes the current command to next command as they appear in the command"
" history."
msgstr ""

#: ../../manual/editors/python_console.rst:76
msgid "Autocomplete :kbd:`Tab`"
msgstr ""

#: ../../manual/editors/python_console.rst:75
msgid "See `Auto Completion`_ for more information."
msgstr ""

#: ../../manual/editors/python_console.rst:79
msgid "Main View"
msgstr ""

#: ../../manual/editors/python_console.rst:82
msgid "Key Bindings"
msgstr ""

#: ../../manual/editors/python_console.rst:83
msgid ":kbd:`Left` / :kbd:`Right` -- Cursor motion."
msgstr ""

#: ../../manual/editors/python_console.rst:84
msgid ":kbd:`Ctrl-Left` / :kbd:`Ctrl-Right` -- Cursor motion, by word."
msgstr ""

#: ../../manual/editors/python_console.rst:85
msgid ":kbd:`Backspace` / :kbd:`Delete` -- Erase characters."
msgstr ""

#: ../../manual/editors/python_console.rst:86
msgid ":kbd:`Ctrl-Backspace` / :kbd:`Ctrl-Delete` -- Erase words."
msgstr ""

#: ../../manual/editors/python_console.rst:87
msgid ":kbd:`Return` -- Execute command."
msgstr ""

#: ../../manual/editors/python_console.rst:88
msgid ":kbd:`Shift-Return` -- Add to command history without executing."
msgstr ""

#: ../../manual/editors/python_console.rst:92
msgid "Usage"
msgstr ""

#: ../../manual/editors/python_console.rst:95
msgid "Aliases"
msgstr ""

#: ../../manual/editors/python_console.rst:97
msgid "Some variables and modules are available for convenience:"
msgstr ""

#: ../../manual/editors/python_console.rst:99
msgid "``C``: Quick access to ``bpy.context``."
msgstr ""

#: ../../manual/editors/python_console.rst:100
msgid "``D``: Quick access to ``bpy.data``."
msgstr ""

#: ../../manual/editors/python_console.rst:101
msgid "``bpy``: Top level Blender Python API module."
msgstr ""

#: ../../manual/editors/python_console.rst:105
msgid "First Look at the Console Environment"
msgstr ""

#: ../../manual/editors/python_console.rst:107
msgid ""
"To check what is loaded into the interpreter environment, type ``dir()`` "
"at the prompt and execute it."
msgstr ""

#: ../../manual/editors/python_console.rst:116
msgid "Auto Completion"
msgstr ""

#: ../../manual/editors/python_console.rst:118
msgid ""
"Now, type ``bpy.`` and then press :kbd:`Tab` and you will see the Console"
" auto-complete feature in action."
msgstr ""

#: ../../manual/editors/python_console.rst:123
msgid ""
"You will notice that a list of sub-modules inside of ``bpy`` appear. "
"These modules encapsulate all that we can do with Blender Python API and "
"are very powerful tools."
msgstr ""

#: ../../manual/editors/python_console.rst:126
msgid "Lets list all the contents of ``bpy.app`` module."
msgstr ""

#: ../../manual/editors/python_console.rst:128
msgid ""
"Notice the green output above the prompt where you enabled auto-"
"completion. What you see is the result of auto completion listing. In the"
" above listing all are module attributed names, but if you see any name "
"end with ``(``, then that is a function."
msgstr ""

#: ../../manual/editors/python_console.rst:133
msgid ""
"We will make use of this a lot to help our learning the API faster. Now "
"that you got a hang of this, lets proceed to investigate some of modules "
"in ``bpy``."
msgstr ""

#: ../../manual/editors/python_console.rst:138
msgid "Before Tinkering with the Modules"
msgstr ""

#: ../../manual/editors/python_console.rst:140
msgid ""
"If you look at the 3D View in the default Blender scene, you will notice "
"three objects: Cube, Light and Camera."
msgstr ""

#: ../../manual/editors/python_console.rst:143
msgid ""
"All objects exist in a context and there can be various modes under which"
" they are operated upon."
msgstr ""

#: ../../manual/editors/python_console.rst:144
msgid ""
"At any instance, only one object is active and there can be more than one"
" selected object."
msgstr ""

#: ../../manual/editors/python_console.rst:145
msgid "All objects are data in the blend-file."
msgstr ""

#: ../../manual/editors/python_console.rst:146
msgid "There are operators/functions that create and modify these objects."
msgstr ""

#: ../../manual/editors/python_console.rst:148
msgid ""
"For all the scenarios listed above (not all were listed, mind you...) the"
" ``bpy`` module provides functionality to access and modify data."
msgstr ""

#: ../../manual/editors/python_console.rst:153
msgid "Examples"
msgstr ""

#: ../../manual/editors/python_console.rst:156
msgid "bpy.context"
msgstr ""

#: ../../manual/editors/python_console.rst:160
msgid ""
"For the commands below to show the proper output, make sure you have "
"selected object(s) in the 3D View."
msgstr ""

#: ../../manual/editors/python_console.rst:166
msgid "``bpy.context.mode``"
msgstr ""

#: ../../manual/editors/python_console.rst:166
msgid "Will print the current 3D View mode (Object, Edit, Sculpt, etc.)."
msgstr ""

#: ../../manual/editors/python_console.rst:169
msgid "``bpy.context.object`` or ``bpy.context.active_object``"
msgstr ""

#: ../../manual/editors/python_console.rst:169
msgid "Will give you access to the active object in the 3D View."
msgstr ""

#: ../../manual/editors/python_console.rst:171
msgid "Change the X location to a value of 1::"
msgstr ""

#: ../../manual/editors/python_console.rst:175
msgid "Move the object from previous X location by 0.5 unit::"
msgstr ""

#: ../../manual/editors/python_console.rst:179
msgid "Change the X, Y, Z location::"
msgstr ""

#: ../../manual/editors/python_console.rst:183
msgid "Change only the X, Y components::"
msgstr ""

#: ../../manual/editors/python_console.rst:187
msgid "The data type of object's location::"
msgstr ""

#: ../../manual/editors/python_console.rst:191
msgid "Now that is a lot of data that you have access to::"
msgstr ""

#: ../../manual/editors/python_console.rst:197
msgid "``bpy.context.selected_objects``"
msgstr ""

#: ../../manual/editors/python_console.rst:197
msgid "Will give access to a list of all selected objects."
msgstr ""

#: ../../manual/editors/python_console.rst:199
msgid "Type this and then press :kbd:`Tab`::"
msgstr ""

#: ../../manual/editors/python_console.rst:203
msgid "To print out the name of first object in the list::"
msgstr ""

#: ../../manual/editors/python_console.rst:207
msgid ""
"The complex one... But this prints a list of objects not including the "
"active object::"
msgstr ""

#: ../../manual/editors/python_console.rst:213
msgid "bpy.data"
msgstr ""

#: ../../manual/editors/python_console.rst:215
msgid ""
"``bpy.data`` has functions and attributes that give you access to all the"
" data in the blend-file."
msgstr ""

#: ../../manual/editors/python_console.rst:217
msgid ""
"You can access following data in the current blend-file: objects, meshes,"
" materials, textures, scenes, screens, sounds, scripts, etc."
msgstr ""

#: ../../manual/editors/python_console.rst:220
msgid "That is a lot of data."
msgstr ""

#: ../../manual/editors/python_console.rst:226
msgid "bpy.ops"
msgstr ""

#: ../../manual/editors/python_console.rst:228
msgid ""
"The tool system is built around the concept of operators. Operators are "
"typically executed from buttons or menus but can be called directly from "
"Python too."
msgstr ""

#: ../../manual/editors/python_console.rst:231
msgid ""
"See the `bpy.ops <https://www.blender.org/api/current/bpy.ops.html>`__ "
"API documentation for a list of all operators."
msgstr ""

#~ msgid "Quick access to ``bpy.context``"
#~ msgstr ""

#~ msgid "Quick access to ``bpy.data``"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "For a list of various operator categories, click here"
#~ msgstr ""

#~ msgid "``C``"
#~ msgstr ""

#~ msgid "``D``"
#~ msgstr ""

#~ msgid "``bpy``"
#~ msgstr ""

#~ msgid "C"
#~ msgstr ""

#~ msgid "D"
#~ msgstr ""

#~ msgid "bpy"
#~ msgstr ""

#~ msgid "That's a lot of data."
#~ msgstr ""

#~ msgid "All objects are data in the Blender file."
#~ msgstr ""

#~ msgid "Following is a quick overview of the output"
#~ msgstr ""

#~ msgid "Quick access to ``bpy.context``."
#~ msgstr ""

#~ msgid "Quick access to ``bpy.data``."
#~ msgstr ""

#~ msgid "Top level Blender Python API module."
#~ msgstr ""

#~ msgid "Note"
#~ msgstr ""

#~ msgid "Will give access to the active object in the 3D View"
#~ msgstr ""

#~ msgid "Change x location to a value of 1"
#~ msgstr ""

#~ msgid "Move object from previous x location by 0.5 unit"
#~ msgstr ""

#~ msgid "Changes x, y, z location"
#~ msgstr ""

#~ msgid "Same as above"
#~ msgstr ""

#~ msgid "Data type of objects location"
#~ msgstr ""

#~ msgid "Now that is a lot of data that you have access to"
#~ msgstr ""

#~ msgid "bpy.context.selected_objects"
#~ msgstr ""

#~ msgid "... then press :kbd:`Ctrl-Spacebar`"
#~ msgstr ""

#~ msgid "Prints out name of first object in the list"
#~ msgstr ""

#~ msgid "Unlink the active object from the Blender scene named 'Scene'"
#~ msgstr ""

#~ msgid "Will print the current 3D View mode (Object, Edit, Sculpt etc.,)"
#~ msgstr ""

#~ msgid "Change X location to a value of 1."
#~ msgstr ""

#~ msgid "Move object from previous X location by 0.5 unit."
#~ msgstr ""

#~ msgid "Changes X, Y, Z location."
#~ msgstr ""

#~ msgid "Same as above."
#~ msgstr ""

#~ msgid "Data type of objects location."
#~ msgstr ""

#~ msgid "Now that is a lot of data that you have access to."
#~ msgstr ""

#~ msgid "... then press :kbd:`Ctrl-Spacebar`."
#~ msgstr ""

#~ msgid "Prints out name of first object in the list."
#~ msgstr ""

#~ msgid "Unlink the active object from the Blender scene named 'Scene'."
#~ msgstr ""

#~ msgid "To prints out the name of first object in the list::"
#~ msgstr ""

#~ msgid "Launching the Console using mouse."
#~ msgstr ""

#~ msgid "Following is a quick overview of the output:"
#~ msgstr ""

#~ msgid "Auto Completion at work"
#~ msgstr ""

#~ msgid "Lets list all the contents of bpy.app module."
#~ msgstr ""

#~ msgid ""
#~ "After :kbd:`Return` twice it prints the"
#~ " names of all objects belonging to"
#~ " the Blender scene with name "
#~ "\"Scene\"::"
#~ msgstr ""

#~ msgid ""
#~ "Now in a *for loop*, we create "
#~ "the five objects like this (in the"
#~ " screenshot above, another method is "
#~ "used) : Press :kbd:`Return` twice after"
#~ " entering the command at the shell"
#~ " prompt::"
#~ msgstr ""

#~ msgid ":kbd:`Return` -- Execute command."
#~ msgstr ""

#~ msgid ""
#~ "By pressing :kbd:`Shift-F4` in any "
#~ "Blender Editor type (3D View, Timeline"
#~ " etc.,) you can change it to a"
#~ " Console Editor."
#~ msgstr ""

#~ msgid "Will print the current 3D View mode (Object, Edit, Sculpt etc.,)."
#~ msgstr ""

#~ msgid "First look at the Console Environment"
#~ msgstr ""

#~ msgid "Before tinkering with the modules.."
#~ msgstr ""

#~ msgid ""
#~ "For all the scenarios listed above "
#~ "(not all were listed, mind you..) "
#~ "the ``bpy`` module provides functionality "
#~ "to access and modify data."
#~ msgstr ""

#~ msgid "Try it out!"
#~ msgstr ""

#~ msgid ""
#~ "The command prompt is typical for "
#~ "Python 3.x, the interpreter is loaded"
#~ " and is ready to accept commands "
#~ "at the prompt ``>>>``"
#~ msgstr ""

#~ msgid "Same as above::"
#~ msgstr ""

#~ msgid ""
#~ "Lets create a set of five Cubes"
#~ " in the 3D View. First, delete "
#~ "the existing Cube object by selecting"
#~ " it and pressing :kbd:`X`"
#~ msgstr ""

#~ msgid ""
#~ "Now in a *for loop*, we create "
#~ "the five objects like this (in the"
#~ " screenshot above, another method is "
#~ "used) : Press :kbd:`Enter` twice after"
#~ " entering the command at the shell"
#~ " prompt::"
#~ msgstr ""

#~ msgid ""
#~ "After :kbd:`Enter` twice it prints the"
#~ " names of all objects belonging to"
#~ " the Blender scene with name "
#~ "\"Scene\"::"
#~ msgstr ""

#~ msgid ""
#~ "Now in a *for loop*, we create "
#~ "the five objects like this (in the"
#~ " screenshot above, another method is "
#~ "used): Press :kbd:`Enter` twice after "
#~ "entering the command at the shell "
#~ "prompt::"
#~ msgstr ""

#~ msgid ":kbd:`Enter` -- Execute command."
#~ msgstr ""

#~ msgid ""
#~ "The Python console is a quick way"
#~ " to execute commands, with access to"
#~ " the entire Python API, command "
#~ "history and auto-complete."
#~ msgstr ""

#~ msgid ""
#~ "Notice the green output above the "
#~ "prompt where you enabled auto-"
#~ "completion. What you see is the "
#~ "result of auto completion listing. In"
#~ " the above listing all are module "
#~ "attribute names, but if you see "
#~ "any name end with ``(``, then that"
#~ " is a function."
#~ msgstr ""

#~ msgid "Changes X, Y, Z location::"
#~ msgstr ""

#~ msgid "Data type of objects location::"
#~ msgstr ""

#~ msgid "Exercise"
#~ msgstr ""

#~ msgid "Unlink the active object from the Blender scene named 'Scene'::"
#~ msgstr ""

#~ msgid ""
#~ "Lets create a set of five Cubes"
#~ " in the 3D View. First, delete "
#~ "the existing Cube object by selecting"
#~ " it and pressing :kbd:`X`."
#~ msgstr ""

#~ msgid ""
#~ "The following commands are used to "
#~ "specify that the objects are created "
#~ "in layer 1. So first we define "
#~ "an array variable for later reference::"
#~ msgstr ""

#~ msgid ""
#~ "We create a reference to the "
#~ "operator that is used for creating "
#~ "a cube mesh primitive::"
#~ msgstr ""

#~ msgid ""
#~ "Now in a *for loop*, we create "
#~ "the five objects like this (in the"
#~ " screenshot above, another method is "
#~ "used): Press :kbd:`Return` twice after "
#~ "entering the command at the shell "
#~ "prompt::"
#~ msgstr ""

#~ msgid ""
#~ "If you look at the 3D View "
#~ "in the default Blender scene, you "
#~ "will notice three objects: Cube, Lamp"
#~ " and Camera."
#~ msgstr ""

#~ msgid "bpy.context.mode"
#~ msgstr ""

#~ msgid "bpy.context.object or bpy.context.active_object"
#~ msgstr ""

#~ msgid "Will give access to the active object in the 3D View."
#~ msgstr ""

#~ msgid "Change X location to a value of 1::"
#~ msgstr ""

#~ msgid "Move object from previous X location by 0.5 unit::"
#~ msgstr ""

#~ msgid "Change X, Y, Z location::"
#~ msgstr ""

#~ msgid "Data type of object's location::"
#~ msgstr ""

#~ msgid ""
#~ "The Python Console is a quick way"
#~ " to execute commands, with access to"
#~ " the entire Python API, command "
#~ "history and auto-complete."
#~ msgstr ""

#~ msgid ""
#~ "Its a good way to explore "
#~ "possibilities, which can then be pasted"
#~ " into larger scripts."
#~ msgstr ""

#~ msgid "Introduction"
#~ msgstr ""

#~ msgid "Accessing Built-in Python Console"
#~ msgstr ""

#~ msgid ""
#~ "By pressing :kbd:`Shift-F4` in any "
#~ "Blender Editor type (3D View, Timeline,"
#~ " etc.) you can change it to a"
#~ " Console Editor."
#~ msgstr ""

#~ msgid ""
#~ "The command prompt is typical for "
#~ "Python 3.x, the interpreter is loaded"
#~ " and is ready to accept commands "
#~ "at the prompt ``>>>``."
#~ msgstr ""

#~ msgid "Try It Out!"
#~ msgstr ""

#~ msgid ""
#~ "See the `bpy.ops "
#~ "<https://www.blender.org/api/blender_python_api_current/bpy.ops.html>`__"
#~ " API documentation for a list of "
#~ "all operators."
#~ msgstr ""

#~ msgid ":kbd:`Up` / :kbd:`Down` -- Cycle command history."
#~ msgstr ""

#~ msgid ":kbd:`Tab` -- Indent."
#~ msgstr ""

#~ msgid ":kbd:`Shift-Tab` -- Unindent."
#~ msgstr ""

#~ msgid ":kbd:`Ctrl-Spacebar` -- Auto complete."
#~ msgstr ""

#~ msgid ":kbd:`Ctrl-C` -- Copy the selection."
#~ msgstr ""

#~ msgid ":kbd:`Ctrl-V` -- Paste into the command line."
#~ msgstr ""

#~ msgid "Move to Previous Word :kbd:`Ctrl-Left-Arrow`"
#~ msgstr ""

#~ msgid ""
#~ "Moves the cursor to the beginning "
#~ "of the of the previous word. If"
#~ " the cursor is in the middle of"
#~ " a word, the cursor is moved to"
#~ " the beginning of the current word."
#~ msgstr ""

#~ msgid "Move to Next Word :kbd:`Ctrl-Right-Arrow`"
#~ msgstr ""

#~ msgid ""
#~ "Moves the cursor to the end of "
#~ "the of the next word. If the "
#~ "cursor is in the middle of a "
#~ "word, the cursor is moved to the"
#~ " end of the current word."
#~ msgstr ""

#~ msgid "Removes everything from the promt line."
#~ msgstr ""

#~ msgid "Un-indents the selection."
#~ msgstr ""

#~ msgid ""
#~ "The Python Console is a good way"
#~ " to explore the possibilities of "
#~ "Blender Built in python. The Python "
#~ "Console can be used to test small"
#~ " bits of python which can then "
#~ "be pasted into larger scripts."
#~ msgstr ""

#~ msgid ""
#~ "Copies the full history buffer to "
#~ "the clipboard, this can be pasted "
#~ "into a text file to be used "
#~ "as a python script."
#~ msgstr ""

#~ msgid "Autocomplete :kbd:`Ctrl-Spacebar`"
#~ msgstr ""

#~ msgid ""
#~ "Now, type ``bpy.`` and then press "
#~ ":kbd:`Ctrl-Spacebar` and you will see"
#~ " the Console auto-complete feature in"
#~ " action."
#~ msgstr ""

#~ msgid "Type this and then press :kbd:`Ctrl-Spacebar`::"
#~ msgstr ""

