# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-20 12:05+1000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/rigging/armatures/editing/sketching.rst:6
msgid "Skeleton Sketching"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:10
msgid "The Bone Sketching panel in its default (inactive) state."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:13
msgid ""
"If you think that creating a whole rig by hand, bone after bone, is quite"
" boring, be happy: some Blender developers had the same feeling, and "
"created the Skeleton Sketching tool, formerly the Etch-a-ton tool, which "
"basically allows you to \"draw\" (sketch) whole chains of bones at once."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:18
msgid ""
"Skeleton Sketching is obviously only available in *Edit* mode, in the 3D "
"views. You control it through its *Skeleton Sketching* panel in the "
"*Transform panel*, which you can open with :kbd:`N`. Use mouse "
"(:kbd:`LMB` to draw strokes, and :kbd:`RMB` for gestures. Showing its "
"tool panel won't enable sketching - you must tick the checkbox next to "
"*Skeleton Sketching* to start drawing bone chains (otherwise, you remain "
"in the standard *Edit* mode...)."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:25
msgid "Sketching is done in two steps:"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:27
msgid ""
"`Drawing Chains`_ (called \"strokes\"). Each stroke corresponds to a "
"chain of bones."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:28
msgid "`Converting to Bones`_, using different methods."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:30
msgid ""
"The **point of view** is important, as it determines the future bones' "
"roll angle: the Z axis of a future bone will be aligned with the view Z "
"axis of the 3D view in which you draw its \"parent\" stroke (unless you "
"use the *Template* converting method...). Strokes are drawn in the "
"current view plane passing through the 3D cursor, but you can create "
"somewhat \"3D\" strokes using the *Adjust* drawing option in different "
"views (see below)."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:36
msgid ""
"If you enable the small *Quick Sketch* option, the two steps are merged "
"into one: once you have finalized the drawing of a stroke (see `Drawing "
"Chains`_), it is immediately converted to bones (using the current active"
" method) and deleted. This option makes bone sketching quick and "
"efficient, but you lose all the advanced stroke editing possibilities."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:41
msgid ""
"Sketches are **not** saved into Blender files, so you can't interrupt a "
"sketching session without losing all your work! Note also that the "
"sketching is common to the whole Blender session, i.e. there is only one "
"set of strokes (one sketch) in Blender, and not one per armature, or even"
" per file..."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:48
msgid "Drawing Chains"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:53
msgid ""
"Strokes example. From top to bottom: A selected polygonal stroke of four "
"straight segments, oriented from left to right. An unselected free stroke"
" of two segments, oriented from left to right. A mixed stroke, with one "
"straight segment between two free ones, right to left."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:59
msgid ""
"So, each stroke you draw will be a chain of bones, oriented from the "
"starting point (the reddest or most orange part of the stroke) to its end"
" (its whitest part). A stroke is made of several segments, delimited by "
"small black dots - there will be at least one bone per segment (except "
"with the *Template* conversion method, see :doc:`next page "
"</rigging/armatures/editing/templating>`), so all black points represents"
" future bones' ends. There are two types of segments, which can be mixed "
"together:"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:69
msgid "Straight Segments"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:71
msgid ""
"To create a straight segment, click :kbd:`LMB` at its starting point. "
"Then move the mouse cursor, without pressing any button - a dashed red "
"line represents the future segment. Click :kbd:`LMB` again to finalize "
"it. Each straight segment of a stroke will always create one and only one"
" bone, whatever convert algorithm you use (except for the *Template* "
"conversion method)."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:83
msgid ""
"The first segment has been started (:kbd:`LMB` click) and the mouse moved"
" to its end point."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:88
msgid ""
"The first segment has been finalized by a second :kbd:`LMB` click, which "
"also started a new segment..."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:93
msgid "Repeating these steps, we now have a four-segment polygonal stroke."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:97
msgid "Free Segments"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:99
msgid ""
"To create a free (curved) segment, click and hold :kbd:`LMB` at its "
"starting point. Then draw your segment by moving the mouse cursor - as in"
" any paint program! Release :kbd:`LMB` to finalize the segment - you will"
" then be creating a new straight segment, so if you would rather start a "
"new free segment, you must immediately re-press :kbd:`LMB`."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:104
msgid ""
"The free segments of a stroke will create different number of bones, in "
"different manners, depending on the conversion method used. The future "
"bones' ends for the current selected method are represented by small "
"green dots for each one of those segments, for the selected strokes only."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:108
msgid ""
"The free segment drawing uses the same *Manhattan Dist* setting as the "
":doc:`grease pencil tool </interface/grease_pencil/introduction>` (*User "
"Preferences* *window,* *Edit Methods* \"panel\", *Grease Pencil* group) "
"to control where and when to add a new point to the segment - so if you "
"feel your free segments are too detailed, raise this value a bit, and if "
"you find them too jagged, lower it."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst
msgid "Drawing free segments example."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:120
msgid "While drawing a first free segment (:kbd:`LMB` click and drag)."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:125
msgid "The first free segment finalized (releasing :kbd:`LMB`)."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:130
msgid ""
"If you now move the mouse without pressing :kbd:`LMB` again, you'll "
"create a straight segment..."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:135
msgid ""
"But if you immediately click again and drag :kbd:`LMB` you'll instead "
"start a new free segment."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:138
msgid ""
"You finalize a whole stroke by clicking :kbd:`RMB`. You can cancel the "
"stroke you are drawing by pressing :kbd:`Esc`. You can also snap strokes "
"to underlying meshes by holding :kbd:`Ctrl` while drawing. By the way, "
"the *Peel Objects* button at the bottom of the *Bone Sketching* panel is "
"the same thing as the \"monkey\" button of the snapping header bar "
"controls shown when *Volume* snap element is selected - see the "
":ref:`snap to mesh <transform-snap-element>` page for details."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:146
msgid "Selecting Strokes"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:148
msgid ""
"A stroke can be selected (materialized by a solid red-to-white line), or "
"not (shown as a orange-to-white line) - see (Strokes example) above. As "
"usual, you select a stroke by clicking :kbd:`RMB` on it, you add one "
"to/remove one from the current selection with a :kbd:`Shift-RMB` click, "
"and :kbd:`A` (de)selects all strokes..."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:156
msgid "Deleting"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:158
msgid ""
"Hitting :kbd:`X` or clicking on the *Delete* button (*Bone Sketching* "
"panel) deletes the selected strokes (be careful, no warning/confirmation "
"pop-up menu here). See also `Gestures`_."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:164
msgid "Modifying Strokes"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:166
msgid ""
"You can adjust, or \"redraw\" your strokes by enabling the *Overdraw "
"Sketching* option of the *Bone Sketching* panel. This will modify the "
"behavior of the strokes drawing (i.e. :kbd:`LMB` clicks and/or hold): "
"when you draw, you won't create a new stroke, but rather modify the "
"nearest one."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:171
msgid ""
"The part of the old stroke that will be replaced by the new one are drawn"
" in gray. This option does not take into account stroke selection, i.e. "
"all strokes can be modified this way, not just the selected ones... Note "
"also that even if it is enabled, when you draw too far away from any "
"other existing stroke, you won't modify any of them, but rather create a "
"new one, as if *Overdraw Sketching* was disabled."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst
msgid "Adjusting stroke example."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:185
msgid ""
"Adjusting a stroke: the gray part of the \"unselected\" (orange) stroke "
"will be replaced by the currently drawn \"replacement\"."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:191
msgid "Stroke adjusted."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:193
msgid "Finally, note that there is no undo/redo for sketch drawing..."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:197
msgid "Gestures"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:199
msgid ""
"There quite a few things about strokes editing that are only available "
"through gestures. Gestures are started by clicking and holding :kbd"
":`Shift-LMB` (when you are not already drawing a stroke), and "
"materialized by blue-to-white lines. A gesture can affect several strokes"
" at once."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:204
msgid ""
"There is no direct way to cancel a gesture once you've started "
"\"drawing\" it. So the best thing to do, if you change your mind (or made"
" a \"false move\"), is to continue to draw until you get a disgusting "
"scribble, crossing your stroke several times - in short, something that "
"the gesture system would never recognize!"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:214
msgid "Damn! I didn't want to cut this stroke here!"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:218
msgid "Let's doodle a bit..."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:222
msgid "Phew! That was close, but the stroke is still in one piece."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:226
msgid "Cut"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:228
msgid ""
"To* **cut** a segment (i.e. add a new black dot inside it, making two "
"segments out of one), \"draw\" a straight line crossing the chosen "
"segment where you want to split it."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:236
#: ../../manual/rigging/armatures/editing/sketching.rst:252
#: ../../manual/rigging/armatures/editing/sketching.rst:269
msgid "Gesture."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:240
#: ../../manual/rigging/armatures/editing/sketching.rst:256
#: ../../manual/rigging/armatures/editing/sketching.rst:273
msgid "Result."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:244
msgid "Delete"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:246
msgid "To* **delete** a stroke, draw a \"V\" crossing the stroke to delete twice."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:260
msgid "Reverse"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:262
msgid ""
"To **reverse** a stroke (i.e. the future chain of bones will be "
"reversed), draw a \"C\" crossing twice the stroke to reverse."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:277
msgid "Converting to Bones"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:279
msgid ""
"Once you have one or more selected strokes, you can convert them to "
"bones, using either the *Convert* button of the *Bone Sketching* panel, "
"or the corresponding gesture (see `Gestures`_). Each selected stroke will"
" generate a chain of bones, oriented from its reddest end to its whitest "
"one. Note that converting a stroke does not delete it."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:285
msgid ""
"There are four different conversion methods - three \"simple\" ones, and "
"one more advanced and complex, *Template*, that reuses bones from the "
"same armature or from another one as a template for the strokes to "
"convert, and which is detailed in :doc:`the next page "
"</rigging/armatures/editing/templating>`. Anyway, remember that straight "
"segments are always converted to one and only one bone (except for the "
"*Template* conversion method), and that the future bones' ends are shown "
"as green dots on selected free segments."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:293
msgid ""
"Remember also that the roll rotation of the created bones has been set "
"during their \"parent\" stroke drawing (except for the *Template* "
"conversion method) - their Z axis will be aligned with the view Z axis of"
" the active 3D view at draw time."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:299
msgid "Fixed"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:301
msgid ""
"With this method, each free segment of the selected strokes will be "
"uniformly divided in ``n`` parts (set in *Num* numeric field), i.e. will "
"give ``n`` bones."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst
msgid "The fixed conversion result."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:311
msgid "The Fixed conversion settings and its preview on selected strokes."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:318
msgid "Adaptive"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:320
msgid ""
"With this method, each free segment of the selected strokes will create "
"as many bones as necessary to follow its shape closely enough - this "
"\"closely enough\" parameter being set by the *Thres* hold numeric field;"
" higher values giving more bones, following more closely the segments' "
"shape. So the more twisted a free segment, the more bones it will "
"generate."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst
msgid "The adaptive conversion result."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:332
msgid "The adaptive conversion settings and its preview on selected strokes."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:339
msgid "Length"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:341
msgid ""
"With this method, each free segment of the selected strokes will create "
"as many bones as necessary, so that none of them is longer than the "
"*Length* numeric field value (in Blender Units)."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst
msgid "The length conversion result."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:352
msgid "The Length conversion settings and its preview on selected strokes."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:357
msgid "Using a larger length value."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:364
msgid "Retarget"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:366
msgid "Retarget template bone chain to stroke."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:371
msgid "Template"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:369
msgid ""
"Template armature that will be retargeted to the stroke. This is a more "
"complex topic, detailed in its :doc:`own page "
"</rigging/armatures/editing/templating>`."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:379
msgid "Retarget roll mode"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:374
msgid "None"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:375
msgid "Don't adjust roll."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:376
msgid "View"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:377
msgid "Roll bones to face the view."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:379
msgid "Joint"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:379
msgid "Roll bone to original joint plane offset."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:381
msgid "Autoname"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:382
#: ../../manual/rigging/armatures/editing/sketching.rst:384
#: ../../manual/rigging/armatures/editing/sketching.rst:386
msgid "Todo."
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:383
msgid "Number"
msgstr ""

#: ../../manual/rigging/armatures/editing/sketching.rst:387
msgid "Side"
msgstr ""

#~ msgid ""
#~ "Skeleton Sketching is obviously only "
#~ "available in *Edit* mode, in the "
#~ "3D views. You control it through "
#~ "its *Skeleton Sketching* panel in the"
#~ " *Transform panel*, which you can "
#~ "open with :kbd:`N`. Use mouse "
#~ "(:kbd:`LMB` to draw strokes, and "
#~ ":kbd:`RMB` for gestures. Showing its "
#~ "tool panel won't enable sketching - "
#~ "*you must tick the checkbox next "
#~ "to* *Skeleton Sketching* *to start "
#~ "drawing bone chains* (otherwise, you "
#~ "remain in the standard *Edit* mode...)."
#~ msgstr ""

#~ msgid ""
#~ "**The point of view is important**, "
#~ "as it determines the future bones' "
#~ "roll angle: the Z axis of a "
#~ "future bone will be aligned with "
#~ "the view Z axis of the 3D "
#~ "view in which you draw its "
#~ "\"parent\" stroke (unless you use the*"
#~ " *Template* converting method...). Strokes "
#~ "are drawn in the current view "
#~ "plane passing through the 3D cursor, "
#~ "but you can create somewhat \"3D\" "
#~ "strokes using the* *Adjust* drawing "
#~ "option in different views (see below)."
#~ msgstr ""

#~ msgid ""
#~ "If you enable the small* *Quick "
#~ "Sketch* option, the two steps are "
#~ "merged into one: once you have "
#~ "finalized the drawing of a stroke "
#~ "(see `Drawing Chains`_), it is "
#~ "immediately converted to bones (using "
#~ "the current active method) and deleted."
#~ " This option makes bone sketching "
#~ "quick and efficient, but you lose "
#~ "all the advanced stroke editing "
#~ "possibilities."
#~ msgstr ""

#~ msgid ""
#~ "**Sketches are not saved into Blender"
#~ " files**, so you can't interrupt a"
#~ " sketching session without losing all "
#~ "your work! Note also that the* "
#~ "sketching is common to the whole "
#~ "Blender session, i.e. there is only "
#~ "one set of strokes (one sketch) in"
#~ " Blender, and not one per armature,"
#~ " or even per file..."
#~ msgstr ""

#~ msgid ""
#~ "So, each stroke you draw will be"
#~ " a chain of bones, oriented from "
#~ "the starting point (the reddest or "
#~ "most orange part of the stroke) to"
#~ " its end (its whitest part). A "
#~ "stroke is made of several segments, "
#~ "delimited by small black dots - "
#~ "there will be at least one bone"
#~ " per segment (except with the* "
#~ "*Template* conversion method, see :doc:`next"
#~ " page </rigging/armatures/editing/templating>`), so "
#~ "all black points represents future "
#~ "bones' ends. There are two types "
#~ "of segments, which can be mixed "
#~ "together:"
#~ msgstr ""

#~ msgid ""
#~ "To create a straight segment, click* "
#~ ":kbd:`LMB` *at its starting point. Then"
#~ " move the mouse cursor, without "
#~ "pressing any button - a dashed red"
#~ " line represents the future segment. "
#~ "Click* :kbd:`LMB` again to finalize it."
#~ " Each straight segment of a stroke"
#~ " will always create one and only "
#~ "one bone, whatever convert algorithm you"
#~ " use (except for the* *Template* "
#~ "conversion method)."
#~ msgstr ""

#~ msgid ""
#~ "To create a free (curved) segment, "
#~ "click* and hold :kbd:`LMB` at its "
#~ "starting point. Then draw your segment"
#~ " by moving the mouse cursor - "
#~ "as in any paint program! Release "
#~ ":kbd:`LMB` to finalize the segment - "
#~ "you will then be creating a new"
#~ " straight segment, so if you would"
#~ " rather start a new free segment, "
#~ "you must immediately re-press "
#~ ":kbd:`LMB`. The free segments of a "
#~ "stroke will create different number of"
#~ " bones, in different manners, depending "
#~ "on the conversion method used. The "
#~ "future bones' ends for the current "
#~ "selected method are represented by small"
#~ " green dots for each one of "
#~ "those segments, for the selected strokes"
#~ " only. The free segment drawing uses"
#~ " the same* *Manhattan Dist* setting "
#~ "as the :doc:`grease pencil tool "
#~ "</interface/grease_pencil/introduction>` (*User "
#~ "Preferences* *window,* *Edit Methods* "
#~ "\"panel\", *Grease Pencil* group) to "
#~ "control where and when to add a"
#~ " new point to the segment - so"
#~ " if you feel your free segments "
#~ "are too detailed, raise this value "
#~ "a bit, and if you find them "
#~ "too jagged, lower it."
#~ msgstr ""

#~ msgid ""
#~ "You finalize a whole stroke by "
#~ "clicking* :kbd:`RMB`. You can cancel the"
#~ " stroke you are drawing by pressing"
#~ " :kbd:`Esc`. You can also snap "
#~ "strokes to underlying meshes by holding*"
#~ " :kbd:`Ctrl` while drawing. By the "
#~ "way, the *Peel Objects* *button at "
#~ "the bottom of the* *Bone Sketching* "
#~ "panel is the same thing as the "
#~ "\"monkey\" button of the snapping header"
#~ " bar controls shown when* *Volume* "
#~ "snap element is selected - see the"
#~ " :ref:`snap to mesh <transform-snap-"
#~ "element>` page for details."
#~ msgstr ""

#~ msgid ""
#~ "A stroke can be selected (materialized"
#~ " by a solid red-to-white line),"
#~ " or not (shown as a orange-"
#~ "to-white line) - see (Strokes "
#~ "example) above. As usual, you select "
#~ "a stroke by clicking* :kbd:`RMB` on "
#~ "it, you add one to/remove one from"
#~ " the current selection with a* :kbd"
#~ ":`Shift-RMB` *click, and* :kbd:`A` "
#~ "(de)selects all strokes..."
#~ msgstr ""

#~ msgid ""
#~ "Hitting* :kbd:`X` or clicking on the "
#~ "*Delete* button (*Bone Sketching* panel) "
#~ "deletes the selected strokes (be "
#~ "careful, no warning/confirmation pop-up "
#~ "menu here). See also `Gestures`_."
#~ msgstr ""

#~ msgid ""
#~ "You can adjust, or \"redraw\" your "
#~ "strokes by enabling the *Overdraw "
#~ "Sketching* *option of the* *Bone "
#~ "Sketching* panel. This will modify the"
#~ " behavior of the strokes drawing "
#~ "(i.e. :kbd:`LMB` clicks and/or hold): "
#~ "when you draw, you won't create a"
#~ " new stroke, but rather modify the"
#~ " nearest one. The part of the "
#~ "old stroke that will be replaced "
#~ "by the new one are drawn in "
#~ "gray. This option does not take "
#~ "into account stroke selection, i.e. all"
#~ " strokes can be modified this way,"
#~ " not just the selected ones... Note"
#~ " also that even if it is "
#~ "enabled, when you draw too far "
#~ "away from any other existing stroke, "
#~ "you won't modify any of them, but"
#~ " rather create a new one, as "
#~ "if* *Overdraw Sketching* was disabled."
#~ msgstr ""

#~ msgid ""
#~ "Once you have one or more selected"
#~ " strokes, you can convert them to "
#~ "bones, using either the* *Convert* "
#~ "button of the *Bone Sketching* panel,"
#~ " or the corresponding gesture (see "
#~ "`Gestures`_). Each selected stroke will "
#~ "generate a chain of bones, oriented "
#~ "from its reddest end to its "
#~ "whitest one. Note that converting a "
#~ "stroke does not delete it."
#~ msgstr ""

#~ msgid ""
#~ "There are four different conversion "
#~ "methods - three \"simple\" ones, and "
#~ "one more advanced and complex, "
#~ "*Template*, that reuses bones from the"
#~ " same armature or from another one"
#~ " as a template for the strokes "
#~ "to convert, and which is detailed "
#~ "in :doc:`the next page "
#~ "</rigging/armatures/editing/templating>`. Anyway, remember"
#~ " that* straight segments are always "
#~ "converted to one and only one bone"
#~ " (except for the *Template* conversion "
#~ "method), and that the future bones' "
#~ "ends are shown as green dots on"
#~ " selected free segments."
#~ msgstr ""

