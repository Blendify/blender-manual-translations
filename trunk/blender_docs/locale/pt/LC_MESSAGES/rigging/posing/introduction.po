# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-29 15:07-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/rigging/posing/introduction.rst:5
msgid "Introduction"
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:7
msgid ""
"Once your armature is :doc:`skinned </rigging/skinning/index>` by the "
"needed object(s), you can start to pose it. Basically, by transforming "
"its bones, you deform or transform the skin object(s). But you do not do "
"that in *Edit Mode* - remember that in this mode, you edit *the default, "
"base, \"rest\" position of your armature*. You cannot use the *Object "
"Mode* either, as here you can only transform whole objects..."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:13
msgid ""
"So, armatures in Blender have a third mode, *Pose*, dedicated to this "
"process. It is a sort of \"object mode for bones\". In rest position (as "
"edited in *Edit Mode*), each bone has its own position/rotation/scale to "
"neutral values (i.e. 0.0 for position and rotation, and 1.0 for scale). "
"Hence, when you edit a bone in *Pose Mode*, you create an offset in its "
"transform properties, from its rest position - this is quite similar to "
":doc:`meshes relative shape keys </animation/shape_keys>`, in fact."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:23
msgid "Posing Section Overview"
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:25
msgid "In this section, we will see:"
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:27
msgid ""
"The :doc:`visualization features </rigging/posing/visualization>` "
"specific to *Pose Mode*."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:28
msgid ""
"How to :doc:`select and edit bones </rigging/posing/editing>` in this "
"mode."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:29
msgid "How to :doc:`use pose library </rigging/posing/pose_library>`."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:30
msgid ""
"How to :doc:`use constraints </rigging/posing/constraints>` to control "
"your bones' DoF (degrees of freedom)."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:31
msgid ""
"How to :doc:`use inverse kinematics features "
"</rigging/posing/inverse_kinematics/index>`."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:32
msgid ""
"How to :doc:`use the Spline inverse kinematics features "
"</rigging/posing/inverse_kinematics/spline_ik>`."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:34
msgid ""
"Even though it might be used for completely static purposes, posing is "
"heavily connected with :doc:`animation features and techniques "
"</animation/index>`."
msgstr ""

#: ../../manual/rigging/posing/introduction.rst:37
msgid ""
"In this part, we will try to focus on animation-independent posing, but "
"this is not always possible. So if you know nothing about animation in "
"Blender, it might be a good idea to read the :doc:`animation features and"
" techniques </animation/index>` chapter first, and then come back here."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "So, armatures in Blender have a "
#~ "third mode, *Pose*, dedicated to this"
#~ " process. It's a sort of \"object "
#~ "mode for bones\". In rest position "
#~ "(as edited in *Edit Mode*), each "
#~ "bone has its own position/rotation/scale "
#~ "to neutral values (i.e. 0.0 for "
#~ "position and rotation, and 1.0 for "
#~ "scale). Hence, when you edit a "
#~ "bone in *Pose Mode*, you create an"
#~ " offset in its transform properties, "
#~ "from its rest position - this is"
#~ " quite similar to :doc:`meshes relative "
#~ "shape keys </animation/shape_keys>`, in fact."
#~ msgstr ""

