# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-09-07 14:46-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/game_engine/introduction.rst:4
msgid "Introduction"
msgstr ""

#: ../../manual/game_engine/introduction.rst:6
msgid ""
"The Blender Game Engine (BGE) is Blender's tool for real time projects, "
"from architectural visualizations and simulations to games."
msgstr ""

#: ../../manual/game_engine/introduction.rst:9
msgid ""
"A word of warning, before you start any big or serious project with the "
"Blender Game Engine, you should note that it is currently not very "
"supported and that there are plans for its retargeting and refactoring "
"that, in the very least, will break compatibility. For further "
"information, you should get in touch with the developers via mailing list"
" or IRC and read the `development roadmap "
"<https://code.blender.org/2013/06/blender-roadmap-2-7-2-8-and-"
"beyond/>`__."
msgstr ""

#: ../../manual/game_engine/introduction.rst:20
msgid ""
"different renderer, logic is done via logic bricks or Python press "
":kbd:`P` to play in preview mode in the embedded player."
msgstr ""

#: ../../manual/game_engine/introduction.rst:25
msgid "Use Cases and Sample Games"
msgstr ""

#: ../../manual/game_engine/introduction.rst:27
msgid ""
"Blender has its own built in Game Engine that allows you to create "
"interactive 3D applications or simulations. The major difference between "
"Game Engine and the conventional Blender system is in the rendering "
"process. In the normal Blender engine, images and animations are built "
"off-line -- once rendered they cannot be modified. Conversely, the "
"Blender Game Engine renders scenes continuously in real-time, and "
"incorporates facilities for user interaction during the rendering "
"process."
msgstr ""

#: ../../manual/game_engine/introduction.rst:37
msgid "Screenshot from \"Yo Frankie\", produced with Blender Game Engine."
msgstr ""

#: ../../manual/game_engine/introduction.rst:40
msgid ""
"The Blender Game Engine oversees a game loop, which processes logic, "
"sound, physics and rendering simulations in sequential order. The engine "
"is written in C++."
msgstr ""

#: ../../manual/game_engine/introduction.rst:43
msgid ""
"By default, the user has access to a powerful, high level, Event Driven "
":doc:`Logic Editor </editors/logic_editor>` which is comprised of a "
"series of specialized components called \"Logic Bricks\". The :doc:`Logic"
" Editor </editors/logic_editor>` provides deep interaction with the "
"simulation, and its functionality can be extended through Python "
"scripting. It is designed to abstract the complex engine features into a "
"simple user interface, which does not require experience with "
"Programming. An overview of the :doc:`Logic Editor "
"</editors/logic_editor>` can be found in the :doc:`Game Logic Screen "
"Layout </game_engine/screen_layout>`"
msgstr ""

#: ../../manual/game_engine/introduction.rst:53
msgid ""
"The Game Engine is closely integrated with the existing code base of "
"Blender, which permits quick transitions between the traditional modeling"
" feature set and game-specific functionality provided by the program. In "
"this sense, the Game Engine can be efficiently used in all areas of game "
"design, from prototyping to final release."
msgstr ""

#: ../../manual/game_engine/introduction.rst:59
msgid ""
"The Game Engine can simulate content within Blender, however, it also "
"includes the ability to export a binary run-time to Linux, MacOSX and MS-"
"Windows."
msgstr ""

#: ../../manual/game_engine/introduction.rst:62
msgid ""
"There are a number of powerful libraries the Game-Engine takes advantage "
"of:"
msgstr ""

#: ../../manual/game_engine/introduction.rst:64
msgid "Audaspace: A sound library for control of audio. Uses OpenAL or SDL."
msgstr ""

#: ../../manual/game_engine/introduction.rst:65
msgid ""
"Bullet: A physics engine featuring 3D collision detection, soft body "
"dynamics, and rigid body dynamics."
msgstr ""

#: ../../manual/game_engine/introduction.rst:66
msgid "Detour: A path-finding and spatial reasoning toolkit."
msgstr ""

#: ../../manual/game_engine/introduction.rst:67
msgid ""
"Recast: A state of the art navigation mesh construction tool set for "
"games."
msgstr ""

#: ../../manual/game_engine/introduction.rst:69
msgid ""
"When creating a game or simulation in the BGE, there are four essential "
"steps:"
msgstr ""

#: ../../manual/game_engine/introduction.rst:71
msgid ""
"Create visual elements that can be rendered. This could be 3D models or "
"images."
msgstr ""

#: ../../manual/game_engine/introduction.rst:72
msgid ""
"Enable interaction within the scene using logic bricks to script custom "
"behavior and determine how it is invoked (using the appropriate "
"\"sensors\" such as keyboards or joysticks)."
msgstr ""

#: ../../manual/game_engine/introduction.rst:74
msgid ""
"Create one (or more) camera to give a frustum from which to render the "
"scene, and modify the parameters to support the environment in which the "
"game will be displayed, such as Stereo rendering."
msgstr ""

#: ../../manual/game_engine/introduction.rst:76
msgid ""
"Launch the game, using the internal player or exporting a runtime to the "
"appropriate platform."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "data-conversion --> input | animation, physics and logic | rendering"
#~ msgstr ""

#~ msgid "Screenshot from \"Yo Frankie\", produced with Blender Game Engine"
#~ msgstr ""

#~ msgid "Introduction to Game Engine"
#~ msgstr ""

#~ msgid "use cases and sample games"
#~ msgstr ""

#~ msgid "Audaspace - a sound library for control of audio. Uses OpenAL or SDL"
#~ msgstr ""

#~ msgid "Audaspace - a sound library for control of audio. Uses OpenAL or SDL."
#~ msgstr ""

#~ msgid "Detour - a path-finding and spatial reasoning toolkit."
#~ msgstr ""

#~ msgid ""
#~ "different renderer, logic is done via"
#~ " logic bricks or Python press "
#~ ":kbd:`P` to play in preview mode "
#~ "in the embedded player"
#~ msgstr ""

