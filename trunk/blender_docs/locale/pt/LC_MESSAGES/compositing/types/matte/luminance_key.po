# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 18:46+1000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/compositing/types/matte/luminance_key.rst:4
msgid "Luminance Key Node"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:10
msgid "Luminance Key Node."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:12
msgid ""
"The *Luminance Key* node determines background objects from foreground "
"objects by the difference in the luminance (brightness) levels. For "
"example, this is useful when compositing stock footage of explosions "
"(very bright) which are normally shot against a solid, dark background."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:19
msgid "Input"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:21
msgid "There is one input to this node:"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:25
#: ../../manual/compositing/types/matte/luminance_key.rst:48
msgid "Image"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:24
msgid "The image that is to be keyed."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:28
msgid "Options"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:31
msgid "High"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:31
msgid ""
"Determines the lowest values that are considered foreground. (which is "
"supposed to be - relatively - light: from this value to 1.0)."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:35
msgid "Low"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:34
msgid ""
"Determines the highest values that are considered to be background "
"objects. (which is supposed to be - relatively - dark: from 0.0 to this "
"value)."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:39
msgid ""
"It is also possible to have a separation between the two values to allow "
"for a gradient of transparency between foreground and background objects."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:44
msgid "Outputs"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:46
msgid "The outputs of this node are:"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:49
msgid "Image with an alpha channel adjusted for the keyed selection."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:52
msgid "Matte"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:51
msgid "A black and white alpha mask of the key."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:55
msgid "Example"
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:60
msgid "Using Luma Key with a twist."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:63
msgid ""
"For this example the model was shot against a *white* background. Using "
"the Luminance Key node, we get a matte out where the background is white,"
" and the model is black; the opposite of what we want. If we wanted to "
"use the matte, we have to switch the white and the black. How to do this?"
" ColorRamp to the rescue - we set the left color White Alpha 1.0, and the"
" right color to be Black Alpha 0.0. Thus, when the Colorramp gets in "
"black, it spits out white, and vice versa. The reversed mask is shown; "
"her white outline is useable as an alpha mask now."
msgstr ""

#: ../../manual/compositing/types/matte/luminance_key.rst:72
msgid ""
"Now to mix, we do not really need the *AlphaOver* node; we can just use "
"the mask as our Factor input. In this kinda weird case, we can use the "
"matte directly; we just switch the input nodes. As you can see, since the"
" matte is white (1.0) where we do not want to use the model picture, we "
"feed the background photo to the bottom socket (recall the mix node uses "
"the top socket where the factor is 0.0, and the bottom socket where the "
"factor is 1.0). Feeding our original photo into the top socket means it "
"will be used where the Luminance Key node has spit out Black. Voila, our "
"model is teleported from Atlanta to aboard a cruise ship docked in Miami."
msgstr ""

#~ msgid "Using Luma Key...with a twist"
#~ msgstr ""

#~ msgid "Using Luma Key...with a twist."
#~ msgstr ""

#~ msgid ""
#~ "For this example, let's throw you "
#~ "a ringer. Here, the model was shot"
#~ " against a *white* background. Using "
#~ "the Luminance Key node, we get a"
#~ " matte out where the background is"
#~ " white, and the model is black; "
#~ "the opposite of what we want. If"
#~ " we wanted to use the matte, we"
#~ " have to switch the white and "
#~ "the black. How to do this? "
#~ "ColorRamp to the rescue - we set"
#~ " the left color White Alpha 1.0, "
#~ "and the right color to be Black"
#~ " Alpha 0.0. Thus, when the Colorramp"
#~ " gets in black, it spits out "
#~ "white, and vice versa. The reversed "
#~ "mask is shown; her white outline "
#~ "is useable as an alpha mask now."
#~ msgstr ""

#~ msgid ""
#~ "Now to mix, we don't really need"
#~ " the AlphaOver node; we can just "
#~ "use the mask as our Factor input."
#~ " In this kinda weird case, we "
#~ "can use the matte directly; we "
#~ "just switch the input nodes. As "
#~ "you can see, since the matte is"
#~ " white (1.0) where we don't want "
#~ "to use the model picture, we feed"
#~ " the background photo to the bottom"
#~ " socket (recall the mix node uses "
#~ "the top socket where the factor is"
#~ " 0.0, and the bottom socket where "
#~ "the factor is 1.0). Feeding our "
#~ "original photo into the top socket "
#~ "means it will be used where the"
#~ " Luminance Key node has spit out "
#~ "Black. Voila, our model is teleported"
#~ " from Atlanta to aboard a cruise "
#~ "ship docked in Miami."
#~ msgstr ""

