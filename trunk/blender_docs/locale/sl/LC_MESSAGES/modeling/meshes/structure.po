# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.80 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.80 Manual 2.80\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-29 17:18-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:4
msgid "Structure"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:6
msgid ""
"With meshes, everything is built from three basic structures: *vertices*,"
" *edges* and *faces*."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:12
msgid "Example of mesh structure."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:18
msgid "Vertices"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:20
msgid ""
"The most elementary part of a mesh is the vertex (vertices plural) which "
"is a single point or position in 3D space. Vertices are represented in "
"the 3D Viewport in Edit Mode as small dots. The vertices of and object "
"are stored as an array of coordinates."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:26
msgid ""
"Do not mistake the :doc:`object origin </scene_layout/object/origin>` for"
" a vertex. It may look similar, but it is bigger and cannot be selected."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:31
msgid ""
"The vertex is labeled as \"A\"; the object's origin dot is labeled as "
"\"B\"."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:35
msgid "Edges"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:37
msgid ""
"An edge always connects two vertices by a straight line. The edges are "
"the \"wires\" you see when you look at a mesh in wireframe view. They are"
" usually invisible on the rendered image. They are used to construct "
"faces."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:43
msgid "Faces"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:45
msgid ""
"Faces are used to build the actual surface of the object. They are what "
"you see when you render the mesh. If this area does not contain a face, "
"it will simply be transparent or non-existent in the rendered image."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:50
msgid ""
"A face is defined as the area between either three (triangles), four "
"(quadrangles) or more (n-gons) vertices, with an edge on every side. The "
"faces are often abbreviated to *tris, quads & n-gons*."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:53
msgid ""
"Triangles are always flat and therefore easy to calculate. On the other "
"hand, quadrangles \"deform well\" and are therefore preferred for "
"animation and subdivision modeling."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:58
msgid ""
"`Why should triangles be avoided for character animation? "
"<https://blender.stackexchange.com/questions/2931>`__"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:59
msgid ""
"`When should N-gons be used, and when shouldn't they? "
"<https://blender.stackexchange.com/questions/89>`__"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:63
msgid "Normals"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:65
msgid ""
"In geometry, a normal is a direction or line that is perpendicular to "
"something, typically a triangle or surface but can also be relative to a "
"line, a tangent line for a point on a curve, or a tangent plane for a "
"point on a surface."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:72
msgid "A visualization of the face normals of a torus."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:74
msgid ""
"In the figure above, each blue line represents the normal for a face on "
"the torus. The lines are each perpendicular to the face on which they "
"lie. The visualization can be activated, in Edit Mode, in the :ref:`Mesh "
"Display Viewport Overlays panel <mesh-display-normals>`."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:83
msgid "Properties"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:85
#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:148
#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:169
msgid "Reference"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst
msgid "Panel"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:88
msgid ":menuselection:`Properties editor --> Object Data --> Normals`"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:92
msgid "Normals panel."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:103
msgid "Auto Smooth"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:99
msgid ""
"Edges where an angle between the faces is smaller than specified in the "
"*Angle* button will be smoothed, when shading of these parts of the mesh "
"is set to smooth. This is an easier way to combine smooth and sharp "
"edges."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:103
msgid "Angle"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:103
msgid "Angle number field."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:108
msgid "Example mesh with *Auto Smooth* enabled."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:114
msgid "Advanced Smooth Shading & Sharp Edges"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:116
msgid ""
"By default in Blender, with basic normal computing behavior, a sharp edge"
" is always defined as an edge being either non-manifold, or having at "
"least one of its faces defined as flat."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:119
msgid ""
"Enabling the *Auto Smooth* setting adds an extra parameter to define a "
"sharp edge, the *Angle* threshold between two neighbor faces, above which"
" the edge will always be considered as sharp."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:122
msgid ""
"*Auto Smooth* also enables *Custom Split Normals* handling, which can be "
"either defined (and edited) as a :doc:`mesh data layer "
"</modeling/meshes/editing/normals>`, or generated on the fly by "
"modifiers. In any case, when a mesh gets custom normals, they always "
"supersede the default ones computed by *Auto Smooth*."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:126
msgid ""
"Sharp edges may still be used by the custom normals modifiers to compute "
"their normals, depending on their settings."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:133
msgid "Custom Split Normals"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:135
msgid ""
"*Custom Split Normals* is a way to tweak/fake shading by pointing normals"
" towards other directions than the default, auto-computed ones. It is "
"mostly used in game development, where it helps counterbalance some "
"issues generated by low-poly objects (the most common examples are low-"
"poly trees, bushes, grass, etc. and the 'rounded' corners)."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:140
msgid ""
"Blender supports custom normals on a 'smooth fan' base, defined as a set "
"of neighbor face corners sharing the same vertex and 'linked' by smooth "
"edges. This means you can have normals per face corners, per a set of "
"neighbor face corners, or per vertex."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:146
msgid "Enabling Custom Split Normals"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst
msgid "Mode"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:151
#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:172
msgid "Edit Mode"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst
msgid "Menu"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:152
msgid ":menuselection:`Mesh --> Normals --> Split`"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:154
msgid "Enables custom split normals."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:156
msgid ""
"Also, any of the custom normal editing tools (see below) will, as a "
"convenience, enable custom normals if they are not already enabled."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:161
msgid ""
"This has the side effect of enabling :ref:`Auto Smooth <auto-smooth>`, as"
" that is necessary to use custom normals. Once you have custom normals, "
"the angle threshold of the *Auto Smooth* behavior is disabled -- all non-"
"sharp-tagged edges will be considered as smooth, disregarding the angle "
"between their faces."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:167
msgid "Editing Custom Split Normals"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:173
msgid ":menuselection:`Mesh --> Normals`"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst
msgid "Hotkey"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:174
msgid ":kbd:`Alt-N`"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:176
msgid ""
"There are a number of tools for editing custom split normals. The custom "
"normal mesh edit tools can affect all normals (the default), or only "
"selected ones. To select a custom normal associated with a particular "
"vertex and face:"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:180
msgid ""
"Make the element selection mode both Vertex and Face (use :kbd:`Shift-"
"LMB` to enable the second one)."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:181
msgid ""
"Select one or more vertices, then select a face. This can be repeated to "
"select more vertices and a different face and so on. It is easiest to see"
" the effect of these tools if you turn on the Edit Mode Overlays option "
"*Display vertex-per-face normals as lines*."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:188
msgid ":doc:`Editing Normals </modeling/meshes/editing/normals>`."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:192
msgid "Importing Custom Split Normals"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:194
msgid ""
"Some tools, particularly those used in :abbr:`CAD (Computer-Aided "
"Design)`, tend to generate irregular geometry when tessellating their "
"objects into meshes (very thin and long triangles, etc.). Auto-computed "
"normals on such geometry often gives bad artifacts, so it is important to"
" be able to import and use the normals as generated by the CAD tool "
"itself."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:201
msgid ""
"Currently, only the :doc:`FBX Importer "
"</addons/import_export/io_scene_fbx>` and :doc:`Alembic Importer "
"</files/import_export/alembic>` are capable of importing custom normals."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:206
msgid "Topology"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:211
msgid "Loops"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:217
msgid "Edge and face loops."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:219
msgid ""
"*Edge* and *face* loops are sets of faces or edges that form continuous "
"\"loops\" as shown in Fig. :ref:`fig-mesh-topo-loop`."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:222
msgid ""
"In the image above, loops that do not end in poles are cyclic (1 and 3). "
"They start and end at the same vertex and divide the model into two "
"partitions. Loops can be a quick and powerful tool to work with specific,"
" continuous regions of a mesh and are a prerequisite for organic "
"character animation. For a detailed description of how to work with loops"
" in Blender, see: :ref:`Edge Loop Selection <modeling-meshes-selecting-"
"edge-loops>`."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:231
msgid ""
"Note that loops (2 and 4) do not go around the whole model. Loops stop at"
" so-called poles because there is no unique way to continue a loop from a"
" pole. Poles are vertices that are connected to either three, five, or "
"more edges. Accordingly, vertices connected to exactly one, two or four "
"edges are not poles."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:239
msgid "Edge Loops"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:240
msgid ""
"Loops (1 and 2) in Fig. :ref:`fig-mesh-topo-loop` are edge loops. They "
"connect vertices so that each one on the loop has exactly two neighbors "
"that are not on the loop and placed on both sides of the loop (except the"
" start and end vertex in case of poles)."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:244
msgid ""
"Edge loops are an important concept especially in organic (subsurface) "
"modeling and character animation. When used correctly, they allow you to "
"build models with relatively few vertices that look very natural when "
"used as subdivision surfaces and deform very well in animation."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:249
msgid ""
"Take Fig. :ref:`fig-mesh-topo-loop` in organic modeling as an example: "
"the edge loops follow the natural contours and deformation lines of the "
"skin and the underlying muscles and are more dense in areas that deform "
"more when the character moves, for example at the shoulders or knees."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:253
msgid ""
"Further details on working with edge loops can be found in :ref:`Edge "
"Loop Selection <modeling-meshes-selecting-edge-loops>`."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:258
msgid "Face Loops"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:259
msgid ""
"These are a logical extension of edge loops in that they consist of the "
"faces between two edge loops, as shown in loops (3 and 4) in Fig. :ref"
":`fig-mesh-topo-loop`. Note that for non-circular loops (4) the faces "
"containing the poles are not included in a face loop."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:264
msgid ""
"Further details on working with face loops can be found in :ref:`Face "
"Loop Selection <modeling-meshes-selecting-face-loops>`."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:269
msgid "Poles"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:271
msgid "See `N-poles & E-poles <https://blender.stackexchange.com/a/133676/55>`__."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:275
msgid "Non-Manifold"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/meshes/structure.rst:277
msgid "See :term:`Non-manifold`."
msgstr ""

#~ msgid "The vertex is labeled as \"A\", and \"B\" are object origin."
#~ msgstr ""

#~ msgid ""
#~ "It is usually invisible in rendering "
#~ "and in *Object Mode*. Do not "
#~ "mistake the :doc:`Origin Point "
#~ "</editors/3dview/object/origin>` of an object "
#~ "for a vertex. It looks similar, "
#~ "but it is bigger and you cannot"
#~ " select it."
#~ msgstr ""

#~ msgid ""
#~ "An edge always connects two vertices "
#~ "by a straight line. The edges are"
#~ " the \"wires\" you see when you "
#~ "look at a mesh in wireframe view."
#~ " They are usually invisible on the"
#~ " rendered image. They are used to "
#~ "construct faces."
#~ msgstr ""

#~ msgid ""
#~ "An edge always connects two vertices "
#~ "by a straight line. The edges are"
#~ " the \"wires\" you see when you "
#~ "look at a mesh in wire-frame "
#~ "view. They are usually invisible on "
#~ "the rendered image. They are used "
#~ "to construct faces."
#~ msgstr ""

#~ msgid ""
#~ "While you could build a cube with"
#~ " triangular faces, it would just look"
#~ " more confusing in *Edit Mode*."
#~ msgstr ""

#~ msgid ""
#~ "`When should N-Gons be used, and "
#~ "when shouldn't they? "
#~ "<https://blender.stackexchange.com/questions/89>`__"
#~ msgstr ""

#~ msgid ""
#~ "In the image above, loops that do"
#~ " not end in poles are cyclic (1"
#~ " and 3). They start and end at"
#~ " the same vertex and divide the "
#~ "model into two partitions. Loops can "
#~ "be a quick and powerful tool to"
#~ " work with specific, continuous regions "
#~ "of a mesh and are a prerequisite"
#~ " for organic character animation. For "
#~ "a detailed description of how to "
#~ "work with loops in Blender, see: "
#~ ":doc:`Advanced Selection "
#~ "</modeling/meshes/selecting/advanced>`."
#~ msgstr ""

#~ msgid "Non-manifold"
#~ msgstr ""

#~ msgid ""
#~ "The most elementary part of a mesh"
#~ " is the vertex which is a "
#~ "single point or position in 3D "
#~ "space. The vertices (the plural form "
#~ "of vertex) are stored in an array"
#~ " of coordinates."
#~ msgstr ""

#~ msgid ""
#~ "It is usually invisible in rendering "
#~ "and in *Object Mode*. Do not "
#~ "mistake the :doc:`Origin Point "
#~ "</scene_layout/object/origin>` of an object "
#~ "for a vertex. It looks similar, "
#~ "but it is bigger and you cannot"
#~ " select it."
#~ msgstr ""

#~ msgid "The vertex is labeled as \"A\", and \"B\" is object origin."
#~ msgstr ""

#~ msgid ""
#~ "The most elementary part of a mesh"
#~ " is the vertex vertices (plural) "
#~ "which is a single point or "
#~ "position in 3D space. Vertices are "
#~ "represented in the 3D Viewport in "
#~ "edit mode as small dots. The "
#~ "vertices of and object are stored "
#~ "as an array of coordinates."
#~ msgstr ""

#~ msgid ""
#~ "*Custom Split Normals* is a way to"
#~ " tweak/fake shading by pointing normals "
#~ "towards other directions than the "
#~ "default, auto-computed ones. It is "
#~ "mostly used in game development, where"
#~ " it allows to counterbalance some "
#~ "issues generated by low-poly objects "
#~ "(the most common examples are low-"
#~ "poly trees, bushes, grass, etc. and "
#~ "the 'rounded' corners)."
#~ msgstr ""

#~ msgid ""
#~ "Some tools, in particular :abbr:`CAD "
#~ "(Computer-Aided Design)` ones, tends to "
#~ "generate irregular geometry when tessellating"
#~ " their objects into meshes (very thin"
#~ " and long triangles, etc.). Auto-"
#~ "computed normals on such geometry often"
#~ " gives bad artifacts, so it is "
#~ "important to be able to import and"
#~ " use the normals as generated by "
#~ "the CAD tool itself."
#~ msgstr ""

#~ msgid ""
#~ "Currently, only the :doc:`FBX Importer "
#~ "</addons/io_scene_fbx>` is capable of "
#~ "importing custom normals."
#~ msgstr ""

#~ msgid ""
#~ "Currently, only the :doc:`FBX Importer "
#~ "</addons/import_export/io_scene_fbx>` is capable of"
#~ " importing custom normals."
#~ msgstr ""

#~ msgid ""
#~ "By default in Blender, with basic "
#~ "normal computing behavior, a **sharp "
#~ "edge** is always defined as an "
#~ "edge being either non-manifold, or "
#~ "having at least one of its faces"
#~ " defined as flat."
#~ msgstr ""

#~ msgid ""
#~ "Enabling the *Auto Smooth* setting adds"
#~ " an extra parameter to define a "
#~ "**sharp edge**, the **Angle** threshold "
#~ "between two neighbor faces, above which"
#~ " the edge will always be considered"
#~ " as sharp."
#~ msgstr ""

#~ msgid ""
#~ "**Sharp edges** may still be used "
#~ "by the custom normals modifiers to "
#~ "compute their normals, depending on "
#~ "their settings."
#~ msgstr ""

#~ msgid "Enables Custom Split Normals."
#~ msgstr ""

