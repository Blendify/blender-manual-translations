#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-12 18:22-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/editors/python_console.rst:4
msgid "Python Console"
msgstr ""

#: ../../manual/editors/python_console.rst:6
msgid ""
"The Python console is a quick way to execute commands, with access to the"
" entire Python API, command history and auto-complete."
msgstr ""

#: ../../manual/editors/python_console.rst:9
msgid ""
"Its a good way to explore possibilities, which can then be pasted into "
"larger scripts."
msgstr ""

#: ../../manual/editors/python_console.rst:13
msgid "Usage"
msgstr ""

#: ../../manual/editors/python_console.rst:16
msgid "Accessing Built-in Python Console"
msgstr ""

#: ../../manual/editors/python_console.rst:18
msgid "Launching the Console using mouse."
msgstr ""

#: ../../manual/editors/python_console.rst:22
msgid ""
"By pressing :kbd:`Shift-F4` in any Blender Editor Type (3D View, Timeline"
" etc.,) you can change it to a Console Editor."
msgstr ""

#: ../../manual/editors/python_console.rst:28
msgid ""
"From the screen shot above, you will notice that apart from the usual hot"
" keys that are used to navigate, by pressing :kbd:`Ctrl-Spacebar` you can"
" enable Auto-complete feature."
msgstr ""

#: ../../manual/editors/python_console.rst:32
msgid ""
"The command prompt is typical for Python 3.x, the interpreter is loaded "
"and is ready to accept commands at the prompt ``>>>``"
msgstr ""

#: ../../manual/editors/python_console.rst:37
msgid "First look at the Console Environment"
msgstr ""

#: ../../manual/editors/python_console.rst:39
msgid ""
"To check what is loaded into the interpreter environment, type dir() at "
"the prompt and execute it."
msgstr ""

#: ../../manual/editors/python_console.rst:45
msgid "Following is a quick overview of the output:"
msgstr ""

#: ../../manual/editors/python_console.rst:47
msgid "``C``: Quick access to ``bpy.context``."
msgstr ""

#: ../../manual/editors/python_console.rst:48
msgid "``D``: Quick access to ``bpy.data``."
msgstr ""

#: ../../manual/editors/python_console.rst:49
msgid "``bpy``: Top level Blender Python API module."
msgstr ""

#: ../../manual/editors/python_console.rst:53
msgid "Auto Completion at work"
msgstr ""

#: ../../manual/editors/python_console.rst:55
msgid ""
"Now, type ``bpy.`` and then press :kbd:`Ctrl-Spacebar` and you will see "
"the Console auto-complete feature in action."
msgstr ""

#: ../../manual/editors/python_console.rst:61
msgid ""
"You will notice that a list of sub-modules inside of bpy appear. These "
"modules encapsulate all that we can do with Blender Python API and are "
"very powerful tools."
msgstr ""

#: ../../manual/editors/python_console.rst:64
msgid "Lets list all the contents of bpy.app module."
msgstr ""

#: ../../manual/editors/python_console.rst:69
msgid ""
"Notice the green output above the prompt where you enabled auto-"
"completion. What you see is the result of auto completion listing. In the"
" above listing all are module attribute names, but if you see any name "
"end with ``(``, then that is a function."
msgstr ""

#: ../../manual/editors/python_console.rst:74
msgid ""
"We will make use of this a lot to help our learning the API faster. Now "
"that you got a hang of this, lets proceed to investigate some of modules "
"in bpy."
msgstr ""

#: ../../manual/editors/python_console.rst:79
msgid "Before tinkering with the modules.."
msgstr ""

#: ../../manual/editors/python_console.rst:81
msgid ""
"If you look at the 3D View in the default Blender scene, you will notice "
"three objects: Cube, Lamp and Camera."
msgstr ""

#: ../../manual/editors/python_console.rst:87
msgid ""
"All objects exist in a context and there can be various modes under which"
" they are operated upon."
msgstr ""

#: ../../manual/editors/python_console.rst:88
msgid ""
"At any instance, only one object is active and there can be more than one"
" selected object."
msgstr ""

#: ../../manual/editors/python_console.rst:89
msgid "All objects are data in the blend-file."
msgstr ""

#: ../../manual/editors/python_console.rst:90
msgid "There are operators/functions that create and modify these objects."
msgstr ""

#: ../../manual/editors/python_console.rst:92
msgid ""
"For all the scenarios listed above (not all were listed, mind you..) the "
"bpy module provides functionality to access and modify data."
msgstr ""

#: ../../manual/editors/python_console.rst:97
msgid "Examples"
msgstr ""

#: ../../manual/editors/python_console.rst:100
msgid "bpy.context"
msgstr ""

#: ../../manual/editors/python_console.rst:104
msgid ""
"For the commands below to show the proper output, make sure you have "
"selected object(s) in the 3D View."
msgstr ""

#: ../../manual/editors/python_console.rst:110
#: ../../manual/editors/python_console.rst:174
#: ../../manual/editors/python_console.rst:213
msgid "Try it out!"
msgstr ""

#: ../../manual/editors/python_console.rst:113
msgid "bpy.context.mode"
msgstr ""

#: ../../manual/editors/python_console.rst:113
msgid "Will print the current 3D View mode (Object, Edit, Sculpt etc.,)."
msgstr ""

#: ../../manual/editors/python_console.rst:116
msgid "bpy.context.object or bpy.context.active_object"
msgstr ""

#: ../../manual/editors/python_console.rst:116
msgid "Will give access to the active object in the 3D View."
msgstr ""

#: ../../manual/editors/python_console.rst:118
msgid "Change X location to a value of 1::"
msgstr ""

#: ../../manual/editors/python_console.rst:122
msgid "Move object from previous X location by 0.5 unit::"
msgstr ""

#: ../../manual/editors/python_console.rst:126
msgid "Changes X, Y, Z location::"
msgstr ""

#: ../../manual/editors/python_console.rst:130
msgid "Same as above::"
msgstr ""

#: ../../manual/editors/python_console.rst:134
msgid "Data type of objects location::"
msgstr ""

#: ../../manual/editors/python_console.rst:139
msgid "Now that is a lot of data that you have access to::"
msgstr ""

#: ../../manual/editors/python_console.rst:145
msgid "``bpy.context.selected_objects``"
msgstr ""

#: ../../manual/editors/python_console.rst:145
msgid "Will give access to a list of all selected objects."
msgstr ""

#: ../../manual/editors/python_console.rst:147
msgid "Type this and then press :kbd:`Ctrl-Spacebar`::"
msgstr ""

#: ../../manual/editors/python_console.rst:151
msgid "To prints out the name of first object in the list::"
msgstr ""

#: ../../manual/editors/python_console.rst:156
msgid ""
"The complex one... But this prints a list of objects not including the "
"active object::"
msgstr ""

#: ../../manual/editors/python_console.rst:162
msgid "bpy.data"
msgstr ""

#: ../../manual/editors/python_console.rst:164
msgid ""
"``bpy.data`` has functions and attributes that give you access to all the"
" data in the blend-file."
msgstr ""

#: ../../manual/editors/python_console.rst:167
msgid ""
"You can access following data in the current blend-file: objects, meshes,"
" materials, textures, scenes, screens, sounds, scripts, etc."
msgstr ""

#: ../../manual/editors/python_console.rst:170
msgid "That is a lot of data."
msgstr ""

#: ../../manual/editors/python_console.rst:180
msgid "Exercise"
msgstr ""

#: ../../manual/editors/python_console.rst:182
msgid ""
"After :kbd:`Return` twice it prints the names of all objects belonging to"
" the Blender scene with name \"Scene\"::"
msgstr ""

#: ../../manual/editors/python_console.rst:187
msgid "Unlink the active object from the Blender scene named 'Scene'::"
msgstr ""

#: ../../manual/editors/python_console.rst:200
msgid "bpy.ops"
msgstr ""

#: ../../manual/editors/python_console.rst:202
msgid ""
"The tool system is built around the concept of operators. Operators are "
"typically executed from buttons or menus but can be called directly from "
"Python too."
msgstr ""

#: ../../manual/editors/python_console.rst:205
msgid ""
"See the `bpy.ops "
"<https://www.blender.org/api/blender_python_api_current/bpy.ops.html>`__ "
"API documentation for a list of all operators."
msgstr ""

#: ../../manual/editors/python_console.rst:208
msgid ""
"Lets create a set of five Cubes in the 3D View. First, delete the "
"existing Cube object by selecting it and pressing :kbd:`X`"
msgstr ""

#: ../../manual/editors/python_console.rst:215
msgid ""
"The following commands are used to specify that the objects are created "
"in layer 1. So first we define an array variable for later reference::"
msgstr ""

#: ../../manual/editors/python_console.rst:221
msgid ""
"We create a reference to the operator that is used for creating a cube "
"mesh primitive::"
msgstr ""

#: ../../manual/editors/python_console.rst:225
msgid ""
"Now in a *for loop*, we create the five objects like this (In the "
"screenshot above, another method is used) : Press :kbd:`Return` twice "
"after entering the command at the shell prompt::"
msgstr ""

#~ msgid "Quick access to ``bpy.context``"
#~ msgstr ""

#~ msgid "Quick access to ``bpy.data``"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "For a list of various operator categories, click here"
#~ msgstr ""

#~ msgid "``C``"
#~ msgstr ""

#~ msgid "``D``"
#~ msgstr ""

#~ msgid "``bpy``"
#~ msgstr ""

#~ msgid "C"
#~ msgstr ""

#~ msgid "D"
#~ msgstr ""

#~ msgid "bpy"
#~ msgstr ""

#~ msgid "That's a lot of data."
#~ msgstr ""

#~ msgid "All objects are data in the Blender file."
#~ msgstr ""

#~ msgid "Following is a quick overview of the output"
#~ msgstr ""

#~ msgid "Quick access to ``bpy.context``."
#~ msgstr ""

#~ msgid "Quick access to ``bpy.data``."
#~ msgstr ""

#~ msgid "Top level Blender Python API module."
#~ msgstr ""

#~ msgid "Note"
#~ msgstr ""

#~ msgid "Will give access to the active object in the 3D View"
#~ msgstr ""

#~ msgid "Change x location to a value of 1"
#~ msgstr ""

#~ msgid "Move object from previous x location by 0.5 unit"
#~ msgstr ""

#~ msgid "Changes x, y, z location"
#~ msgstr ""

#~ msgid "Same as above"
#~ msgstr ""

#~ msgid "Data type of objects location"
#~ msgstr ""

#~ msgid "Now that is a lot of data that you have access to"
#~ msgstr ""

#~ msgid "bpy.context.selected_objects"
#~ msgstr ""

#~ msgid "... then press :kbd:`Ctrl-Spacebar`"
#~ msgstr ""

#~ msgid "Prints out name of first object in the list"
#~ msgstr ""

#~ msgid "Unlink the active object from the Blender scene named 'Scene'"
#~ msgstr ""

#~ msgid "Will print the current 3D View mode (Object, Edit, Sculpt etc.,)"
#~ msgstr ""

#~ msgid "Change X location to a value of 1."
#~ msgstr ""

#~ msgid "Move object from previous X location by 0.5 unit."
#~ msgstr ""

#~ msgid "Changes X, Y, Z location."
#~ msgstr ""

#~ msgid "Same as above."
#~ msgstr ""

#~ msgid "Data type of objects location."
#~ msgstr ""

#~ msgid "Now that is a lot of data that you have access to."
#~ msgstr ""

#~ msgid "... then press :kbd:`Ctrl-Spacebar`."
#~ msgstr ""

#~ msgid "Prints out name of first object in the list."
#~ msgstr ""

#~ msgid ""
#~ "Complex one... But this prints a "
#~ "list of objects not including the "
#~ "active object."
#~ msgstr ""

#~ msgid ""
#~ ":kbd:`Return` twice Prints the names of"
#~ " all objects belonging to the Blender"
#~ " scene with name \"Scene\"."
#~ msgstr ""

#~ msgid "Unlink the active object from the Blender scene named 'Scene'."
#~ msgstr ""

#~ msgid ""
#~ "The following commands are used to "
#~ "specify that the objects are created "
#~ "in layer 1. So first we define "
#~ "an array variable for later reference:"
#~ msgstr ""

#~ msgid ""
#~ "We create a reference to the "
#~ "operator that is used for creating "
#~ "a cube mesh primitive."
#~ msgstr ""

#~ msgid ""
#~ "Now in a *for loop*, we create "
#~ "the five objects like this (In the"
#~ " screenshot above, another method is "
#~ "used) : Press :kbd:`Return` twice after"
#~ " entering the command at the shell"
#~ " prompt."
#~ msgstr ""

