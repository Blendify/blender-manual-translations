# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@gmail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.79 Manual 2.79\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-09 13:55+0100\n"
"PO-Revision-Date: 2019-04-24 02:16+0100\n"
"Last-Translator: Hoang Duy Tran <hoangduytran1960@googlemail.com>\n"
"Language: vi\n"
"Language-Team: London, UK <hoangduytran1960@googlemail.com>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/animation/drivers/workflow_examples.rst:4
msgid "Workflow & Examples"
msgstr "Quy Trình Làm Việc & Các Ví Dụ -- Workflow & Examples"

#: ../../manual/animation/drivers/workflow_examples.rst:6
msgid ""
"Simple Drivers can be configured from the pop-over that appears when "
"adding a new Driver."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:8
msgid ""
"When adding multiple Drivers or for more advanced configurations, it is "
"useful to have open the :doc:`Drivers Editor </editors/drivers_editor>`."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:13
msgid "Examples"
msgstr "Ví Dụ -- Examples"

#: ../../manual/animation/drivers/workflow_examples.rst:16
msgid "Transform Driver"
msgstr "Bộ Điều Vận Biến Hóa -- Transform Driver"

#: ../../manual/animation/drivers/workflow_examples.rst:18
msgid ""
"Control a property with an object's transform. In this example, the Y "
"rotation of Object 2 will be driven by the X position of Object 1."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:21
msgid "Starting from a simple setup with two objects:"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:23
msgid ""
"Add a Driver to the *Rotation Y* property of the second object by "
":kbd:`RMB`-clicking it or with :kbd:`Ctrl-D`."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:27
msgid ""
"Open the *Drivers Editor* and select the *Y Euler Rotation* property in "
"the channels region."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:28
#, fuzzy
msgid "Open the Sidebar region and select the *Drivers* tab."
msgstr ""
"Press :kbd:`N` to open the properties region, scroll down to Drivers "
"panel."

#: ../../manual/animation/drivers/workflow_examples.rst:29
msgid ""
"Configure the driver to be the *Averaged Value* of a *Transform Channel* "
"of the first object."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:33
msgid ""
"Experiment with moving the first object and notice how it affects the Y "
"rotation of the second object."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:37
msgid "Scripted Expression - Orbit a Point"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:39
msgid ""
"Orbit an object's position around a point with a custom *Scripted "
"Expression*. The object's position will change when scrubbing the "
"timeline."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:42
msgid ""
"Using trigonometry, circular motion can be defined in 2D using the sinus "
"and cosine functions. (See `Unit Circle "
"<https://en.wikipedia.org/wiki/Unit_circle>`__)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:45
msgid ""
"In this example, the current frame is used as the variable that induces "
"the motion. ``frame`` is a :ref:`Simple Expression <drivers-simple-"
"expressions>` that corresponds to ``bpy.context.scene.frame_current``."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:51
msgid "Add a driver to the X Location property."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:53
msgid "Set the *Driver Type* to *Scripted Expression*."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:54
msgid "Add the expression ``0 + (sin(frame / 8) * 4)``, where:"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:56
msgid ""
"``frame/8`` : is the current frame of the animation, divided by 8 to slow"
" the orbit down."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:57
msgid ""
"``(sin( )*4)`` : multiplies the result of ``sin(frame/8)`` by 4 for a "
"bigger circle."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:58
msgid "``0 +`` : is used to control the offset to the orbit center point."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:60
msgid ""
"Add a driver to the Y Location property with the expression ``0 + "
"(cos(frame / 8) * 4)``."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:61
msgid ""
"Scrub the timeline to see the effect. Experiment with the variables to "
"control the size and center of the orbit."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:65
msgid "Custom Function - Square Value"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:67
msgid ""
"Make a custom function to get the square of a value (i.e. value\\ "
":sup:`2`). Adding the function to the *Driver Namespace* allows it to be "
"used from driver expressions."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:70
msgid ""
"The *Driver Namespace* has a list of built-in functions for use in driver"
" expressions, as well as constants such as π and e. These can be "
"inspected via the Python Console:"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:84
msgid ""
"To add a new function to the *Driver Namespace*, the function itself "
"needs to be implemented and then added to the "
"``bpy.app.driver_namespace``."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:87
msgid ""
"Add the following to the Text Editor inside Blender and press *Run "
"Script*."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:101
msgid "Add a driver with a *Scripted Expression* such as ``square(frame)``."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:102
msgid "Observe the effect when scrubbing the timeline."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:104
msgid ""
"There are more custom function examples available in Blender's Text "
"Editor :menuselection:`Templates > Python > Driver Functions`."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:109
msgid "Shape Key Driver"
msgstr "Bộ Điều Vận Hình Mẫu -- Shape Key Driver"

#: ../../manual/animation/drivers/workflow_examples.rst:111
msgid ""
"This example is a shape key driver. The driver was added to the shape key"
" Value."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:118
msgid "Shape key driver example."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:120
msgid ""
"This example uses the Armature Bone \"b\" 's Z Rotation to control the "
"Value of a Shape Key. The bone rotation mode is set to XYZ Euler."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:123
#, fuzzy
msgid "The Driver F-curve is mapped like so:"
msgstr "The Driver F-Curve is mapped like so:"

#: ../../manual/animation/drivers/workflow_examples.rst:125
msgid "Bone Z Rotation 0.0 (0.0): Shape Key value 0.0"
msgstr "Bone Z Rotation 0.0 (0.0): Shape Key value 0.0"

#: ../../manual/animation/drivers/workflow_examples.rst:126
msgid "Bone Z Rotation -2.09 (-120.0): Shape Key value 1.0"
msgstr "Bone Z Rotation -2.09 (-120.0): Shape Key value 1.0"

#: ../../manual/animation/drivers/workflow_examples.rst:128
msgid ""
"This kind of driver can also be setup with the Variable Type Rotational "
"Difference."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:130
msgid "See :doc:`Shape Keys </animation/shape_keys/index>` for more info."
msgstr "See :doc:`Shape Keys </animation/shape_keys/index>` for more info."

#: ../../manual/animation/drivers/workflow_examples.rst:134
msgid "Drivers and Multiple Relative Shape Keys"
msgstr ""
"Bộ Điều Vận và Đa Hình Mẫu Tương Đối -- Drivers and Multiple Relative "
"Shape Keys"

#: ../../manual/animation/drivers/workflow_examples.rst:136
msgid ""
"The following screenshots illustrate combining shape keys, bones, and "
"drivers to make multiple chained relative shape keys sharing a single "
"root. While it lacks the convenience of the single Evaluation Time of an "
"absolute shape key, it allows you to have more complex relationships "
"between your shape keys."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:148
msgid "Basis shape key."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:153
msgid "Key1 shape key."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:158
msgid "Key2A shape key."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:163
msgid "Key2B shape key."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:165
msgid ""
"The Basis shape key has the stacks fully retracted. Key1 has the base "
"fully extended. Key2A has the left stack fully extended. Key2B has the "
"right stack fully extended. Key2A and Key2B are both relative to Key1 (as"
" you can see in the field in the bottom right of the Shape Keys panel)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:177
msgid "Key1 must handle conflicting values from the two bones."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:182
msgid ""
"Key2A has different generator coefficients so it is activated in a "
"different range of the bone's position."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:187
msgid "Key2B is the same as Key2A, but is controlled by the second bone."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:189
msgid ""
"The value of Key1 is bound to the position of bones by a driver with two "
"variables. Each variable uses the world Z coordinate of a bone and uses "
"the maximum value to determine how much the base should be extended. The "
"generator polynomial is crafted such that the top of the dominant stack "
"should line up with the bone for that stack."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:195
msgid ""
"The value of Key2A is bound to the position of \"Bone.L\". Its generator "
"parameters are crafted such that when Key1's value reaches 1, the value "
"of Key2A starts increasing beyond zero. In this way, the top of the left "
"stack will move with bone.L (mostly)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:200
msgid ""
"The value of Key2B is bound to the position of \"Bone.R\". Its generator "
"parameters are similar to Key2A so that the top of the right stack will "
"move with bone.R (mostly)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:211
msgid ""
"When both bones are low, Key2B and Key2A are deactivated and Key1 is at "
"low influence."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:216
msgid "Extended."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:218
msgid ""
"Since it is quite easy for bone.L and bone.R to be in positions that "
"indicate conflicting values for Key1 there will be times when the bones "
"do not line up with the tops of their respective stacks. If the driver "
"for Key1 was to use Average or Minimum instead of Maximum to determine "
"the value of the shape key then \"conflicts\" between bone.L and bone.R "
"would be resolved differently. You will choose according to the needs of "
"your animation."
msgstr ""

#~ msgid "These are some driver examples and workflow."
#~ msgstr ""

#~ msgid "Workflow"
#~ msgstr "Quy Trình Làm Việc -- Workflow"

#~ msgid ""
#~ "This example shows you how setup a"
#~ " transform driver. First make sure "
#~ "you are in the Front Ortho view."
#~ " :kbd:`Numpad5`, :kbd:`Numpad1`."
#~ msgstr ""
#~ "This example shows you how setup a"
#~ " transform driver. First make sure "
#~ "you are in the Front Ortho view."
#~ " :kbd:`Numpad5`, :kbd:`Numpad1`."

#~ msgid ""
#~ "In object mode, select then duplicate"
#~ " the default Cube. :kbd:`Shift-D`. Move "
#~ "\"Cube.001\" to a new location."
#~ msgstr ""
#~ "In object mode, select then duplicate"
#~ " the default Cube. :kbd:`Shift-D`. Move "
#~ "\"Cube.001\" to a new location."

#~ msgid ""
#~ "With \"Cube.001\" selected, add a single"
#~ " driver to the *Rotation Y* property."
#~ msgstr ""

#~ msgid "Open the *Graph Editor*, set the Mode to *Drivers*."
#~ msgstr ""

#~ msgid ""
#~ "*Show Only Selected* is useful disabled"
#~ " for drivers, marked green in the "
#~ "picture."
#~ msgstr ""

#~ msgid ""
#~ "Change the *Type* to *Averaged Value*,"
#~ " this will return the averaged value"
#~ " of the driver variables."
#~ msgstr ""

#~ msgid "Modify the driver variable settings:"
#~ msgstr "Modify the driver variable settings:"

#~ msgid "Type -- Transform Channel"
#~ msgstr ""

#~ msgid "Ob/Bone -- Cube"
#~ msgstr ""

#~ msgid "Transform Type -- X Location"
#~ msgstr ""

#~ msgid "Transform Space -- World Space"
#~ msgstr ""

#~ msgid ""
#~ "When finished, \"Cube.001\" should rotate "
#~ "on the Y axis when moving \"Cube\""
#~ " left to right."
#~ msgstr ""

#~ msgid ""
#~ "When adding multiple Drivers or for "
#~ "more advanced configurations, it is "
#~ "useful to have open the *Drivers "
#~ "Editor*."
#~ msgstr ""

#~ msgid ""
#~ "Add a Driver to the *Rotation Y*"
#~ " property of the second object with"
#~ " the context menu or with "
#~ ":kbd:`Ctrl-D`."
#~ msgstr ""

#~ msgid "Driver Expression"
#~ msgstr "Biểu Thức của Bộ Điều Vận -- Driver Expression"

#~ msgid ""
#~ "Here are some examples using the "
#~ "scripted expression Expr to set the "
#~ "Driver Value."
#~ msgstr ""

#~ msgid "Object rotation example."
#~ msgstr ""

#~ msgid "Orbit a Point"
#~ msgstr "Quỹ Đạo quanh một Điểm -- Orbit a Point"

#~ msgid ""
#~ "Here two drivers have been added "
#~ "to the Cube, X Location and Y "
#~ "Location."
#~ msgstr ""

#~ msgid "The scripted expressions are being used to set the object location."
#~ msgstr ""

#~ msgid "X Location Expr"
#~ msgstr "Phép Toán Địa Điểm X -- X Location Expr"

#~ msgid "``0 + (sin(frame / 8) * 4)``"
#~ msgstr ""

#~ msgid ""
#~ "``(frame/8)`` : is the current frame "
#~ "of the animation, divided by 8 to"
#~ " slow the orbit down. ``(sin( )*4)``"
#~ " : This returns the sine of "
#~ "(frame/8), then multiplies by 4 for "
#~ "a bigger circle. ``0 +`` : is "
#~ "used to control the X Location "
#~ "offset of the orbit."
#~ msgstr ""
#~ "``(frame/8)`` : is the current frame "
#~ "of the animation, divided by 8 to"
#~ " slow the orbit down. ``(sin( )*4)``"
#~ " : This returns the sine of "
#~ "(frame/8), then multiplies by 4 for "
#~ "a bigger circle. ``0 +`` : is "
#~ "used to control the X Location "
#~ "offset of the orbit."

#~ msgid "Y Location Expr"
#~ msgstr "Phép Toán Địa Điểm Y -- Y Location Expr"

#~ msgid "``0 + (cos(frame / 8) * 4)``"
#~ msgstr ""

#~ msgid ""
#~ "``(frame / 8)`` : is the current"
#~ " frame of the animation, divided by"
#~ " 8 to slow the orbit down. "
#~ "``(cos( ) * 4)`` : This returns"
#~ " the cosine of (frame/8), then "
#~ "multiplies by 4 for a bigger "
#~ "circle. ``0 +`` : is used to "
#~ "control the Y Location offset of "
#~ "the orbit."
#~ msgstr ""
#~ "``(frame / 8)`` : is the current"
#~ " frame of the animation, divided by"
#~ " 8 to slow the orbit down. "
#~ "``(cos( ) * 4)`` : This returns"
#~ " the cosine of (frame/8), then "
#~ "multiplies by 4 for a bigger "
#~ "circle. ``0 +`` : is used to "
#~ "control the Y Location offset of "
#~ "the orbit."

#~ msgid "``frame`` is the same as bpy.context.scene.frame_current."
#~ msgstr ""

#~ msgid "Driver Namespace"
#~ msgstr "Tên Miền của Bộ Điều Vận -- Driver Namespace"

#~ msgid ""
#~ "There is a list of built-in "
#~ "driver functions and properties. These "
#~ "can be displayed via the Python "
#~ "Console:"
#~ msgstr ""
#~ "There is a list of built-in "
#~ "driver functions and properties. These "
#~ "can be displayed via the Python "
#~ "Console:"

#~ msgid ""
#~ "This script will add a function to"
#~ " the driver namespace, which can then"
#~ " be used in the expression "
#~ "``driver_func(frame)``"
#~ msgstr ""

#~ msgid ""
#~ "Add a Driver to the *Rotation Y*"
#~ " property of the second object by "
#~ "right-clicking it or with :kbd:`Ctrl-D`."
#~ msgstr ""

#~ msgid "Open the *Drivers Editor* (:kbd:`Shift-F6`)."
#~ msgstr ""

#~ msgid "In the channels region, select the *Y Euler Rotation* property."
#~ msgstr ""

#~ msgid ""
#~ "Using trigonometry, circular motion can "
#~ "be defined in 2D using the sin "
#~ "and cos functions. (See `Unit Circle "
#~ "<https://en.wikipedia.org/wiki/Unit_circle>`__)."
#~ msgstr ""

#~ msgid "Add the expression ``0 + (sin(frame / 8) * 4)``"
#~ msgstr ""

#~ msgid ""
#~ "Add a driver to the Y Location "
#~ "property with the expression ``0 + "
#~ "(cos(frame / 8) * 4)``"
#~ msgstr ""

#~ msgid "Add a driver with a *Scripted Expression* such as ``square(frame)``"
#~ msgstr ""

