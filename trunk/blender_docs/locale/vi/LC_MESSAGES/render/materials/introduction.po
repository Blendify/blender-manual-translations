# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@gmail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.79 Manual 2.79\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-27 20:49-0600\n"
"PO-Revision-Date: 2019-12-05 13:42+0000\n"
"Last-Translator: Hoang Duy Tran <hoangduytran1960@googlemail.com>\n"
"Language: vi\n"
"Language-Team: London, UK <hoangduytran1960@googlemail.com>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/render/materials/introduction.rst:4
msgid "Introduction"
msgstr "Giới Thiệu -- Introduction"

#: ../../manual/render/materials/introduction.rst:6
msgid ""
"Materials control the appearance of meshes, curves, volumes and other "
"objects. They define the substance that the object is made of, its color "
"and texture, and how light interacts with it."
msgstr ""

#: ../../manual/render/materials/introduction.rst:10
msgid ""
"Physically based materials can be created using the :doc:`Principled BSDF"
" </render/shader_nodes/shader/principled>`, :doc:`Principled Hair "
"</render/shader_nodes/shader/hair_principled>`, and :doc:`Principled "
"Volume </render/shader_nodes/shader/volume_principled>` shaders. With "
"these uber shaders, a wide variety of materials including plastic, glass,"
" metal, cloth, skin, hair, smoke and fire can be created."
msgstr ""

#: ../../manual/render/materials/introduction.rst:17
msgid ""
"A flexible :doc:`shading nodes </render/shader_nodes/introduction>` "
"system is used to set up textures and create entirely different types of "
"materials like toon shading."
msgstr ""

#: ../../manual/render/materials/introduction.rst:22
#, fuzzy
msgid "Setting up Materials"
msgstr "-- Using Materials"

#: ../../manual/render/materials/introduction.rst:24
msgid ""
"Materials can be created in either the :doc:`Material properties "
"</editors/properties_editor>`, or in the :doc:`Shader Editor "
"</editors/shader_editor/index>`. These provide a different view of the "
"same shader nodes and material settings."
msgstr ""

#: ../../manual/render/materials/introduction.rst:28
msgid ""
"The defaults Shading workspace has a Shader Editor and a 3D Viewport that"
" can be set to Material Preview or Rendered shading, to interactively "
"preview how the material interacts with objects and lights in the scene."
msgstr ""

#: ../../manual/render/materials/introduction.rst:32
msgid ""
"Materials are data-blocks that can be :doc:`assigned "
"</render/materials/assignment>` to one or more objects, and different "
"materials can be assigned to different parts of meshes."
msgstr ""

#: ../../manual/render/materials/introduction.rst:35
msgid ""
"Image textures can be created from scratch in :doc:`Texture Paint Mode "
"</sculpt_paint/texture_paint/index>`, or by loading in existing images "
"with the :doc:`Image Texture node </render/shader_nodes/textures/image>`."
" A variety of :doc:`procedural texture nodes "
"</render/shader_nodes/textures/index>` is also available."
msgstr ""

#: ../../manual/render/materials/introduction.rst:41
msgid "Components"
msgstr ""

#: ../../manual/render/materials/introduction.rst:43
msgid ""
"Materials consist of three shaders, defining the appearance of the "
"surface, the volume inside the object, and the displacement of the "
"surface."
msgstr ""

#: ../../manual/render/materials/introduction.rst:51
msgid "Surface Shader"
msgstr ""

#: ../../manual/render/materials/introduction.rst:53
msgid ""
"The :doc:`surface shader </render/materials/components/surface>` controls"
" the textures and light interaction at the surface of the mesh."
msgstr ""

#: ../../manual/render/materials/introduction.rst:58
msgid "Volume Shader"
msgstr ""

#: ../../manual/render/materials/introduction.rst:60
msgid ""
"The :doc:`volume shader </render/materials/components/volume>` defines "
"the interior of the mesh. A material can have just a volume shader for "
"cases like smoke and fire, or it can be combined with a surface shader "
"for materials like cloudy glass."
msgstr ""

#: ../../manual/render/materials/introduction.rst:66
msgid "Displacement"
msgstr ""

#: ../../manual/render/materials/introduction.rst:68
msgid ""
"The shape of the surface and the volume inside it may be altered by "
":doc:`displacement </render/materials/components/displacement>`. This "
"way, textures can then be used to make the mesh surface more detailed."
msgstr ""

#: ../../manual/render/materials/introduction.rst:72
msgid ""
"Depending on the settings, the displacement may be virtual, only "
"modifying the surface normals to give the impression of displacement, "
"which is known as bump mapping, or a combination of real and virtual "
"displacement."
msgstr ""

#: ../../manual/render/materials/introduction.rst:78
msgid "Physically Based Shading"
msgstr ""

#: ../../manual/render/materials/introduction.rst:80
msgid ""
"The material system is built with physically-based rendering in mind, "
"separating how a material looks and which rendering algorithm is used to "
"render it. This makes it easier to achieve realistic results and balanced"
" lighting, though there are a few things to keep in mind."
msgstr ""

#: ../../manual/render/materials/introduction.rst:85
msgid ""
"In order for materials to work well with global illumination, they should"
" be energy conserving. That means they cannot reflect more light than "
"comes in. This property is not strictly enforced, but if colors are in "
"the range 0.0 to 1.0, and :abbr:`BSDF (Bidirectional scattering "
"distribution function)`\\ s are only mixed together with the Mix Shader "
"node, this will automatically be true."
msgstr ""

#: ../../manual/render/materials/introduction.rst:91
msgid ""
"It is however, possible to break this, with color values higher than 1.0 "
"or using the Add Shader node, but one must be careful when doing this to "
"keep materials behaving predictably under various lighting conditions."
msgstr ""

#~ msgid ""
#~ "Image textures can be created from "
#~ "scratch in :doc:`texture paint mode "
#~ "</sculpt_paint/texture_paint/index>`, or by loading"
#~ " in existing images with the "
#~ ":doc:`Image Texture node "
#~ "</render/shader_nodes/textures/image>`. A variety of"
#~ " :doc:`procedural texture nodes "
#~ "</render/shader_nodes/textures/index>` is also "
#~ "available."
#~ msgstr ""

