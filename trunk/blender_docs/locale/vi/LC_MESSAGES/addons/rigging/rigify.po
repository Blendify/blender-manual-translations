# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.81 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.81 Manual 2.81\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-04 02:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/addons/rigging/rigify.rst:4
msgid "Rigify"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:7
msgid "Introduction"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:9
msgid "Rigify helps automate the creation of character rigs. It is based around a building-block approach, where you build complete rigs out of smaller rig parts (e.g. arms, legs, spines, fingers...). The rig parts are currently few in number, but as more rig parts are added to Rigify it should become more and more capable of rigging a large variety of characters and creatures."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:14
msgid "Rigify also operates on the principle that once a rig is created, that rig should no longer need Rigify. This means you can always distribute rigs created with Rigify to people who do not have it and the rigs will still function completely."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:18
msgid "It is important to note that Rigify only automates the creation of the rig controls and bones. It does not attach the rig to a mesh, so you still have to do skinning etc. yourself."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:23
msgid "Main Features"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:29
msgid "Modular rigging"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:26
msgid "Rigify build blocks can be mixed together to rig any character you want. If you need to build a character with five arms and one leg Rigify can handle it for you creating all the required complex controls system (FK, IK, and all the relative snapping tools and the UI) in few seconds."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:34
msgid "Nondisruptive re-rig"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:32
msgid "If the generated rig doesn’t fit all the features you need or, for example, you decide to add something more to your character (like a sixth arm or a tail), you can re-generate your rig without losing your previously generated features and your animation data."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:39
msgid "Advanced and flexible feature set for character animation"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:37
msgid "The included rig samples (limbs, spines, tails, fingers, faces…) adds to all the stretchy FK/IK features a direct deformation secondary layer that lets you flex, bend and deform the character as you like through interactive Bendy Bones controls."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:43
msgid "Shareable animation through all Rigify rigs"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:42
msgid "Since the control system is generated by Rigify, if you share a meta-rig through different characters you will be able to share data between them even if they have different proportions."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:48
msgid "Extendable feature set"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:46
msgid "You can save and encode your meta-rigs to a button to have them available at any time without recreating it by hand or share your meta-rigs with other people. Through Python scripting you can also extend Rigify with new Rigify-types or new rig samples."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:52
msgid "Ready to go"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:51
msgid "Once you generate your rig you won’t need Rigify or any other add-on to use it."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:55
msgid "Activation"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:57
msgid "Open Blender and go to Preferences then the Add-ons tab."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:58
msgid "Click Rigging then Rigify to enable the script."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:62
msgid "Basic Usage"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:64
msgid "Add a meta-rig structure from the :menuselection:`Add --> Armature` menu."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:65
msgid "Edit the bone positions to match the character geometry."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:66
#: ../../manual/addons/rigging/rigify.rst:463
msgid "In the armature properties click on the *Generate* button to generate the rig."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:70
msgid "Add a Predefined Meta-Rig"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:72
#: ../../manual/addons/rigging/rigify.rst:702
#: ../../manual/addons/rigging/rigify.rst:891
msgid "Reference"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "Mode"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:75
#: ../../manual/addons/rigging/rigify.rst:705
msgid "Object Mode"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "Menu"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:76
msgid ":menuselection:`Add --> Armature`"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "Hotkey"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:77
#: ../../manual/addons/rigging/rigify.rst:707
msgid ":kbd:`Shift-A`"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:79
msgid "Rigify stores all the information required to generate complex rig controls and mechanism in more simple armatures called “meta-rigs”."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:82
msgid "The precompiled meta-rigs can be found in the *Add* menu. Currently available meta-rig types are:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:85
msgid "Basic Human"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:86
msgid "Basic Quadruped"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:87
msgid "Human"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:88
msgid "Cat"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:89
msgid "Wolf"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:90
msgid "Horse"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:91
msgid "Shark"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:95
msgid "Edit Bone Positions"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:97
msgid "To correctly match your character, meta-rig bones must be moved to correct positions. This can be achieved in two different ways: Pose Mode or Edit Mode."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:102
msgid "Rigify assumes that 1 unit corresponds to 1 meter. So a human is about 2 units tall. If your character is in a different scale and you are more familiar with modeling rather than rigging, it is suggested to scale it to Rigify dimensions before positioning the meta-rig bones. f you want to scale the character’s geometry, we suggest you to first scale up the character in Object Mode, then apply the geometry scale with the *Apply Scale* tool."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:110
msgid "Rigify Human Alignment Tips"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:112
msgid "Limbs: Keep the legs as straight as possible in the front view (Rigify human works better in predictable cases). Give the knee and the elbow a slight bend angle (Rigify needs to know where your knee/elbow is pointing)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:114
msgid "Torso: Keep the spine as straight as possible in the front view (Rigify human works better in predictable cases). The last bone of the spine is the head. By default the next two bones (top to bottom) are considered the neck bones. It is suggested to keep the neck bones as aligned as possible while editing."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:117
msgid "Face: Positioning face bones can be tricky if you are not an expert in bone editing and they are almost useless if you plan to make facial animation through shape keys. Consider removing face features from your character if they aren’t really needed. If you don’t need the face all the face bones can be deleted. All the face bones are on the first armature layer by default. You can select them by displaying only bone layer 1, selecting all of its content and then deleting the bones in Edit Mode to correctly remove the face."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:125
msgid "If you want to scale all the face bones at once, consider scaling the face master bone in Pose Mode (see Pose Mode matching method). The face master bone is placed in the same position of the head bone. To select it easily, hide all other bone layers."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:132
msgid "Pose Mode Matching (Basic)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:134
msgid "Enter the meta-rig Pose Mode. Rotate, scale, and translate the bones in the correct position. When bones are in correct positions (always staying in Pose Mode) use :menuselection:`Apply --> Apply Pose As Rest Pose`."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:140
msgid "Connected bones cannot be translated in Pose Mode. You can scale the parent bones to match the general length and then refine child bones scale. For more detailed information on armature modes please refer to the :doc:`armatures section </animation/armatures/bones/editing/introduction>`."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:147
msgid "Edit Mode Matching (Advanced)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:149
msgid "Some basic armature display setup is suggested before entering bone Edit Mode."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:151
msgid "With the meta-rig selected, go in the Properties editor and click on the Object tab. Scroll down to the display panel and enable X-ray and under *Maximum Draw Type* selector select *Wire*. This way the bones will always be drawn in wireframe on top of your geometry."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:155
msgid "Then, always in the Properties editor click on the Armatures tab and under display check the *Axis* checkbox. This way you the bones rotation axes will be displayed during the edit process."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:158
msgid "For more detailed information on armature display modes please refer to the :doc:`Display panel page </animation/armatures/properties/display>`."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:163
msgid "Bone Positioning Guide"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:166
msgid "Face Bones"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:168
msgid "Start by identifying basic face landmarks to follow as guide for bones placement."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:170
msgid "Orange lines represent bones that should be placed in closed loops."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:171
msgid "Yellow lines represent bones whose position depends on surrounding bone loops."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:172
msgid "Red lines represent outer edge bones."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:173
msgid "Purple lines represent bridging bones used to cover deforming flesh."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:175
msgid "The eyes-nose loop area is split in different parts identified by bone names. Follow the image to place the bones."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:177
msgid "Brow Placement"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:179
msgid "Keeping aligned the mid bones in \"brow\", \"brow.b\", \"lid.t\", \"lid.t\" and cheek will give better results after rig generation."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:182
msgid "Also the jaw-ear area is split in different parts identified by bone names. Follow the image to place the bones."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:184
msgid "Jaw Placement"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:186
msgid "Try to place \"ear.L\" bone covering the part of the ear attached to the mandible (lower jaw). Do the same with temple bone trying to cover the part you don’t want to move with the jaw, this way you will also determine the jaw pivot position."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:192
msgid "While placing the lip bones you should keep the opposite bone chains merged in the middle. Tearing the merge point apart may result in a misalignment of controls in the final rig."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:195
msgid "After the main face bones are placed use the cheek bone to connect the eye-nose area to the jaw mouth area. Then do the same with the brow area. This process will automatically define face muscles compression areas."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:198
msgid "Merge Points"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:200
msgid "The rig will generically work as its best if you keep the bone connected at their merge points."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:202
msgid "Position the eye bones in the eye pivot point facing right **toward** the face on the Y axis."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:204
msgid "Eye Pivot"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:206
msgid "If your eye has a spherical shape you can define its pivot by entering Edit Mode and selecting two opposite vertices on the center meridian -- or the opposite poles -- and snapping the cursor to selection by pressing :menuselection:`Snap --> Cursor To Selected`. If your eye is a complete sphere and its location it’s not applied, than you can just use its center of mass."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:211
msgid "Finally position the teeth bones on your teeth geometry and the tongue bone chain as described in the figure."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:213
msgid "Tongue"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:215
msgid "The tongue will work better if the bones are aligned at the symmetry line."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:217
msgid "Before generating the rig ensure the face master bone is facing upward."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:221
msgid "Torso Bones"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:223
msgid "Start by identifying on your character basic torso zones to follow as guide for bones placement."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:225
msgid "Head, chest and pelvis are rigid zones, so they require less bones. Having a good edge loop placement around zone boundaries on your model will help in having correct deformation after armature binding."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:229
msgid "Starting from the side view, place the main spine bones trying to use one bone for the rigid areas and two for the flexible ones. In addition to the main spine, the torso is provided with additional pelvis bones (to oppose the leg bending), two breast controls and two shoulder bones."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:234
msgid "Even if the pelvis bones will not appear in the final rig as controls, they will contribute to deformation."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:236
msgid "Bone Placement"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:238
msgid "Try to keep the spine as centered as possible inside the mesh bounding volume, just apply a slight offset toward the back. In a similar way, consider the shoulder bones as general deformers; placing it too forward -- where the collar bone should be -- could cause undesired deformations."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:244
msgid "Limbs Bones"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:246
msgid "While placing the arm bones try to start having a straight line that goes from the shoulder to the hand in both front and top view. After this is done just add a slight bend to the elbow. This can be easily done by going in the top view, entering armature Edit Mode and sliding the bone junction between forearm and upper_arm slightly toward the world’s Y axis."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:251
msgid "For the leg you can follow a similar process. Start by aligning the leg bones creating a straight line from the hips to the ankle, then place the foot and the toe accordingly. Remember to add a slight bend to the knee. This can be easily done by going in the side view, entering armature Edit Mode and sliding the bone junction between thigh and shin slightly toward the world’s Y axis."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:256
msgid "Finally align the heel bone by going in the front view and placing his head and tail to fill the foot size from side to side then, in the side view, align the bone at the point where the heel just touches the ground floor."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:262
msgid "From version 0.5 and above there is no more need of manual bone rolls alignment, the generate function will take care of that for you evaluating it from bend axis; just insert a slight bend in your limb and it’s done! If you need more control on the orientation follow the guidelines described in `Advanced Usage`_."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:269
msgid "Fingers Bones"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:271
msgid "Start by placing, finger by finger, all the knocks in place."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:273
msgid "Fingers Placement"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:275
msgid "An easy and effective method to do this operation is to select on the mesh the corresponding edge loop in Edit Mode and use the *Cursor to Selection* snap. Then you can snap the bone to the corresponding loop using the *Selection to Cursor* snap."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:279
msgid "Finalize the positioning by taking care of bone rolls (the X axis is set as bend axis)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:281
msgid "Bone Roll"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:283
msgid "If your character's hand is placed like the above figures, finger axis alignment can be easily done by selecting all the bones of the single finger chain and recalculating the bone rolls :menuselection:`Recalculate Roll --> Global -Z Axis`."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:287
msgid "Thumb may require more tweaking depending on your character's mesh topology, usually :menuselection:`Recalculate Roll --> Global +Y Axis` is a good starting point."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:290
msgid "When the fingers are in place proceed placing the palm bones."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:292
msgid "Palm Placement"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:294
msgid "Try to keep palm bones' heads at a little distance between each other. This distance is required for Rigify to define the palm controls hierarchy. Palm axis alignment can be easily done by selecting all the palm bones and recalculating the bone rolls :menuselection:`Recalculate Roll --> Global -Z Axis`."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:301
msgid "For more detailed information on bones and rolls refer to the :doc:`Bone Structure </animation/armatures/bones/structure>` and :ref:`armature-bone-roll`."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:306
msgid "Generating the Rig"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:308
msgid "With the bones in the correct positions, jump back in Object Mode, go to the Armature tab, scroll down to the bottom and click on the *Generate* button to finalize the rig creation. The generation process will take from few seconds to one minute depending on rig complexity and hardware specs of your machine. If the generated rig needs tweaking you can modify the meta-rig accordingly and then click again on the generate button. If the rig already exists, Rigify will simply overwrite it retaining all your modifiers and constraints and -- where possible -- all the previously generated features."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:317
msgid "If you need to generate more than one rig in the scene or update a specific one (when there are more than one in the same file) follow the instructions in the `Advanced Rig Generation`_ section."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:320
msgid "Rig Updating"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:322
msgid "To make the rig overwriting work as expected, you need to have **both** the rig and the meta-rig visible before generating again."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:327
msgid "As with all Python add-ons, Blender interface cannot be updated until the Python script execution is over. Wait until the rig appears to see the results."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:332
msgid "Binding the Geometry to the Rig"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:334
msgid "To bind the geometry to the rig you can use your preferred tools. Just few things you have to know:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:336
msgid "All the deforming bones are on the armature layer 30."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:337
msgid "Eyes and Teeth bones are not deforming. You are supposed to bind the eyes and teeth geometry through Child Of constraints."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:339
msgid "Usually armature deform with automatic weights do a really good job out of the box if you correctly place your bones (and there’s enough topology to work with!)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:342
msgid "For more detailed information on armature layers, armature modifier and weight painting refer to the Blender manual."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:346
msgid "Rig Features Description"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:348
msgid "After human rig generation a new armature named “Rig” will be added to your scene. This is the character rig you have generated from the human meta-rig and will contain all the features."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:353
#: ../../manual/addons/rigging/rigify.rst:553
#: ../../manual/addons/rigging/rigify.rst:679
msgid "Limbs"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:355
msgid "Each limb will have a gear widget at its base. This is the utility bone that contains all the sub-rig properties. The rig features will be displayed anyway when the affected bone is selected but if you are looking in the Graph editor for those properties’ animated values, this is most likely the bone to look at. Rigify’s super limb will list the following features:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:362
msgid "IK/FK Snapping"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:361
msgid "To snap one chain to another just select the control you want to snap and in the Sidebar panel the snap buttons will appear. Click on the snap you want and it’s done!"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:367
msgid "FK Limb Isolation"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:365
msgid "Slider (0, 1)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:367
msgid "When set to 1 the FK arm will not rotate with the torso and will retain is rotation in world space instead."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:382
msgid "IK Following"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:370
msgid "Boolean (0=False, 1=True)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:372
msgid "When the IK follow is set to 1 the IK limb will follow his parent depending on the Root/Parent slider. When set to 0 the IK limb will stay fixed in space whatever the rest of the rig will do. This is an useful option if you want to create your own Child Of constraint on the IK limb toward another part of the rig itself (like parenting the hand to the head)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:382
msgid "IK Limb Domain Space Select"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:378
msgid "Slider Root/Parent (0=Root, 1=Parent)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:380
msgid "When set to Root the IK limb will move with the root, when set to Parent will move along with the torso. This value depends from the IK Follow option."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:388
msgid "IK/FK Limb Interactive Blending"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:385
msgid "Slider (0=IK, 1=FK)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:387
msgid "When set to IK the arm will follow the IK controls, when set to FK the arm will follow the FK controls."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:404
msgid "Pole Vector Type Switch"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:391
msgid "Boolean (0=Rotational Pole, 1=Standard pole vector)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:393
msgid "When set to 0 the IK arm will use the rotational pole vector (the arrow at the base of the limb). Rotating/translating/scaling the arrow will control the IK limb base. When set to 1 the classic pole vector will be displayed and used to orient the IK limb. The arrow will continue to handle the scale and the location of the IK limb base."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:404
msgid "Pole Vector Following"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:399
msgid "Slider (0= Root, 1=Limb)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:401
msgid "If pole vector switch is set to 1 (standard pole), then this value defines the pole’s parenting. If Pole Following is set to 1 then the pole vector will be parented to the limb, if set to 0 will instead follow the root. This properties also depends on the IK follow control. When The general IK follow is set to 0, then the pole vector following will have no effect."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:410
msgid "IK Auto-Stretching"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:407
msgid "Slider (0=No stretching, 1=Full Stretch)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:409
msgid "When set to 0 the IK limb it’s constrained to his rest length. When set to 1 the IK limb will stretch until it reaches the IK effector."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:419
msgid "Bendy Bones Flexible Tweaking"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:413
msgid "For each limb -- depending on the user defined meta-rig options -- multiple bone segments will be created. Each bone can be controlled by controls placed at the respective bone’s head/tail. Tweaks movement will depend from the general IK limb position but they can be moved apart, twisted and scaled freely, even reaching virtually impossible limb shapes."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:418
msgid "Just select the desired tweak control and do whatever you want with it."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:422
msgid "Torso"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:428
msgid "Neck Follow"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:425
msgid "Slider (0=Neck Follows Torso, 1=Neck Follows Chest)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:427
msgid "This slider controls the rotations isolation for the neck bones. When set to 0 the neck will stay oriented as the Torso (the big box control). When set to 1 the neck will be oriented as the Chest (the big circle in the shoulder area)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:436
msgid "Head Follow"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:431
msgid "Slider (0=Head Follows Torso, 1=Head Follows Neck)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:433
msgid "This slider controls the rotations isolation for the head. When set to 0 the head will stay oriented as the Torso (the big box control). When set to 1 the head will be oriented as the neck."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:439
msgid "Face"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:446
msgid "Mouth Lock"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:442
msgid "Slider (0=Free Lips, 1=Lips Sealed)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:444
msgid "This slider controls the mouth opening. When set to 0 moving/rotating the jaw bone will result in mouth opening, when set to 1 the lips will stay sealed while the jaw is moving."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:455
msgid "Eyes Following"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:449
msgid "Slider (0=locked eyelids, 1=automatic eyelids)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:451
msgid "This slider controls the eyelid automation. When set to 1 the eyelids and the lower eyebrow will follow the eye movement giving a realistic effect to the character, when set to 0 no automation will happen."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:458
msgid "Advanced Usage"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:460
msgid "Add a single bone from the :menuselection:`Add --> Armature` menu."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:461
msgid "Go in armature Edit Mode and build the meta rig by samples or Rigify-types."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:462
msgid "Define Rigify layers, bone grouping and selection sets."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:467
msgid "How Rigify Works"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:471
msgid "Rigify Meta-Rigs are split in multiple Sub-Rigs"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:470
msgid "A meta-rig is an assembly of bone chains. A bone chain is identified by the *Connected* attribute. Bone chains can be further connected together by parenting them without using the *Connected* attribute (i.e. using the *Keep Offset* option while parenting)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:476
msgid "A custom attribute is set on the first bone of the sub-rig chain"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:474
msgid "Each first bone of a bone chain has a custom attribute on it which is a Rigify custom property that identifies the sub-rig type. At rig generation time Rigify will determine which controls and deform bones will be created processing the meta-rig from the first bone to the last of each chain."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:480
msgid "New meta-rigs are created assembling sub-rigs samples"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:479
msgid "Since a meta-rig is just a collection of sub-rigs, new meta-rigs can be built assembling sub-rigs in different ways. This way an infinite number of meta-rigs can be built from the same rigging blocks."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:487
msgid "All the mechanics, deformation bones and widget are created on a single click"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:483
msgid "The meta-rig contains more information than the visualized bones. In fact at generation time Rigify will identify each sub-rig type and depending on the selected options will create all the sophisticated controls, switches, and deforming bones with a single click."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:490
msgid "Rigify Rig Types"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:492
msgid "Rig types are the properties collection used by Rigify to identify what kind of rig the user is building."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:496
msgid "The list of available rig types appears in the Bone properties tab when the bone is selected in Pose Mode. Scroll down the Properties editor to find Rigify Type panel."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:499
msgid "The currently available rig types are:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:503
#: ../../manual/addons/rigging/rigify.rst:668
msgid "Basics"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:513
#: ../../manual/addons/rigging/rigify.rst:669
msgid "``basic.copy_chain``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:506
msgid "Will copy the bone chain keeping all the parent relations untouched. Useful as utility rig-type for custom rigs."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:508
#: ../../manual/addons/rigging/rigify.rst:558
#: ../../manual/addons/rigging/rigify.rst:569
msgid "Requirement: A chain of at least two connected bones."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:510
#: ../../manual/addons/rigging/rigify.rst:520
msgid "control (boolean)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:511
msgid "When checked control bones and widgets will be created."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:513
#: ../../manual/addons/rigging/rigify.rst:526
msgid "deform (boolean)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:513
msgid "When checked deform bones will be created."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:526
#: ../../manual/addons/rigging/rigify.rst:670
msgid "``basic.super_copy``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:516
msgid "Will copy the bone. Useful as utility rig type for adding custom features or specific deform bones to your rigs."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:518
msgid "Requirement: A single bone."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:521
msgid "When checked control bone and widgets will be created."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:522
msgid "widget (boolean)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:523
msgid "When checked a circle widget will be created in replacement to the standard."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:525
msgid "When checked deform bone will be created."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:529
#: ../../manual/addons/rigging/rigify.rst:674
msgid "Spines"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:550
#: ../../manual/addons/rigging/rigify.rst:675
msgid "``spines.super_spine``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:532
msgid "Will create a complete bendy and stretchy b-bones spine system based on bone numbers of your bone chain and user defined options."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:535
msgid "Requirement: A chain of at least three connected bones (base system)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:537
msgid "pivot position (integer)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:538
msgid "Defines the pivot position for torso and hips."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:543
msgid "head (boolean)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:540
msgid "When checked neck and head systems will be added to your spine rig."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:543
msgid "neck position (integer)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:543
msgid "Defines the bone where the neck system starts. The last bone will always be the head system. If neck position is the last bone of the chain, then only the head system will be created ignoring the neck."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:550
msgid "tail (boolean)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:546
msgid "When checked tail system will be added to your spine rig."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:550
msgid "tail position (integer)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:549
msgid "Defines the bone where the tail system starts. The next bone will always be the hips system."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:564
#: ../../manual/addons/rigging/rigify.rst:683
msgid "``limbs.simple_tentacle``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:556
msgid "Will create a bendy and stretchy b-bones tentacle chain or automatic bendy and stretchy finger controls."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:564
msgid "Automation Axis (X, Y, Z, None)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:561
msgid "Enables the automation on the selected axis. Multiple axis or none can be selected holding :kbd:`Shift-LMB`. When enabled the controls of the last bones will copy the rotations from the previous ones. The option is exposed on the controls of the final rig as a Copy Rotation constraint and can be disabled even after rig is generated, or at animation time."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:572
#: ../../manual/addons/rigging/rigify.rst:684
msgid "``limbs.super_finger``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:567
msgid "Will create a bendy and stretchy chain or automatic bendy and stretchy finger depending on a master control bone."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:572
msgid "Bend Rotation Axis (X, Y, Z, -X, -Y, -Z)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:572
msgid "Defines the automatic rotation axis to be linked to the scale of the master bone."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:631
#: ../../manual/addons/rigging/rigify.rst:685
msgid "``limbs.super_limb``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:575
msgid "Will create a full featured bendy and stretchy limb depending on the user defined options. Available limb types:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:594
msgid "Arm"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:579
msgid "Requirement: A chain of at least three connected bones (upper_arm, forearm, hand)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:581
#: ../../manual/addons/rigging/rigify.rst:600
#: ../../manual/addons/rigging/rigify.rst:618
msgid "Rotation Axis (Automatic, X, Z)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:582
#: ../../manual/addons/rigging/rigify.rst:601
#: ../../manual/addons/rigging/rigify.rst:619
msgid "Defines the bend axis for the IK chain. FK chains will have a totally free degree of rotation on all axes."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:583
#: ../../manual/addons/rigging/rigify.rst:602
#: ../../manual/addons/rigging/rigify.rst:620
msgid "Limb Segments (integer)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:584
#: ../../manual/addons/rigging/rigify.rst:603
#: ../../manual/addons/rigging/rigify.rst:621
msgid "Defines the number of additional tweak controls each limb bone will have on the final rig."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:585
#: ../../manual/addons/rigging/rigify.rst:604
#: ../../manual/addons/rigging/rigify.rst:622
msgid "B-Bone Segments (integer)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:586
#: ../../manual/addons/rigging/rigify.rst:605
#: ../../manual/addons/rigging/rigify.rst:623
msgid "Defines the number of b-bone segments each tweak control will be split into."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:589
#: ../../manual/addons/rigging/rigify.rst:608
#: ../../manual/addons/rigging/rigify.rst:626
msgid "FK Extra Layers"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:588
#: ../../manual/addons/rigging/rigify.rst:607
#: ../../manual/addons/rigging/rigify.rst:625
msgid "Defines on which bone layer the FK chain will be created. The yellow dot shows where will be placed the IK chain (by default is the same layer of meta-rig's limb chain)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:594
#: ../../manual/addons/rigging/rigify.rst:613
#: ../../manual/addons/rigging/rigify.rst:631
msgid "Tweak Extra Layers"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:592
#: ../../manual/addons/rigging/rigify.rst:611
#: ../../manual/addons/rigging/rigify.rst:629
msgid "Defines on which bone layer the Tweak controls will be created. The yellow dot shows where will be placed the IK chain (by default is the same layer of meta-rig's limb chain)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:613
msgid "Leg"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:597
msgid "Requirement: A chain of at least four connected bones and a last child used as heel pivot (thigh, shin, foot, toe, heel)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:631
msgid "Paw"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:616
msgid "Requirement: A chain of at least four connected bones (upper_arm, forearm, paw, toe) or (thigh, shin, paw, toe)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:642
#: ../../manual/addons/rigging/rigify.rst:686
msgid "``limbs.super_palm``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:634
msgid "Will create a palm system based on the distance between palm bones."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:636
msgid "Requirement: At least two bones child of the same parent. The property has to be set on the inner palm bones (think it as index's metacarpus), the rig control will appear on the last palm bone (think it as pinky's metacarpus)."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:642
msgid "Bend Rotation Axis (X, Z)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:641
msgid "Defines the automatic rotation axis to be used on the palm bones."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:645
#: ../../manual/addons/rigging/rigify.rst:690
msgid "Faces"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:652
#: ../../manual/addons/rigging/rigify.rst:691
msgid "``faces.super_face``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:648
msgid "Will create a face system based on the bones child to the parent that has the property set on it."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:650
msgid "Requirement: All the face bones bundled in the ``faces.super_face`` sample had to be present and child of the master bone that has the Rigify-type *face* property set."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:655
#: ../../manual/addons/rigging/rigify.rst:695
msgid "Experimental"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:657
#: ../../manual/addons/rigging/rigify.rst:696
msgid "``experimental.super_chain``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:661
msgid "Rigify Rig Samples"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:663
msgid "Rig samples are just pre-built bone chains with corresponding rig type assigned to the first bone of the chain. The currently available rig samples are:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:680
msgid "``limbs.arm``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:681
msgid "``limbs.paw``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:682
msgid "``limbs.rear_paw``"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:700
msgid "Add a New Armature Object"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:706
msgid ":menuselection:`Add --> Armature --> Single Bone`"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:709
msgid "Building your own meta-rig from scratch requires an armature object to work with. Just add a single bone from the *Add* menu."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:714
msgid "At this stage naming the newly added armature \"meta-rig\" is a good idea. You can do it at any time (or not at all) but it's suggested to do it before going on so it will always be clear on which armature you have to work when editing the meta-rig structure."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:720
msgid "Edit Armature"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:722
msgid "Now that there is an armature object to work -- with the armature selected -- enter armature Edit Mode. Building a meta-rig from scratch in Edit Mode can be done in two ways:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:725
msgid "Adding rig samples."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:726
msgid "Creating bone chains."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:730
msgid "Adding Samples (Basic)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:732
msgid "Adding samples in Edit Mode is a good way to start building a meta-rig. This way you can become familiar with the available building blocks and how they are meant to be used. To add a rig sample:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:736
msgid "Go in the armature tab."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:737
msgid "Scroll down to Rigify panel."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:738
msgid "Select a sample from the list."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:739
msgid "Click on the *Add sample* button."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:740
msgid "Edit the bone positions to match your character."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:744
msgid "Using Rig Types (Advanced)"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:746
msgid "Create your bone chains in Edit Mode."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:747
msgid "Assign the correct rig type to the first bone of each chain in Pose Mode."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:751
msgid "Each sub rig has a required number of bones as input. If you are unsure on how to use rig-types properties, add a rig sample to your armature to see how it is supposed to be used."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:756
msgid "Layers, Bone Groups & Selection Sets"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:758
msgid "Armature layers are usually used to isolate bones. Rigify can take advantage of armature layer to generate extra features and the user interface for the final rig. Blender 2.79 can handle 32 separate layers for each armature. The armature layers are visualized under the armature tab. They are split in two separate groups of 16: The top row contains layers from 1 to 8 and from 9 to 16. The bottom row layers form 17 to 24 and form 25 to 32."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:765
msgid "Rigify layers are displayed in a vertical layout inside their own separate panel named Rigify Layer Names."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:767
msgid "The first column shows the layer number."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:768
msgid "The second column is a display toggle."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:770
msgid "This toggle controls the armature layer visibility. It has the same effect of enabling/disabling the layer visibility from the top armature layers menu. It is just redrawn here for a simplicity."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:774
msgid "The third column sets a specific layer name to be used to build the rig UI of the final rig. If set, a button with the specified name will be created in the rig_ui to control the visibility of this specific armature layer. If layer contains at least one bone but its name field is empty, a button with no name will be created in the rig UI."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:779
msgid "The fourth column defines in which UI row the layer button will be created."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:781
msgid "This numbers define the layer ordering in the UI and will ignore the effective layer number. If two layer have the same row number their UI buttons will be created in the same row."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:784
msgid "The fifth column is a toggle for the selection set."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:786
msgid "If checked a selection set with that name will be created and associated to the final rig."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:788
msgid "The sixth column defines the Rigify Bone Grouping."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:790
msgid "If Rigify Bone Groups are set, the user can make the association between the bones on the layer and the specified bone group from the list. The controls on the final rig will inherit the bone grouping through this value."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:794
msgid "The seventh column displays -- if set -- the associated bone group name."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:796
msgid "In order to use the Bone Groups in the *Rigify Layer Names* fields, *Rigify Bone Groups* must be set through the specific panel. Usually this panel is displayed just above Rigify Layer Names panel."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:800
msgid "Rigify Bone Groups are used to define bone colors on the final rig. The top two rows of the Rigify Bone Groups panel are used to define the bone colors general behavior. Usually color themes use a gradient of colors to define the different bone states: default, selected and active. When multiple color themes are used in the same rig, identifying which bone is selected or active can be tricky since each color will have its corresponding state."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:806
msgid "To override this behavior Rigify Bone Groups unifies the active and selected states with the same color. This is defined by two values:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:812
msgid "Unified Selected/Active Colors"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:810
msgid "When this option is active adding a bone group in the list will always keep the colors consistent. When a color scheme is added as from a theme, the color scheme is loaded as is. Click on the *Apply* button to force the system to unify selected and active colors."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:819
msgid "Selected/Active Colors"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:815
msgid "This two color fields define respectively *Selected* and *Active* colors. By default Rigify reads this colors from the theme defined by the user in the Blender preferences. This way the *Selected*/*Active* colors can always have a predictable and consistent behavior in the UI. The colors can be customized by clicking on the relative color field. To reset them to the Blender current theme value just click on the button with the update icon."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:821
msgid "Bone Groups can be added and deleted as done in the general Bone Group panel by clicking on the ``+`` or ``-`` buttons. All Bone Groups can be deleted at once by clicking on the specials menu."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:825
msgid "To add the predefined Rigify Default Bone Groups list click on *Add Standard* button."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:827
msgid "To add a specific theme with its own color scheme, select it from the list and click on the *Add From Theme* button."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:831
msgid "Advanced Rig Generation"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:834
msgid "Advanced Options Features"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:836
msgid "When Advanced Options are enabled, user will be able to:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:838
msgid "Generate more than one rig per scene."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:839
msgid "Generate a rig with a specific name."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:840
msgid "Update/Overwrite a specific rig."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:844
msgid "Advanced Options Activation"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:846
msgid "Advanced Rig Generation Options are locked by default. Click on the *Advanced Options* button to enable. With Advanced Options enabled the panel will be updated displaying two main modes:"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:849
msgid "Overwrite"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:850
msgid "New"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:852
msgid "By default overwrite is selected. At this stage if you don't touch anything in the UI the generate function will be invoked as is, meaning in fact that generating the rig now will create a new rig from the meta-rig if none is present in the scene, or overwrite the default one if you have already generated a rig from a meta-rig. For further information about the Rigify generate function look at basic usage section."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:859
msgid "New Rig Mode"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:861
msgid "The *New* rig mode will let the user generate a new rig from the meta-rig regardless of an already generated rig is present in the scene. A specific name for the rig can be set by the user through the specific *Rig Name* text field. If no name is set, Rigify will generate an armature object named \"rig\" and a Python script named ``rig_ui.py``."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:868
msgid "Keep in mind that along with the rig, Rigify generates also a ``rig_ui`` Python script which controls the UI in the 3D View. This Python script will be named accordingly with the specified rig name."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:873
msgid "Overwrite Rig Mode"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:875
msgid "The *Overwrite* rig mode will let the user specify a target rig to be overwritten. If none is set Rigify will search and eventually overwrite an armature object named \"rig\" and a Python script named ``rig_ui.py``."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:881
msgid "Library Linking"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:883
msgid "When linking a rig into another file, you generally want to create a group that includes the generated rig, the character mesh, and the \"WGT-\" objects. You do not need to include the meta-rig. You then link in the group, make a group instance, and make the rig proxy."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:887
msgid "You also need to separately link in the ``rig_ui.py`` text data-block. Otherwise the rig UI will not appear in the Sidebar."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "Category"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:894
msgid "Rigging"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "Description"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:895
msgid "Automatic rigging from building-block components."
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "Location"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:896
msgid ":menuselection:`Properties --> Armature, Bone`, :menuselection:`3D View --> Tools panel`, :menuselection:`3D View --> Add menu --> Armature`"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "File"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:898
msgid "rigify folder"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "Author"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:899
msgid "Nathan Vegdahl, Lucio Rossi, Ivan Cappiello, Alexander Gavrilov"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "License"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:900
msgid "GPL"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst
msgid "Note"
msgstr ""

#: ../../manual/addons/rigging/rigify.rst:901
msgid "This add-on is bundled with Blender."
msgstr ""

#~ msgid "Head, Chest and Pelvis are rigid zones, so they require less bones. Having a good edge loop placement around zone boundaries on your model will help in having correct deformation after armature binding."
#~ msgstr ""

#~ msgid "To make the rig overwriting work as expected, you need to have **'both** the rig and the meta-rig visible' before generating again."
#~ msgstr ""

#~ msgid "Requirement: a chain of at least two connected bones."
#~ msgstr ""

#~ msgid "Requirement: at least two bones child of the same parent. The property has to be set on the inner palm bones (think it as index's metacarpus), the rig control will appear on the last palm bone (think it as pinky's metacarpus)."
#~ msgstr ""

#~ msgid "Armature Layers are usually used to isolate bones. Rigify can take advantage of armature layer to generate extra features and the user interface for the final rig. Blender 2.79 can handle 32 separate layers for each armature. The armature layers are visualized under the armature tab. They are split in two separate groups of 16: The top row contains layers from 1 to 8 and from 9 to 16. The bottom row layers form 17 to 24 and form 25 to 32."
#~ msgstr ""

#~ msgid "Rigify Layers are displayed in a vertical layout inside their own separate panel named Rigify Layer Names."
#~ msgstr ""

