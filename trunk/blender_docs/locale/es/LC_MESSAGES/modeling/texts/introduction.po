# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-16 13:44-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.1.1\n"

#: ../../manual/modeling/texts/introduction.rst:4
msgid "Introduction"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:6
#: ../../manual/modeling/texts/introduction.rst:65
msgid "Reference"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:0
msgid "Mode:     Edit Mode"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:0
msgid "Panel:    Curve and Surface, Font and Char"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:0
msgid "Menu:     :menuselection:`Add --> Text`"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:18
msgid "Text Examples."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:21
msgid ""
"*Text* objects are exactly what they sound like: they contain some text. "
"They share the same object type as curves and surfaces, as modern fonts "
"(OpenType, TrueType, etc.) are vectorial, made of curves (generally "
"BÃ©ziers)."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:25
msgid ""
"Blender uses a \"Font System\" to manage mapping \"letter codes --> "
"objects representing them in 3D views\". This implies that not only does "
"the font system have its own *built-in* font, but it can use external "
"fonts too, including *PostScript Type 1*, *OpenType* and *TrueType* "
"fonts. And last but not least, it can use any objects existing in the "
"current blend-file as letters..."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:31
msgid ""
"Texts in Bender allow you to create/render 2D or 3D text, shaded as you "
"want, with various advanced layout options (like justifying and frames), "
"as we will see below. By default, letters are just flat filled surfaces, "
"exactly like any closed 2D curve. But you can of course extrude them... "
"And texts can follow other curves."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:36
msgid ""
"Of course, once you are happy with the shape of your text, you can "
"convert it (with :kbd:`Alt-C`, in *Object Mode*), either to a curve, or "
"directly to a mesh, allowing you to use all the powerful features of "
"these types of objects on it..."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:41
msgid ""
"Fig. :ref:`fig-texts-intro-example` shows some examples of various fonts "
"in action, including the \"blue\" font that has been applied to a curve "
"path."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:46
msgid ""
"A maximum of 50000 characters is allowed per text object; however, be "
"forewarned that the more characters a single text object has, the slower "
"the object will respond interactively."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:50
msgid ""
"As you can see when you switch between *Object Mode* and *Edit Mode*, the"
" *Font* panel remains the same. This means that its settings can be "
"applied equally in both modes ... and this implies that you cannot apply "
"them to just a part of the mesh. So font, size, and so on, are common to "
"all letters in a *Text* object. There is just one exception: the *Bold* "
"or *Italic* buttons control properties specific to each letter (this is a"
" way to use up to four different fonts in a text)."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:58
msgid ""
"For optimum resource usage, only characters that are being used consume "
"memory (rather than the entire character set)."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:63
msgid "Shape"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:0
msgid "Mode:     Object or Edit Mode"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:0
msgid "Panel:    Curve and Surface"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:72
msgid ""
"As you can see in the *Curve and Surface* panel, texts have most of the "
"same options as curves."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:77
msgid "Resolution"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:79
msgid ""
"Preview, Render resolution. See :ref:`curve resolution <curve-"
"resolution>`."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:84
msgid "the shape settings."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:89
msgid "Fast Editing"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:88
msgid "disables curve filling while in edit mode."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:92
msgid "Fill"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:94
msgid ""
"The fill options control how the text curves are filled in when text is "
"*Extruded* or *Beveled* in the *Geometry* Panel."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:97
msgid "Front"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:98
msgid "Fills in the front side of the surface."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:99
msgid "Back"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:100
msgid "Fills in the back side of the surface."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:103
msgid "Fill Deformed"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:102
msgid "Fills the curves after applying shape keys and modifiers."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:106
msgid "Textures"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:110
msgid "Texture Settings."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:113
msgid "Use UV for Mapping"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:114
msgid "Use UV values as generated texture coordinates."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:117
msgid "Auto Texture Space"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:116
msgid ""
"Adjusts the active object's texture space automatically when transforming"
" object."
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:120
msgid "Geometry"
msgstr ""

#: ../../manual/modeling/texts/introduction.rst:122
msgid ""
"Text objects have all the :doc:`curves extrusion features "
"</modeling/curves/editing/extrude>`."
msgstr ""

#~ msgid "Mode:     *Edit* mode (*Text*)"
#~ msgstr ""

#~ msgid "Mode:     *Edit* mode"
#~ msgstr ""

#~ msgid "Mode:     *Object* or *Edit* modes"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ":kbd:`A`, :kbd:`Alt-Backspace`, :kbd:`\\``"
#~ msgstr ""

#~ msgid "Mode:     Object or Edit modes"
#~ msgstr ""

#~ msgid "the paragraph tab"
#~ msgstr ""

#~ msgid "the shape settings"
#~ msgstr ""

#~ msgid "Texture Settings"
#~ msgstr ""

#~ msgid "Mode:     Edit mode (Text)"
#~ msgstr ""

#~ msgid "Mode:     Edit mode"
#~ msgstr ""

#~ msgid "Text in Edit mode."
#~ msgstr ""

#~ msgid "Exit *Edit* mode"
#~ msgstr ""

#~ msgid "Mode:     Object or Edit mode"
#~ msgstr ""

#~ msgid "Align"
#~ msgstr ""

#~ msgid "Mode:     Edit Mode (Text)"
#~ msgstr ""

#~ msgid "Panel:    *Curve and Surface*, *Font* and *Char* (*Editing* context)"
#~ msgstr ""

#~ msgid "Panel:    *Font* (*Editing* context)"
#~ msgstr ""

#~ msgid "Panel:    *Curve and Surface* (*Editing* context)"
#~ msgstr ""

#~ msgid "the paragraph tab."
#~ msgstr ""

#~ msgid "Unix note"
#~ msgstr ""

#~ msgid "shear: 'blender' has a shear value of 1, '2.59' a shear value of 0"
#~ msgstr ""

#~ msgid "check a character option to, for example, type bold text."
#~ msgstr ""

#~ msgid "Bold text."
#~ msgstr ""

#~ msgid "type small capital text."
#~ msgstr ""

#~ msgid "Editing Text"
#~ msgstr ""

#~ msgid "Hotkey:   see below"
#~ msgstr ""

#~ msgid "Text in Edit Mode."
#~ msgstr ""

#~ msgid ""
#~ "Editing text is quite different from "
#~ "other object types in Blender, and "
#~ "happens mainly in two areas. First, "
#~ "the 3D View, of course, where you"
#~ " type your text, and have a few"
#~ " shortcuts, e.g. for applying styles "
#~ "(see `Character`_) - note however, that"
#~ " most Blender hotkeys you know in "
#~ "*Edit Mode* do not exist for "
#~ "texts! The second place is the "
#~ "Properties Editor, especially the *Font* "
#~ "tab."
#~ msgstr ""

#~ msgid ""
#~ "The menu of the 3D View header "
#~ "has nearly no use, and there is"
#~ " no *Specials* menu... You have no"
#~ " transform nor mirror tools, and so"
#~ " on. However, you can apply to "
#~ "texts the same modifiers as for "
#~ "curves."
#~ msgstr ""

#~ msgid ""
#~ "Editing *Text* is similar to using "
#~ "a standard text editor but is not"
#~ " as full-featured and has some "
#~ "differences:"
#~ msgstr ""

#~ msgid "Exit *Edit Mode*"
#~ msgstr ""

#~ msgid ""
#~ ":kbd:`Tab` doesn't insert a tab "
#~ "character in the text, but rather "
#~ "enters and exits *Edit Mode*, as "
#~ "with other object types."
#~ msgstr ""

#~ msgid "Copy"
#~ msgstr ""

#~ msgid ""
#~ "To copy text to the buffer, use"
#~ " :kbd:`Ctrl-C` or the *Copy* button "
#~ "in the tool shelf."
#~ msgstr ""

#~ msgid "Cut and Copy"
#~ msgstr ""

#~ msgid ""
#~ "To cut and copy text to the "
#~ "buffer, use :kbd:`Ctrl-X` or the *Cut*"
#~ " button in the tool shelf."
#~ msgstr ""

#~ msgid "Paste"
#~ msgstr ""

#~ msgid ""
#~ "To paste text from the buffer, use"
#~ " :kbd:`Ctrl-V` or the *Paste* button "
#~ "in the tool shelf."
#~ msgstr ""

#~ msgid "Delete all text"
#~ msgstr ""

#~ msgid "To completely erase or delete all text, use :kbd:`Ctrl-Backspace`."
#~ msgstr ""

#~ msgid "Home/End"
#~ msgstr ""

#~ msgid ""
#~ ":kbd:`Home` and :kbd:`End` move the "
#~ "cursor to the beginning and end of"
#~ " a line respectively."
#~ msgstr ""

#~ msgid "Next/Previous word"
#~ msgstr ""

#~ msgid ""
#~ "To move the cursor on a word's "
#~ "boundary, use :kbd:`Ctrl-Left` or :kbd"
#~ ":`Ctrl-Right`."
#~ msgstr ""

#~ msgid ""
#~ "The text buffer is in sync with"
#~ " the desktop clipboard. But if it "
#~ "is used within Blender the text "
#~ "formatting will be copied as well. "
#~ "For other ways of inserting a "
#~ "text, see `Inserting Text`_ below."
#~ msgstr ""

#~ msgid "Inserting Text"
#~ msgstr ""

#~ msgid ""
#~ "You can insert text in two ways:"
#~ " from the internal text buffer "
#~ "(`Editing Text`_), or from a text "
#~ "file."
#~ msgstr ""

#~ msgid ""
#~ "To load text from a text file, "
#~ "use the :menuselection:`Text --> Paste "
#~ "File` tool. This will bring up a"
#~ " :doc:`File Browser </editors/file_browser/index>` "
#~ "for navigating to a valid UTF-8 "
#~ "file. As usual, be careful that "
#~ "the file doesn't have too many "
#~ "characters, as interactive response will "
#~ "slow down."
#~ msgstr ""

#~ msgid "Special Characters"
#~ msgstr ""

#~ msgid "Menu:     :menuselection:`Text --> Special Characters`"
#~ msgstr ""

#~ msgid ""
#~ "If you need special characters (such "
#~ "as accented chars, which are not "
#~ "on your keyboard) you can produce "
#~ "many of them using a combination "
#~ "of two other characters. To do so,"
#~ " type the main char, press :kbd"
#~ ":`Alt-Backspace`, and then press the "
#~ "desired \"modifier\" to produce the "
#~ "special character. Some examples are "
#~ "given below:"
#~ msgstr ""

#~ msgid "|atilde|"
#~ msgstr ""

#~ msgid ":kbd:`A`, :kbd:`Alt-Backspace`, :kbd:`~`"
#~ msgstr ""

#~ msgid "|aacute|"
#~ msgstr ""

#~ msgid ":kbd:`A`, :kbd:`Alt-Backspace`, :kbd:`'`"
#~ msgstr ""

#~ msgid "|agrave|"
#~ msgstr ""

#~ msgid ":kbd:`A`, :kbd:`Alt-Backspace`, :kbd:`\\\\`"
#~ msgstr ""

#~ msgid "|aring|"
#~ msgstr ""

#~ msgid ":kbd:`A`, :kbd:`Alt-Backspace`, :kbd:`O`"
#~ msgstr ""

#~ msgid "|euml|"
#~ msgstr ""

#~ msgid ":kbd:`E`, :kbd:`Alt-Backspace`, :kbd:`\"`"
#~ msgstr ""

#~ msgid "|oslash|"
#~ msgstr ""

#~ msgid ":kbd:`O`, :kbd:`Alt-Backspace`, :kbd:`/`"
#~ msgstr ""

#~ msgid "Convert Text to Text Object"
#~ msgstr ""

#~ msgid ""
#~ "Using an existing text-block, you "
#~ "can convert it to an object from"
#~ " the text editor's header, select "
#~ ":menuselection:`Edit --> Text to 3D "
#~ "Object`, *One Object* or *One Object "
#~ "per Line* depending on your needs."
#~ msgstr ""

#~ msgid ""
#~ "It is also possible to paste from"
#~ " the clipboard or a file from "
#~ "the *Edit* menu, while editing 3D "
#~ "Text."
#~ msgstr ""

#~ msgid "3D Mesh"
#~ msgstr ""

#~ msgid ""
#~ "It is possible to convert a Text"
#~ " Object to a 3D Mesh object. "
#~ "This can be useful so that you "
#~ "may edit the vertices in *Edit "
#~ "Mode*, but you will lose the "
#~ "ability to edit the text itself. "
#~ "To do this, go to *Object Mode*"
#~ " and select your Text Object. Press"
#~ " :kbd:`Alt-C` and select *Mesh From "
#~ "Curve/Meta/Surf/Text*. Now you can return "
#~ "to *Edit Mode* and manually edit "
#~ "the vertices. They are usually a "
#~ "bit messy, so it may be useful "
#~ "to use a *Limited Dissolve* deletion "
#~ "or *Remesh* Object :doc:`Modifier "
#~ "</modeling/modifiers/index>` at a low "
#~ "threshold to clean up your mesh."
#~ msgstr ""

#~ msgid "left normal text, right the made text object."
#~ msgstr ""

#~ msgid "Text Selection"
#~ msgstr ""

#~ msgid ""
#~ "In *Edit Mode*, your text has a"
#~ " white cursor, and as in any "
#~ "text editor, it determines where new "
#~ "chars will be inserted! You move "
#~ "this cursor with the arrow keys or"
#~ " :kbd:`PageUp` / :kbd:`PageDown` and "
#~ ":kbd:`Home` / :kbd:`End`."
#~ msgstr ""

#~ msgid ""
#~ "Hold :kbd:`Shift` while using the arrow"
#~ " keys to select a part of the"
#~ " text. You can use it to "
#~ "specify different materials, the "
#~ "normal/bold/italic state, and not much "
#~ "more..."
#~ msgstr ""

#~ msgid "Formatting Text"
#~ msgstr ""

#~ msgid "Fonts"
#~ msgstr ""

#~ msgid "Panel:    Font"
#~ msgstr ""

#~ msgid ""
#~ "The *Font* panel has several options "
#~ "for changing the look of characters."
#~ msgstr ""

#~ msgid "Loading and Changing Fonts"
#~ msgstr ""

#~ msgid "Loading a Type 1 font file."
#~ msgstr ""

#~ msgid ""
#~ "Blender comes with a *built-in* "
#~ "font by default and is displayed "
#~ "in each of the four font style "
#~ "choosers. The *built-in* font is "
#~ "always present and shows in this "
#~ "list as \"Bfont\". The first icon "
#~ "contains a drop-down list displaying "
#~ "currently loaded fonts. Select one for"
#~ " each font style."
#~ msgstr ""

#~ msgid ""
#~ "To load a different *Font*, click "
#~ "one of the *Load* buttons in the"
#~ " *Font* panel and navigate to a "
#~ "*valid* font. The :doc:`File Browser "
#~ "</editors/file_browser/index>` will give all "
#~ "valid fonts a capital F icon, as"
#~ " seen in *Loading a Type 1 font"
#~ " file.*"
#~ msgstr ""

#~ msgid "Location of fonts on Unix"
#~ msgstr ""

#~ msgid ""
#~ "Fonts are typically located under "
#~ "``/usr/lib/fonts``, or some variant like "
#~ "``/usr/lib/X11/fonts``, but not always. They"
#~ " may be in other locations as "
#~ "well, such as ``/usr/share/local`` or "
#~ "``/usr/local/share``, and possibly related "
#~ "sub-trees."
#~ msgstr ""

#~ msgid ""
#~ "If you select a font that Blender"
#~ " cannot understand, you will get the"
#~ " error ``Not a valid font``."
#~ msgstr ""

#~ msgid ""
#~ "Remember the same font will be "
#~ "applied to all chars with same "
#~ "style in a text, but that a "
#~ "separate font is required for each "
#~ "style. For example, you will need "
#~ "to load an *Italics* font in order"
#~ " to make characters or words italic."
#~ " Once the font is loaded you "
#~ "can apply that font \"Style\" to "
#~ "the selected characters or the whole "
#~ "object. In all, you would need to"
#~ " load a minimum of four different "
#~ "types of fonts to represent each "
#~ "style (Normal, Italics, Bold, Bold-"
#~ "Italics)."
#~ msgstr ""

#~ msgid ""
#~ "It is important to understand that "
#~ "Blender does not care what font "
#~ "you load for \"normal\", \"bold\", etc.,"
#~ " styles. This is how you can "
#~ "have up to four different fonts in"
#~ " use in the same text - but "
#~ "you have to choose between different "
#~ "styles of a same font, or "
#~ "different fonts. Blender has a number"
#~ " of typographic controls for changing "
#~ "the style and layout of text, "
#~ "found in the *Font* panel."
#~ msgstr ""

#~ msgid "Size and Shear"
#~ msgstr ""

#~ msgid "Size"
#~ msgstr ""

#~ msgid ""
#~ "Controls the size of the whole "
#~ "text (no way to control each char"
#~ " size independently). Note however, that"
#~ " chars with different fonts (different "
#~ "styles, see below) might have different"
#~ " visible sizes."
#~ msgstr ""

#~ msgid "Shear"
#~ msgstr ""

#~ msgid ""
#~ "Controls the inclination of the whole"
#~ " text. Different to as it may "
#~ "seems, this is not similar to "
#~ "italics style."
#~ msgstr ""

#~ msgid "shear: 'blender' has a shear value of 1, '2.59' a shear value of 0."
#~ msgstr ""

#~ msgid "Objects as Fonts"
#~ msgstr ""

#~ msgid ""
#~ "You can also \"create\" your own "
#~ "\"font\" inside Blender! This is quite"
#~ " a complex process, so let us "
#~ "detail it:"
#~ msgstr ""

#~ msgid ""
#~ "First, you must create your chars. "
#~ "Each char, of any type,  is an "
#~ "object (mesh, curve, meta...). They all"
#~ " must have a name following the "
#~ "schema: *common prefix* followed by the"
#~ " *char name* (e.g. \"ft.a\", \"ft.b\", "
#~ "etc.)."
#~ msgstr ""

#~ msgid ""
#~ "Then, for the *Text* object, you "
#~ "must enable the *Dupli Verts* button "
#~ "(:menuselection:`Object --> Animation Settings` "
#~ "panel)."
#~ msgstr ""

#~ msgid ""
#~ "In the *Font* tap, fill the "
#~ "*Object Font* field with the *common "
#~ "prefix* of your \"font\" objects."
#~ msgstr ""

#~ msgid ""
#~ "Now, each time a char in your "
#~ "text matches the *suffix part* of "
#~ "a \"font\" object's name, this object"
#~ " is duplicated on this char. The "
#~ "original chars remain visible. The "
#~ "objects are duplicated so that their "
#~ "center is positioned at the *lower "
#~ "right corner* of the corresponding "
#~ "characters."
#~ msgstr ""

#~ msgid "Text on Curve"
#~ msgstr ""

#~ msgid "Used to select a curve for the text object to follow."
#~ msgstr ""

#~ msgid "Text on curve."
#~ msgstr ""

#~ msgid ""
#~ "You can also use the :doc:`Curve "
#~ "Modifier </modeling/modifiers/deform/curve>` which "
#~ "offers more control."
#~ msgstr ""

#~ msgid "Underline"
#~ msgstr ""

#~ msgid ""
#~ "Toggled with the *Underline* button "
#~ "before typing. Text can also be "
#~ "set to Underlined by selecting it "
#~ "then using the *Underline* button in "
#~ "the Tool Shelf."
#~ msgstr ""

#~ msgid "Position"
#~ msgstr ""

#~ msgid "This allows you to shift vertically the position of the underline."
#~ msgstr ""

#~ msgid "Thickness"
#~ msgstr ""

#~ msgid "This controls the thickness of the underline."
#~ msgstr ""

#~ msgid "Character"
#~ msgstr ""

#~ msgid "Character options to, for example, type bold text."
#~ msgstr ""

#~ msgid "Bold"
#~ msgstr ""

#~ msgid ""
#~ "Toggled with the *Bold* button before"
#~ " typing. Text can also be set "
#~ "to Bold by selecting it then using"
#~ " the *Bold* button in the Tool "
#~ "Shelf."
#~ msgstr ""

#~ msgid "Italics"
#~ msgstr ""

#~ msgid ""
#~ "Toggled with the *Italic* button before"
#~ " typing. Text can also be set "
#~ "to Italic by selecting it then "
#~ "using the *Italic* button in the "
#~ "Tool Shelf."
#~ msgstr ""

#~ msgid "Enables underlining, as controlled by the Underline settings above."
#~ msgstr ""

#~ msgid "Small Caps"
#~ msgstr ""

#~ msgid "Type small capital text."
#~ msgstr ""

#~ msgid ""
#~ "Blender's *Bold* and *Italic* buttons do"
#~ " not work the same way as other"
#~ " applications, as they also serve as"
#~ " placeholders for you to load up "
#~ "other fonts manually, which get applied"
#~ " when you define the corresponding "
#~ "style; see `Fonts`_."
#~ msgstr ""

#~ msgid ""
#~ "To apply the Bold/Italics/Underline attribute"
#~ " to a set of characters, you "
#~ "either turn on *Bold* / *Italics* "
#~ "/ *Underline* prior to typing "
#~ "characters, or highlight (select) first "
#~ "and then toggle Bold/Italics/Underline."
#~ msgstr ""

#~ msgid "Setting Case"
#~ msgstr ""

#~ msgid ""
#~ "You can change the text case by"
#~ " selecting it then clicking the *To"
#~ " Upper* or *To Lower* in the "
#~ "tool shelf."
#~ msgstr ""

#~ msgid "Enable the *Small Caps* option to type characters as small caps."
#~ msgstr ""

#~ msgid ""
#~ "The size of the *Small Caps* can"
#~ " be changed with the *Small Caps "
#~ "Scale* setting. Note that the *Small "
#~ "Caps Scale* is applied the same to"
#~ " all *Small Caps* formatted characters."
#~ msgstr ""

#~ msgid "Paragraph"
#~ msgstr ""

#~ msgid ""
#~ "The *Paragraph* Panel has settings for"
#~ " the alignment and spacing of text."
#~ msgstr ""

#~ msgid "The paragraph tab."
#~ msgstr ""

#~ msgid "Horizontal Alignment"
#~ msgstr ""

#~ msgid "Left"
#~ msgstr ""

#~ msgid ""
#~ "Aligns text to left of frames when"
#~ " using them, else uses the center "
#~ "point of the *Text* object as the"
#~ " starting point of the text (which"
#~ " grows to the right)."
#~ msgstr ""

#~ msgid "Center"
#~ msgstr ""

#~ msgid ""
#~ "Centers text in the frames when "
#~ "using them, else uses the center "
#~ "point of the *Text* object as the"
#~ " mid-point of the text (which "
#~ "grows equally to the left and "
#~ "right)."
#~ msgstr ""

#~ msgid "Right"
#~ msgstr ""

#~ msgid ""
#~ "Aligns text to right of frames "
#~ "when using them, else uses the "
#~ "center point of the *Text* object "
#~ "as the ending point of the text"
#~ " (which grows to the left)."
#~ msgstr ""

#~ msgid "Justify"
#~ msgstr ""

#~ msgid ""
#~ "Only flushes a line when it is "
#~ "terminated by a wordwrap (**not** by "
#~ ":kbd:`Return`), it uses *whitespace* instead"
#~ " of *character spacing* (kerning) to "
#~ "fill lines."
#~ msgstr ""

#~ msgid "Flush"
#~ msgstr ""

#~ msgid ""
#~ "Always flushes the line, even when "
#~ "it's still being entered; it uses "
#~ "character spacing (kerning) to fill "
#~ "lines."
#~ msgstr ""

#~ msgid "Both *Justify* and *Flush* only work within frames."
#~ msgstr ""

#~ msgid "Vertical Alignment"
#~ msgstr ""

#~ msgid "Top Base-Line"
#~ msgstr ""

#~ msgid ""
#~ "Aligns the text base-line to top"
#~ " of frames when using them, else "
#~ "uses the center point of the "
#~ "*Text* object as the starting point "
#~ "of the text (which grows to the"
#~ " bottom)."
#~ msgstr ""

#~ msgid "Top"
#~ msgstr ""

#~ msgid ""
#~ "Aligns top of text to the center"
#~ " point of the *Text* object (which"
#~ " grows to the bottom). It behaves "
#~ "as *Top Base-Line* when using "
#~ "frames."
#~ msgstr ""

#~ msgid ""
#~ "Centers text in the frames when "
#~ "using them, else uses the center "
#~ "point of the *Text* object as the"
#~ " mid-point of the text (which "
#~ "grows equally to the top and "
#~ "bottom)."
#~ msgstr ""

#~ msgid "Bottom"
#~ msgstr ""

#~ msgid ""
#~ "Aligns text to bottom of frames "
#~ "when using them, else uses the "
#~ "center point of the *Text* object "
#~ "as the ending point of the text"
#~ " (which grows to the top)."
#~ msgstr ""

#~ msgid "*Top* only works without frames."
#~ msgstr ""

#~ msgid "Spacing"
#~ msgstr ""

#~ msgid "A factor by which space between each character is scaled in width"
#~ msgstr ""

#~ msgid "Word"
#~ msgstr ""

#~ msgid ""
#~ "A factor by which whitespace between "
#~ "words is scaled in width. You can"
#~ " also control it by pressing :kbd"
#~ ":`Alt-Left` or :kbd:`Alt-Right` to "
#~ "decrease/increase spacing by steps of "
#~ "0.1 ."
#~ msgstr ""

#~ msgid "Line"
#~ msgstr ""

#~ msgid "A factor by which the vertical space between lines is scaled."
#~ msgstr ""

#~ msgid "Offset"
#~ msgstr ""

#~ msgid "X offset and Y offset"
#~ msgstr ""

#~ msgid ""
#~ "Well, these settings control the X "
#~ "and Y offset of the text, "
#~ "regarding its \"normal\" positioning. Note "
#~ "that with frames (see :doc:`Text Boxes"
#~ " </modeling/texts/editing>`), it applies to "
#~ "all frames' content..."
#~ msgstr ""

