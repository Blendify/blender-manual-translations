# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-25 09:56+1000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/game_engine/physics/world.rst:5
msgid "World Physics"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:10
msgid "BGE World Panel (fully expanded)."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:13
msgid ""
"World settings enable you to set some basic effects which affect all "
"scenes throughout your game, so giving it a feeling of unity and "
"continuity. These include ambient light, depth effects (mist) and global "
"physics settings. These effects are a limited subset of the more "
"extensive range of effects available with the Blender internal or cycles "
"renderer."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:20
msgid ""
"While world settings offer a simple way of adding effects to a scene, "
":doc:`compositing nodes </compositing/index>` are often preferred, though"
" more complex to master, for the additional control and options they "
"offer. For example, filtering the Z value (distance from camera) or "
"normals (direction of surfaces) through compositing nodes can further "
"increase the depth and spacial clarity of a scene."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:28
msgid "World"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:30
msgid ""
"These two color settings allow you to set some general lighting effects "
"for your game."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:33
msgid "Horizon Color"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:33
msgid ""
"The RGB color at the horizon; i.e. the color and intensity of any areas "
"in the scene which are not filled explicitly."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:41
msgid "Ambient Color"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:36
msgid ""
"Ambient light mimics an overall background illumination obtained from "
"diffusing surfaces (see :doc:`Ambient Light "
"</render/blender_render/lighting/index>`, :doc:`Exposure "
"</render/post_process/cm_and_exposure>` and :doc:`Ambient Occlusion "
"</render/blender_render/lighting/ambient_occlusion>`). Its general color "
"and intensity are set by these controls."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:44
#: ../../manual/game_engine/physics/world.rst:52
msgid "Mist"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:46
msgid ""
"Mist can greatly enhance the illusion of depth in your rendering. To "
"create mist, Blender makes objects farther away more transparent "
"(decreasing their Alpha value) so that they mix more of the background "
"color with the object color. With Mist enabled, the further the object is"
" away from the camera the less it's alpha value will be. For full "
"details, see :doc:`Mist </render/blender_render/world/mist>`."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:53
msgid "Toggles mist on and off"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:54
msgid "Falloff"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:55
msgid "Sets the shape of the falloff of the mist."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:56
msgid "Start"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:57
msgid ""
"The starting distance of the mist effect. No misting will take place for "
"objects closer than this distance."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:58
msgid "Depth"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:59
msgid "The depth at which the opacity of objects falls to zero."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:62
msgid "Minimum intensity"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:61
msgid "Overall minimum intensity of the mist"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:65
msgid "Game Physics"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:67
msgid ""
"The Game Physics located in the World panel determine the type of "
"physical rules that govern the game engine scene, and the gravity value "
"to be used. Based on the physics engine selected, in physics simulations "
"in the game engine, Blender will automatically move *Actors* in the "
"downward (−Z) direction. After you arrange the actors and they move as "
"you wish, you can then bake this computed motion into keyframes (see :ref"
":`game_engine-physics-bake-keyframes` for more info)."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:82
msgid "Physics Engine"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:75
msgid "Set the type of physics engine to use."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:79
msgid "Bullet"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:78
msgid ""
"The default physics engine, in active development. It handles movement "
"and collision detection. The things that collide transfer momentum to the"
" collided object."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:82
#: ../../manual/game_engine/physics/world.rst:130
msgid "None"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:82
msgid ""
"No physics in use. Things are not affected by gravity and can fly about "
"in a virtual space. Objects in motion stay in that motion."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:87
msgid "Gravity"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:85
msgid ""
"The gravitational acceleration, m.s\\ :sup:`−2` (in units of meters per "
"squared second), of this world. Each object that is an actor has a mass "
"and size slider. In conjunction with the frame rate (see :doc:`Render "
"</render/index>` section), Blender uses this info to calculate how fast "
"the object should accelerate downward."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:90
msgid "Culling Resolution"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:90
msgid ""
"The size of the occlusion culling buffer in pixel, use higher value for "
"better precision (slower). The optimized Bullet DBVT for view frustum and"
" occlusion culling is activated internally by default."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:99
msgid "Physics Steps"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:94
msgid "Max"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:94
msgid ""
"Sets the maximum number of physics steps per game frame if graphics slow "
"down the game. higher value allows physics to keep up with realtime."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:96
msgid "Substeps"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:97
msgid ""
"Sets the number of simulation substeps per physics timestep. Higher value"
" give better physics precision."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:99
msgid "FPS"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:99
msgid ""
"Set the nominal number of game frames per second. Physics fixed timestep "
"= 1/fps, independently of actual frame rate."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:102
msgid "Logic Steps"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:102
msgid ""
"Sets the maximum number of logic frame per game frame if graphics slows "
"down the game, higher value allows better synchronization with physics."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:117
msgid "Physics Deactivation"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:105
msgid ""
"These settings control the threshold at which physics is deactivated. "
"These settings help reducing the processing spent on Physics simulation "
"during the game."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:110
msgid "Linear Threshold"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:109
msgid ""
"The speed limit under which a rigid bodies will go to sleep (stop moving)"
" if it stays below the limits for a time equal or longer than the "
"deactivation time (sleeping is disabled when deactivation time is set to "
"0)."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:112
msgid "Angular Threshold"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:113
msgid "Same as linear threshold, but for rotation limit (in rad/s)"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:117
msgid "Time"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:115
msgid ""
"The amount of time in which the object must have motion below the "
"thresholds for physics to be disabled (0.0 disables physics "
"deactivation)."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:120
msgid "Obstacle Simulation"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:122
msgid ""
"Simulation used for obstacle avoidance in the Game Engine, based on the "
"RVO (Reciprocal Velocity Obstacles) principle. The aim is to prevent one "
"or more actors colliding with obstacles."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:126
msgid ""
"See `Path finding and steering behaviors "
"<https://wiki.blender.org/index.php/User:Nicks/Gsoc2010/Docs>`__ for more"
" details."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:135
msgid "Type"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:131
msgid "obstacle simulation is disabled, actors are not able to avoid obstacles"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:132
msgid "RVO (cells)"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:133
msgid ""
"obstacle simulation is based on the `RVO method "
"<http://gamma.cs.unc.edu/RVO/>`__ with cell sampling."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:135
msgid "RVO (rays)"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:135
msgid ""
"obstacle simulation is based on the `RVO method "
"<http://gamma.cs.unc.edu/RVO>`__ with ray sampling"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:139
msgid "Level height"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:138
msgid ""
"Max difference in heights of obstacles to enable their interaction. Used "
"to define minimum margin between obstacles by height, when they are "
"treated as those which are situated one above the other i.e. they doesn't"
" influence to each other."
msgstr ""

#: ../../manual/game_engine/physics/world.rst:143
msgid "Visualization"
msgstr ""

#: ../../manual/game_engine/physics/world.rst:142
msgid "Enable debug visualization for obstacle simulation."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "The Game Physics located in the "
#~ "World panel determine the type of "
#~ "physical rules that govern the game "
#~ "engine scene, and the gravity value "
#~ "to be used. Based on the physics"
#~ " engine selected, in physics simulations"
#~ " in the game engine, Blender will "
#~ "automatically move *Actors* in the "
#~ "downward (-Z) direction. After you "
#~ "arrange the actors and they move "
#~ "as you wish, you can then bake "
#~ "this computed motion into keyframes (see"
#~ " :ref:`game_engine-physics-bake-keyframes` "
#~ "for more info)."
#~ msgstr ""

#~ msgid "obstacle simulation is disabled, actors aren't able to avoid obstacles"
#~ msgstr ""

