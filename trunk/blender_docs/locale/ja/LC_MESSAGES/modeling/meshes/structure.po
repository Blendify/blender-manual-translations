# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-27 17:27-0600\n"
"PO-Revision-Date: 2018-07-31 13:53+0900\n"
"Last-Translator: \n"
"Language: ja_JP\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/modeling/meshes/structure.rst:4
msgid "Structure"
msgstr "構造"

#: ../../manual/modeling/meshes/structure.rst:6
msgid ""
"With meshes, everything is built from three basic structures: *vertices*,"
" *edges* and *faces*."
msgstr "メッシュでは、全てが3つの基本的な構造、すなわち *頂点* 、*辺*、 *面* から成ります。"

#: ../../manual/modeling/meshes/structure.rst:12
msgid "Example of mesh structure."
msgstr "メッシュ構造の例"

#: ../../manual/modeling/meshes/structure.rst:18
msgid "Vertices"
msgstr "頂点"

#: ../../manual/modeling/meshes/structure.rst:20
msgid ""
"The most elementary part of a mesh is the vertex (vertices plural) which "
"is a single point or position in 3D space. Vertices are represented in "
"the 3D Viewport in Edit Mode as small dots. The vertices of and object "
"are stored as an array of coordinates."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:26
#, fuzzy
msgid ""
"Do not mistake the :doc:`object origin </scene_layout/object/origin>` for"
" a vertex. It may look similar, but it is bigger and cannot be selected."
msgstr ""
"レンダリングと *オブジェクトモード* では普通、頂点は見えません。 :doc:`原点 "
"</editors/3dview/object/origin>` "
"をオブジェクトの頂点と勘違いしないでください。似ていますが、原点のほうが大きく、選択できません。"

#: ../../manual/modeling/meshes/structure.rst:31
#, fuzzy
msgid ""
"The vertex is labeled as \"A\"; the object's origin dot is labeled as "
"\"B\"."
msgstr "頂点が\"A\"と、原点が\"B\"として示されています。"

#: ../../manual/modeling/meshes/structure.rst:35
msgid "Edges"
msgstr "辺"

#: ../../manual/modeling/meshes/structure.rst:37
#, fuzzy
msgid ""
"An edge always connects two vertices by a straight line. The edges are "
"the \"wires\" you see when you look at a mesh in wireframe view. They are"
" usually invisible on the rendered image. They are used to construct "
"faces."
msgstr "辺は必ず2つの頂点を真っ直ぐな線で繋いでいます。辺は、メッシュをワイヤーフレームで見た時に「ワイヤー」として見えるものです。レンダー画像では通常、見えません。面を作るために使われます。"

#: ../../manual/modeling/meshes/structure.rst:43
msgid "Faces"
msgstr "面"

#: ../../manual/modeling/meshes/structure.rst:45
msgid ""
"Faces are used to build the actual surface of the object. They are what "
"you see when you render the mesh. If this area does not contain a face, "
"it will simply be transparent or non-existent in the rendered image."
msgstr "面はオブジェクトの実際の表面を作るために使われます。メッシュのレンダリングの結果として見えるのはこの面です。その領域が面を持っていない場合は、レンダリング結果では透明もしくは存在しない物として出力されます。"

#: ../../manual/modeling/meshes/structure.rst:50
msgid ""
"A face is defined as the area between either three (triangles), four "
"(quadrangles) or more (n-gons) vertices, with an edge on every side. The "
"faces are often abbreviated to *tris, quads & n-gons*."
msgstr ""
"1つの面は3つ（三角形、triangles）、4つ（四角形、quadrangles）、それ以上の数（nゴン、n-gons）の頂点の間にあり、辺で囲まれた領域として定義されます。それぞれの面はよく、"
" *tris、quads、そしてn-gons* として省略されます。"

#: ../../manual/modeling/meshes/structure.rst:53
msgid ""
"Triangles are always flat and therefore easy to calculate. On the other "
"hand, quadrangles \"deform well\" and are therefore preferred for "
"animation and subdivision modeling."
msgstr "三角形は常に平面であり、簡単に計算ができます。一方、四角形は\"うまく変形する\"ため、アニメーションやサブディビジョン・モデリングで好まれて使われます。"

#: ../../manual/modeling/meshes/structure.rst:58
msgid ""
"`Why should triangles be avoided for character animation? "
"<https://blender.stackexchange.com/questions/2931>`__"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:59
msgid ""
"`When should N-gons be used, and when shouldn't they? "
"<https://blender.stackexchange.com/questions/89>`__"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:63
msgid "Normals"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:65
msgid ""
"In geometry, a normal is a direction or line that is perpendicular to "
"something, typically a triangle or surface but can also be relative to a "
"line, a tangent line for a point on a curve, or a tangent plane for a "
"point on a surface."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:72
msgid "A visualization of the face normals of a torus."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:74
msgid ""
"In the figure above, each blue line represents the normal for a face on "
"the torus. The lines are each perpendicular to the face on which they "
"lie. The visualization can be activated, in Edit Mode, in the :ref:`Mesh "
"Display Viewport Overlays panel <mesh-display-normals>`."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:83
#, fuzzy
msgid "Properties"
msgstr "頂点"

#: ../../manual/modeling/meshes/structure.rst:85
#: ../../manual/modeling/meshes/structure.rst:129
#: ../../manual/modeling/meshes/structure.rst:150
msgid "Reference"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst
msgid "Panel"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:88
msgid ":menuselection:`Properties editor --> Object Data --> Normals`"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:92
msgid "Normals panel."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:103
msgid "Auto Smooth"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:99
msgid ""
"Edges where an angle between the faces is smaller than specified in the "
"*Angle* button will be smoothed, when shading of these parts of the mesh "
"is set to smooth. This is an easier way to combine smooth and sharp "
"edges."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:103
msgid "Angle"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:103
msgid "Angle number field."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:108
msgid "Example mesh with *Auto Smooth* enabled."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:114
msgid "Custom Split Normals"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:116
msgid ""
"*Custom Split Normals* is a way to tweak/fake shading by pointing normals"
" towards other directions than the default, auto-computed ones. It is "
"mostly used in game development, where it helps counterbalance some "
"issues generated by low-poly objects (the most common examples are low-"
"poly trees, bushes, grass, etc. and the 'rounded' corners)."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:121
msgid ""
"Blender supports custom normals on a 'smooth fan' base, defined as a set "
"of neighbor face corners sharing the same vertex and 'linked' by smooth "
"edges. This means you can have normals per face corners, per a set of "
"neighbor face corners, or per vertex."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:127
msgid "Enabling Custom Split Normals"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst
msgid "Mode"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:132
#: ../../manual/modeling/meshes/structure.rst:153
msgid "Edit Mode"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst
msgid "Menu"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:133
msgid ":menuselection:`Mesh --> Normals --> Split`"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:135
msgid "Enables Custom Split Normals."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:137
msgid ""
"Also, any of the custom normal editing tools (see below) will, as a "
"convenience, enable custom normals if they are not already enabled."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:142
msgid ""
"This has the side effect of enabling :ref:`Auto Smooth <auto-smooth>`, as"
" that is necessary to use custom normals. Once you have custom normals, "
"the angle threshold of the *Auto Smooth* behavior is disabled -- all non-"
"sharp-tagged edges will be considered as smooth, disregarding the angle "
"between their faces."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:148
msgid "Editing Custom Split Normals"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:154
msgid ":menuselection:`Mesh --> Normals`"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst
msgid "Hotkey"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:155
msgid ":kbd:`Alt-N`"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:157
msgid ""
"There are a number of tools for editing custom split normals. The custom "
"normal mesh edit tools can affect all normals (the default), or only "
"selected ones. To select a custom normal associated with a particular "
"vertex and face:"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:161
msgid ""
"Make the element selection mode both Vertex and Face (use :kbd:`Shift-"
"LMB` to enable the second one)."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:162
msgid ""
"Select one or more vertices, then select a face. This can be repeated to "
"select more vertices and a different face and so on. It is easiest to see"
" the effect of these tools if you turn on the Edit Mode Overlays option "
"*Display vertex-per-face normals as lines*."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:169
msgid ":doc:`Editing Normals </modeling/meshes/editing/normals>`."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:173
msgid "Importing Custom Split Normals"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:175
msgid ""
"Some tools, particularly those used in :abbr:`CAD (Computer-Aided "
"Design)`, tend to generate irregular geometry when tessellating their "
"objects into meshes (very thin and long triangles, etc.). Auto-computed "
"normals on such geometry often gives bad artifacts, so it is important to"
" be able to import and use the normals as generated by the CAD tool "
"itself."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:182
msgid ""
"Currently, only the :doc:`FBX Importer "
"</addons/import_export/io_scene_fbx>` and :doc:`Alembic Importer "
"</files/import_export/alembic>` are capable of importing custom normals."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:187
msgid "Topology"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:192
msgid "Loops"
msgstr "ループ"

#: ../../manual/modeling/meshes/structure.rst:198
msgid "Edge and face loops."
msgstr "辺と面のループ"

#: ../../manual/modeling/meshes/structure.rst:200
msgid ""
"*Edge* and *face* loops are sets of faces or edges that form continuous "
"\"loops\" as shown in Fig. :ref:`fig-mesh-topo-loop`."
msgstr "*辺* と *面* のループは図 :ref:`fig-mesh-topo-loop`　で示すように連続した「ループ」を成す面や辺の集まりです。"

#: ../../manual/modeling/meshes/structure.rst:203
#, fuzzy
msgid ""
"In the image above, loops that do not end in poles are cyclic (1 and 3). "
"They start and end at the same vertex and divide the model into two "
"partitions. Loops can be a quick and powerful tool to work with specific,"
" continuous regions of a mesh and are a prerequisite for organic "
"character animation. For a detailed description of how to work with loops"
" in Blender, see: :ref:`Edge Loop Selection <modeling-meshes-selecting-"
"edge-loops>`."
msgstr ""
"上の図では、ポールに終わらないループはサイクリック（1と3）です。これらはループが始まった頂点でループが終わり、モデルを2つに分けます。特定の、連続的なメッシュ領域を扱う上で、ループは速くて強力なツールとして使え、有機的なキャラクター・アニメーションをする上で必須です。Blenderにおけるループの扱いに関する詳細は"
" :doc:`Advanced Selection </modeling/meshes/selecting/advanced>` "
"を参照してください。"

#: ../../manual/modeling/meshes/structure.rst:212
msgid ""
"Note that loops (2 and 4) do not go around the whole model. Loops stop at"
" so-called poles because there is no unique way to continue a loop from a"
" pole. Poles are vertices that are connected to either three, five, or "
"more edges. Accordingly, vertices connected to exactly one, two or four "
"edges are not poles."
msgstr "2と4で示したループがモデル全体を回らないことに注意してください。ループはポール(poles)と呼ばれるところで止まり、これはポール以降はループを一意に続ける方法がないからです。ポールは3つ、5つ、あるいはそれ以上の数の辺と繋がった頂点です。したがって、1つ、2つ、あるいは4つの辺と繋がった頂点はポールではありません。"

#: ../../manual/modeling/meshes/structure.rst:220
msgid "Edge Loops"
msgstr "辺ループ"

#: ../../manual/modeling/meshes/structure.rst:221
msgid ""
"Loops (1 and 2) in Fig. :ref:`fig-mesh-topo-loop` are edge loops. They "
"connect vertices so that each one on the loop has exactly two neighbors "
"that are not on the loop and placed on both sides of the loop (except the"
" start and end vertex in case of poles)."
msgstr ""
"図 :ref:`fig-mesh-topo-loop` "
"において、1と2で示したループは辺ループです。辺ループは頂点を繋げ、ループ上の各頂点において、ループ上にない2つの頂点に隣接し、その2つの頂点がループの両側に配置されるようにしています。（ポールがある場合の始点と終点は例外です）"

#: ../../manual/modeling/meshes/structure.rst:225
msgid ""
"Edge loops are an important concept especially in organic (subsurface) "
"modeling and character animation. When used correctly, they allow you to "
"build models with relatively few vertices that look very natural when "
"used as subdivision surfaces and deform very well in animation."
msgstr "有機的な（サブサーフェスを使った）モデリングやキャラクターでは、辺ループは特に重要な概念です。適切に使えば、サブディビジョンサーフェスで使うととても自然に見えるモデルを比較的少数の頂点で作れますし、アニメーションにおいても綺麗に変形します。"

#: ../../manual/modeling/meshes/structure.rst:230
msgid ""
"Take Fig. :ref:`fig-mesh-topo-loop` in organic modeling as an example: "
"the edge loops follow the natural contours and deformation lines of the "
"skin and the underlying muscles and are more dense in areas that deform "
"more when the character moves, for example at the shoulders or knees."
msgstr ""
"例として図 :ref:`fig-mesh-topo-loop` "
"を有機モデリングとして捉えてみましょう。辺ループは皮膚やその下の筋肉の自然な輪郭や変形の線に沿って走り、キャラクターが動く時により大きく変形するところ（例えば、肩や膝など）では密度がより高くなります。"

#: ../../manual/modeling/meshes/structure.rst:234
msgid ""
"Further details on working with edge loops can be found in :ref:`Edge "
"Loop Selection <modeling-meshes-selecting-edge-loops>`."
msgstr ""
"より詳細な辺ループの扱い方は :ref:`辺ループ選択 <modeling-meshes-selecting-edge-loops>` "
"を参照してください。"

#: ../../manual/modeling/meshes/structure.rst:239
msgid "Face Loops"
msgstr "面ループ"

#: ../../manual/modeling/meshes/structure.rst:240
msgid ""
"These are a logical extension of edge loops in that they consist of the "
"faces between two edge loops, as shown in loops (3 and 4) in Fig. :ref"
":`fig-mesh-topo-loop`. Note that for non-circular loops (4) the faces "
"containing the poles are not included in a face loop."
msgstr ""
"面ループは辺ループの理論的な拡張であり、図 :ref:`fig-mesh-topo-loop` "
"の3と4で示すように2つの辺ループの間の面から成ります。4で示すように、循環しないループではポールを含む面は面ループに含まれないことに注意してください。"

#: ../../manual/modeling/meshes/structure.rst:245
msgid ""
"Further details on working with face loops can be found in :ref:`Face "
"Loop Selection <modeling-meshes-selecting-face-loops>`."
msgstr ""
"より詳細な面ループの扱い方は :ref:`面ループ選択 <modeling-meshes-selecting-face-loops>` "
"を参照してください。"

#: ../../manual/modeling/meshes/structure.rst:250
msgid "Poles"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:252
msgid "See `N-poles & E-poles <https://blender.stackexchange.com/a/133676/55>`__."
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:256
msgid "Non-Manifold"
msgstr ""

#: ../../manual/modeling/meshes/structure.rst:258
msgid "See :term:`Non-manifold`."
msgstr ""

#~ msgid ""
#~ "While you could build a cube with"
#~ " triangular faces, it would just look"
#~ " more confusing in *Edit Mode*."
#~ msgstr "三角系の面で立方体を構築することもできますが、 *編集モード* で紛らわしく見えるだけです。"

#~ msgid ""
#~ "`When should N-Gons be used, and "
#~ "when shouldn't they? "
#~ "<https://blender.stackexchange.com/questions/89>`__"
#~ msgstr ""

#~ msgid "Non-manifold"
#~ msgstr ""

#~ msgid ""
#~ "The most elementary part of a mesh"
#~ " is the vertex which is a "
#~ "single point or position in 3D "
#~ "space. The vertices (the plural form "
#~ "of vertex) are stored in an array"
#~ " of coordinates."
#~ msgstr "メッシュの最も基本的な部分は頂点であり、これは3D空間内の1つの位置あるいは点です。複数の頂点は座標の配列として格納されています。"

#~ msgid ""
#~ "The most elementary part of a mesh"
#~ " is the vertex vertices (plural) "
#~ "which is a single point or "
#~ "position in 3D space. Vertices are "
#~ "represented in the 3D Viewport in "
#~ "edit mode as small dots. The "
#~ "vertices of and object are stored "
#~ "as an array of coordinates."
#~ msgstr ""

#~ msgid ""
#~ "*Custom Split Normals* is a way to"
#~ " tweak/fake shading by pointing normals "
#~ "towards other directions than the "
#~ "default, auto-computed ones. It is "
#~ "mostly used in game development, where"
#~ " it allows to counterbalance some "
#~ "issues generated by low-poly objects "
#~ "(the most common examples are low-"
#~ "poly trees, bushes, grass, etc. and "
#~ "the 'rounded' corners)."
#~ msgstr ""

#~ msgid ""
#~ "Some tools, in particular :abbr:`CAD "
#~ "(Computer-Aided Design)` ones, tends to "
#~ "generate irregular geometry when tessellating"
#~ " their objects into meshes (very thin"
#~ " and long triangles, etc.). Auto-"
#~ "computed normals on such geometry often"
#~ " gives bad artifacts, so it is "
#~ "important to be able to import and"
#~ " use the normals as generated by "
#~ "the CAD tool itself."
#~ msgstr ""

#~ msgid ""
#~ "Currently, only the :doc:`FBX Importer "
#~ "</addons/io_scene_fbx>` is capable of "
#~ "importing custom normals."
#~ msgstr ""

#~ msgid ""
#~ "Currently, only the :doc:`FBX Importer "
#~ "</addons/import_export/io_scene_fbx>` is capable of"
#~ " importing custom normals."
#~ msgstr ""

