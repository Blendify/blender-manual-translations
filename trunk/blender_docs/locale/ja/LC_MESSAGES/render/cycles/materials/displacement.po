# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-09 15:10+1100\n"
"PO-Revision-Date: 2017-03-22 16:14+0900\n"
"Last-Translator: Takashi Sugawara <aimaimokomoko@gmail.com>\n"
"Language: ja\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../manual/render/cycles/materials/displacement.rst:5
msgid "Displacement"
msgstr "ディスプレイスメント"

#: ../../manual/render/cycles/materials/displacement.rst:7
msgid ""
"The shape of the surface and the volume inside its mesh may be altered by"
" the displacement shaders. This way, textures can then be used to make "
"the mesh surface more detailed."
msgstr "サーフェスの形状とメッシュ内部のボリュームはディスプレイスメントシェーダーによって変化します。この機能を用いて、よりメッシュ表面を詳細に表現するのにテクスチャを利用できます。"

#: ../../manual/render/cycles/materials/displacement.rst:10
msgid ""
"There are two types of displacement methods that can be used: `True "
"Displacement`_  and `Bump Mapping`_. Depending on the settings, the "
"displacement may be virtual, only modifying the surface normals to give "
"the impression of displacement, known as bump mapping, or a combination "
"of real and virtual displacement."
msgstr ""
"`True ディスプレイスメント`_  と `バンプマッピング`_ の 2 "
"通りのディスプレイスメントの利用法が存在します。設定次第でディスプレイスメントは、バンプマッピングとして知られる、ディスプレイスメントの程度によってサーフェスの法線のみを変化させる、仮想的なものであったり、実態と仮想のディスプレイスメントを組み合わせて用いることができます。"

#: ../../manual/render/cycles/materials/displacement.rst:17
msgid ""
"It is also possible to use the both method by choosing *Displacement + "
"Bump* in the :ref:`Material Setttings <cycles-materials-settings-"
"displace>`."
msgstr ""
":ref:`マテリアルの設定 <cycles-materials-settings-displace>` 内で *Displacement と "
"Bump* を選択して両方用いる事もできます。"

#: ../../manual/render/cycles/materials/displacement.rst:22
#, fuzzy
msgid "Subdivision Rate 2, Bump, True, Both."
msgstr "Subdivision レート 2 の際の、 Bump、 True、 両者併用"

#: ../../manual/render/cycles/materials/displacement.rst:26
msgid "Bump Mapping"
msgstr "バンプマッピング"

#: ../../manual/render/cycles/materials/displacement.rst:28
msgid ""
"When using the *Bump* method for displacement a \"bump map\" is used to "
"create fake displacement by using light and shadow effects. A bump map is"
" actually one of the older types displacement methods (see `True "
"Displacement`_ for a newer method)."
msgstr ""
"*Bump* のディスプレイスメントを利用する場合は *バンプマップ* "
"を用いて陰影の効果を利用した仮想的なディスプレイスメントを作成します。バンプマップは実際は古いタイプのディスプレイスメントの方式です(新しい方法については"
" `True ディスプレイスメント`_ を参照して下さい)。"

#: ../../manual/render/cycles/materials/displacement.rst:32
msgid ""
"Typically, bump maps are grayscale images with 8-bits of color "
"information. This means that they only have 256 different shades of "
"black, gray, or white. These grayscale values are used to tell Blender "
"two thing: up or down."
msgstr ""
"通常、バンプマップは 8 ビットの色深度を持ったグレースケールの画像です。これはバンプマップはたった 256 "
"段階の陰影を表す黒、灰色あるいは白のみを持っている事を意味します。このグレースケールの値は Blender に2つの情報を伝えます: "
"変位の方向が上か下かです。"

#: ../../manual/render/cycles/materials/displacement.rst:36
#, python-format
msgid ""
"When values in a bump map are close to 50% gray, there is little to no "
"detail that comes through on the surface. When values get closer to "
"white, the effect start to appear as if they are pulling out the surface."
" To contrast that, when values closer to black, they appear to be pushing"
" into the surface."
msgstr ""
"バンプマップ上での値が 50%g "
"グレーに近ければ、そのサーフェスに殆ど形をもたせる事は有りません。値がより白に近ければ、サーフェスからその部分が引っぱり出されるように見える効果が有ります。対象的に値が黒に近ければ、サーフェス内部に押し込まれるように見えます。"

#: ../../manual/render/cycles/materials/displacement.rst:40
msgid ""
"Bump maps are really great for creating tiny details on a model, for "
"example, pores or wrinkles on skin. Bump maps can be created in a 2D "
"drawing, or photo editing application just remember to save the image as "
"a grayscale to save memory while rendering."
msgstr ""
"バンプマップは例えば、肌の毛穴や皺などモデル上に微細なディティールを作る上で非常に役立ちます。バンプマップは画像をグレースケールで保存する事を忘れなければ"
" 2D ドローイングや写真編集アプリケーションで作成できてレンダリング中のメモリ利用削減にもつながります。"

#: ../../manual/render/cycles/materials/displacement.rst:46
msgid ""
"Because bump mapping is a fake effect, it is easily broken when viewing a"
" model at the wrong angle. This means that it is not recommended for "
"animations."
msgstr "バンプマッピングは仮想的な効果ですので、モデルを異なった方向から見た時に容易に破綻します。これはつまりアニメーションにおける利用は推奨されない事を意味します。"

#: ../../manual/render/cycles/materials/displacement.rst:53
msgid "True Displacement"
msgstr "True ディスプレイスメント"

#: ../../manual/render/cycles/materials/displacement.rst:57
msgid ""
"Implementation not finished yet, marked as an :ref:`Experimental Feature "
"Set <cycles-experimental-features>`"
msgstr "完全には実装が完了しておらず、:ref:`実験的実装 <cycles-experimental-features>` とされています。"

#: ../../manual/render/cycles/materials/displacement.rst:59
msgid ""
"Different from bump mapping, *True Displacement* is not a fake effect. "
"When using *True Displacement* the actual mesh geometry will be displaced"
" before render. This gives the best quality results, if the mesh is "
"finely subdivided. As a result this method is also the most memory "
"intensive."
msgstr ""
"バンプマッピングと異なり、 *True ディスプレイスメント* は仮想的な効果ではありません。*True ディスプレイスメント* "
"を利用した場合はレンダーの前に実際にメッシュ構造が置き換えられます。対象となるメッシュが十分に分割されている場合、最も高品質な結果をもたらします。結果として最もメモリを消費します。"

#: ../../manual/render/cycles/materials/displacement.rst:64
msgid ""
"When using true displacement you should not just use a bump map as the "
"displacement texture. Different from bump maps displacement maps should "
"not use 8-bits when saved. While you can use 8-bit textures, they do not "
"translate into 3D space well. Instead, you should save the images with "
"either 16 or 32-bits."
msgstr ""
"True "
"ディスプレイスメントを利用する場合はバンプマップをそのディスプレイスメントのテクスチャとして使用してはいけません。バンプマップと異なりマップ画像を保存する際に"
" 8 ビット色深度を利用できません。8 ビットで保存されたテクスチャを利用した場合、それらは 3D 空間にうまく変換されません。8 "
"ビットではなく、マップ画像を 16 もしくは 32 ビットの色深度で保存する必要が有ります。"

#: ../../manual/render/cycles/materials/displacement.rst:71
msgid ""
"In order to get the appropriate amount of subdivision it is recommended "
"to use :ref:`Adaptive Subdivision <render-cycles-settings-object-"
"subdivision>`"
msgstr ""
"適切な程度のメッシュ分割を行うために :ref:`Adaptive Subdivision <render-cycles-settings-"
"object-subdivision>` の利用が推奨されます。"

#: ../../manual/render/cycles/materials/displacement.rst:76
msgid ""
"The :doc:`Displace Modifier </modeling/modifiers/deform/displace>` can "
"also be used to displace a mesh."
msgstr ""
":doc:`Displace モディファイア </modeling/modifiers/deform/displace>` "
"もまたメッシュを変化させるのに利用できます。"

#: ../../manual/render/cycles/materials/displacement.rst:80
msgid "Controls"
msgstr "調整"

#: ../../manual/render/cycles/materials/displacement.rst:82
msgid ""
"You may find that there is a limit to using *True Displacement* compared "
"to using the :doc:`Displace Modifier "
"</modeling/modifiers/deform/displace>`. However, These can be easy fixed "
"with using a :doc:`Math Node "
"</render/cycles/nodes/types/converter/math>`. In the example below is a "
"node setup to give the same settings as the *Displace Modifier*."
msgstr ""
":doc:`Displace モディファイア </modeling/modifiers/deform/displace>` に比べて *True "
"ディスプレイスメント* の利用は制限されているように感じるかもしれません。しかしながら、その問題は :doc:`Math Node "
"</render/cycles/nodes/types/converter/math>` を利用することで容易に解消されます。下の例では "
"*Displace モディファイア* と同様の設定を持たせるノードの設定を示します。"

#: ../../manual/render/cycles/materials/displacement.rst:89
msgid "Math nodes used to add Mid-level and Strength."
msgstr "Mid-level と Strength を加算するために Math ノードを用いる。"

#: ../../manual/render/cycles/materials/displacement.rst:91
msgid ""
"In the example above a math node is used twice, the first math node uses "
"the add operator. This operation can be used to control the mid-level of "
"the displacement. The second math node uses the multiply operation to "
"control how strong the displacement effect is. Higher values would give "
"you larger displacement and lower values give smaller displacement."
msgstr ""
"上の例では Math ノードが 2 回使われ、最初の Math ノードは Add (加算) 操作を行います。この操作はディスプレイスメントにおける"
" Midlevel の調整のために行われます。次の Math ノードは Multiply (乗算) "
"操作によってどの程度の強度でディスプレイスメントの効果を持たせるかを調整しています。大きな値を与えればより大きい変位量を得られて小さな値を与えれば小さな変位量になります。"

