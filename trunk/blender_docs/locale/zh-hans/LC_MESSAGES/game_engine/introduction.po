# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender Reference
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-20 03:54+0800\n"
"PO-Revision-Date: 2018-04-29 12:26+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../manual/game_engine/introduction.rst:4
msgid "Introduction"
msgstr "简介"

#: ../../manual/game_engine/introduction.rst:6
msgid ""
"The Blender Game Engine (BGE) is Blender's tool for real-time projects, "
"from architectural visualizations and simulations to games."
msgstr "Blender 游戏引擎（BGE）是一个用于实时项目的工具，从建筑可视化和模拟到游戏都适用。"

#: ../../manual/game_engine/introduction.rst:9
msgid ""
"A word of warning, before you start any big or serious project with the "
"Blender Game Engine, you should note that it is currently not very "
"supported and that there are plans for its retargeting and refactoring "
"that, in the very least, will break compatibility. For further "
"information, you should get in touch with the developers via mailing list"
" or IRC and read the `development roadmap "
"<https://code.blender.org/2013/06/blender-roadmap-2-7-2-8-and-"
"beyond/>`__."
msgstr ""
"提醒一下，在你开始使用 Blender "
"游戏引擎制作任何大型或是严肃的项目之前，你应该注意到，它目前对计划重定向和重构的支持不怎么好，至少会破坏兼容性。欲进一步了解更多详细信息，你应该通过邮件列表或"
" IRC 频道与开发人员联系，并阅读 `开发路线图 <https://code.blender.org/2013/06/blender-"
"roadmap-2-7-2-8-and-beyond/>`__."

#: ../../manual/game_engine/introduction.rst:18
msgid "Use Cases and Sample Games"
msgstr "用例和游戏示例"

#: ../../manual/game_engine/introduction.rst:20
msgid ""
"Blender has its own built-in Game Engine that allows you to create "
"interactive 3D applications or simulations. The major difference between "
"Game Engine and the conventional Blender system is in the rendering "
"process. In the normal Blender engine, images and animations are built "
"off-line -- once rendered they cannot be modified. Conversely, the "
"Blender Game Engine renders scenes continuously in real-time, and "
"incorporates facilities for user interaction during the rendering "
"process."
msgstr ""
"Blender 拥有自己内置的游戏引擎，可让你创建交互式 3D 应用程序或模拟程序。游戏引擎和传统 Blender "
"系统的主要区别在于渲染过程。在普通的 Blender 引擎中，图像和动画是离线构建的——一旦渲染出来就无法修改。相反，Blender "
"游戏引擎实时地渲染场景，并在渲染过程中包含用于用户交互的工具。"

#: ../../manual/game_engine/introduction.rst:29
msgid "Screenshot from \"Yo Frankie\", produced with Blender Game Engine."
msgstr "来自于“Yo Frankie”的屏幕截图，用 Blender 游戏引擎制作。"

#: ../../manual/game_engine/introduction.rst:31
msgid ""
"The Blender Game Engine oversees a game loop, which processes logic, "
"sound, physics and rendering simulations in sequential order. The engine "
"is written in C++."
msgstr "Blender 游戏引擎负责监控一个游戏循环，按顺序依次处理逻辑，声音，物理和渲染模拟。该引擎用 C++ 编写。"

#: ../../manual/game_engine/introduction.rst:34
msgid ""
"By default, the user has access to a powerful, high-level, Event Driven "
":doc:`Logic Editor </editors/logic_editor>` which is comprised of a "
"series of specialized components called \"Logic Bricks\". The :doc:`Logic"
" Editor </editors/logic_editor>` provides deep interaction with the "
"simulation, and its functionality can be extended through Python "
"scripting. It is designed to abstract the complex engine features into a "
"simple user interface, which does not require experience with "
"Programming. An overview of the :doc:`Logic Editor "
"</editors/logic_editor>` can be found in the :doc:`Game Logic Screen "
"Layout </game_engine/screen_layout>`."
msgstr ""
"默认情况下，用户可以访问到强大、高级、以事件为驱动的 :doc:`逻辑编辑器 </editors/logic_editor>` "
"，它由一系列称为“逻辑块”的专门组件构成。:doc:`逻辑编辑器 </editors/logic_editor>` "
"提供了与仿真模拟的深层交互，其功能可以通过 Python "
"脚本进行扩展。它旨在将复杂的引擎功能抽象为简单的用户界面，而不需要编程经验。:doc:`逻辑编辑器 "
"</editors/logic_editor>` 的概述可以在 :doc:`游戏逻辑屏幕布局 "
"</game_engine/screen_layout>` 中找到。"

#: ../../manual/game_engine/introduction.rst:44
msgid ""
"The Game Engine is closely integrated with the existing code base of "
"Blender, which permits quick transitions between the traditional modeling"
" feature set and game-specific functionality provided by the program. In "
"this sense, the Game Engine can be efficiently used in all areas of game "
"design, from prototyping to final release."
msgstr ""
"游戏引擎与 Blender "
"现有的代码库紧密集成，它允许在传统建模功能集和程序提供的游戏特定功能之间快速转换。从这个意义上讲，游戏引擎可以有效地应用于游戏设计的各个领域，从原型设计到最终发布。"

#: ../../manual/game_engine/introduction.rst:50
msgid ""
"The Game Engine can simulate content within Blender, however, it also "
"includes the ability to export a binary run-time to Linux, macOS, and MS-"
"Windows."
msgstr "游戏引擎可以模拟 Blender 里的内容，但是它还包括将二进制运行时（文件）导出到 Linux，macOS 和 MS-Windows 的功能。"

#: ../../manual/game_engine/introduction.rst:53
msgid ""
"There are a number of powerful libraries the Game Engine takes advantage "
"of:"
msgstr "游戏引擎利用了很多强大的库："

#: ../../manual/game_engine/introduction.rst:55
msgid "Audaspace: A sound library for control of audio. Uses OpenAL or SDL."
msgstr "Audaspace：用于控制音频的声音库。使用 OpenAL 或 SDL。"

#: ../../manual/game_engine/introduction.rst:56
msgid ""
"Bullet: A physics engine featuring 3D collision detection, soft body "
"dynamics, and rigid body dynamics."
msgstr "Bullet：一个具有三维碰撞检测，柔体动力学和刚体动力学的物理引擎。"

#: ../../manual/game_engine/introduction.rst:57
#, fuzzy
msgid "Detour: A pathfinding and spatial reasoning toolkit."
msgstr "Detour：路径查找和空间推理工具包。"

#: ../../manual/game_engine/introduction.rst:58
msgid ""
"Recast: A state of the art navigation mesh construction tool set for "
"games."
msgstr "Recast：一种用于游戏的先进导航网格构造工具集。"

#: ../../manual/game_engine/introduction.rst:60
msgid ""
"When creating a game or simulation in the BGE, there are four essential "
"steps:"
msgstr "当在 BGE 中模拟或创建游戏时，有四个必要步骤："

#: ../../manual/game_engine/introduction.rst:62
msgid ""
"Create visual elements that can be rendered. This could be 3D models or "
"images."
msgstr "创建能被渲染的可视化元素。这通常是 3D 模型或图像。"

#: ../../manual/game_engine/introduction.rst:63
msgid ""
"Enable interaction within the scene using logic bricks to script custom "
"behavior and determine how it is invoked (using the appropriate "
"\"sensors\" such as keyboards or joysticks)."
msgstr "使用逻辑块来启用场景内的交互，再编写脚本自定义行为并确定何时被调用（最后使用合适的“传感器”来触发，例如：键盘或游戏杆）。"

#: ../../manual/game_engine/introduction.rst:65
msgid ""
"Create one (or more) camera to give a frustum from which to render the "
"scene, and modify the parameters to support the environment in which the "
"game will be displayed, such as Stereo rendering."
msgstr ""
"创建一个(或多个)摄像机，使用其视锥体来指定场景的渲染区域，并通过修改参数以支持游戏将显示的环境，例如：立体渲染(注：就是配合 3D "
"眼镜观看的效果)。"

#: ../../manual/game_engine/introduction.rst:67
msgid ""
"Launch the game, using the internal player or exporting a runtime to the "
"appropriate platform."
msgstr "启动游戏，使用内部播放器或导出运行时（文件）到合适的平台。"

