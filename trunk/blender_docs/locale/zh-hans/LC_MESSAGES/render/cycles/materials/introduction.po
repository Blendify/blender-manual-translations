#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-17 01:30+0200\n"
"PO-Revision-Date: 2018-04-30 21:23+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"X-Generator: Poedit 2.0.7\n"

#: ../../manual/render/cycles/materials/introduction.rst:4
msgid "Introduction"
msgstr "简介"

#: ../../manual/render/cycles/materials/introduction.rst:6
msgid ""
"Materials define the appearance of meshes, curves and other objects. They consist of three shaders, "
"defining the appearance of the surface of the mesh, the volume inside the mesh, and displacement of the "
"surface of the mesh."
msgstr ""
"材质定义了网格物体、曲线物体及其它各类物体的外观。它们共有三种类型的着色器，分别是：定义网格的表面效果、"
"网格内部的体积效果、以及网格表面的置换效果。"

#: ../../manual/render/cycles/materials/introduction.rst:15
msgid "Surface Shader"
msgstr "表面着色器"

#: ../../manual/render/cycles/materials/introduction.rst:17
msgid "The surface shader defines the light interaction at the surface of the mesh."
msgstr "表面着色器定义了网格表面的光线交互状态。"

#: ../../manual/render/cycles/materials/introduction.rst:21
msgid ":doc:`Surface Shader </render/cycles/materials/surface>`."
msgstr ":doc:`表面着色器 </render/cycles/materials/surface>`。"

#: ../../manual/render/cycles/materials/introduction.rst:25
msgid "Volume Shader"
msgstr "体积着色器"

#: ../../manual/render/cycles/materials/introduction.rst:27
msgid ""
"When the surface shader does not reflect or absorb light, it enters into the volume. If no volume shader "
"is specified, it will pass straight through to the other side of the mesh."
msgstr ""
"当表面着色器既不反射也不吸收光线时，光线会进入到物体内部。如果不指定任何的体积属性，它将直接穿透到达网格"
"的另一头。"

#: ../../manual/render/cycles/materials/introduction.rst:30
msgid ""
"If it is defined, a volume shader describes the light interaction as it passes through the volume of the "
"mesh. Light may be scattered, absorbed, or emitted at any point in the volume."
msgstr ""
"如果进行了定义，那么一个体积着色器就会对光线经过物体内部时的作用效果进行说明。光线可能会被散射、吸收或是"
"照亮内部的任意点。"

#: ../../manual/render/cycles/materials/introduction.rst:34
msgid ""
"A material may have both a surface and a volume shader, or only one of either. Using both may be useful "
"for materials such as glass, water or ice, where you want some of the light to be absorbed as it passes "
"through the surface, combined with e.g. a glass or glossy shader at the surface."
msgstr ""
"一个材质可以同时具有表面着色器和体积着色器属性，或是只含其一。同时使用二者时，有助于表现如玻璃、水或冰块"
"等材质。例如，当你需要一部分光在穿过物体被吸收，兼具玻璃着色器和光泽着色器属性的表面的情况。"

#: ../../manual/render/cycles/materials/introduction.rst:41
msgid ":doc:`Volume Shader </render/cycles/materials/volume>`."
msgstr ":doc:`体积着色器 </render/cycles/materials/volume>`。"

#: ../../manual/render/cycles/materials/introduction.rst:45
msgid "Displacement"
msgstr "置换着色器"

#: ../../manual/render/cycles/materials/introduction.rst:47
msgid ""
"The shape of the surface and the volume inside it may be altered by displacement shaders. This way, "
"textures can then be used to make the mesh surface more detailed."
msgstr "表面以及内部的形状可以通过置换着色器改变。用这种方式，贴图可以让网格表面的细节程度得到增强。"

#: ../../manual/render/cycles/materials/introduction.rst:50
msgid ""
"Depending on the settings, the displacement may be virtual, only modifying the surface normals to give "
"the impression of displacement, which is known as bump mapping, or a combination of real and virtual "
"displacement."
msgstr ""
"如果设置得当，置换效果可以只调节表面法线即可虚拟呈现效果，也就是传说中的凹凸贴图，又或者实现虚实结合的置"
"换效果。"

#: ../../manual/render/cycles/materials/introduction.rst:56
msgid ":doc:`Displacement </render/cycles/materials/displacement>`."
msgstr ":doc:`置换着色器 </render/cycles/materials/displacement>`。"

#: ../../manual/render/cycles/materials/introduction.rst:60
msgid "Energy Conservation"
msgstr "能量守恒"

#: ../../manual/render/cycles/materials/introduction.rst:62
msgid ""
"The material system is built with physically-based rendering in mind, cleanly separating how a material "
"looks and which rendering algorithm is used to render it. This makes it easier to achieve realistic "
"results and balanced lighting, though there are a few things to keep in mind."
msgstr ""
"材质系统是基于物理渲染思想的基础上建立的，将材质的感官形式与所用的渲染算法进行泾渭分明的划分。这样做会比"
"较易于获得逼真的效果以及均衡的光照，不过需要注意几点。"

#: ../../manual/render/cycles/materials/introduction.rst:67
msgid ""
"In order for materials to work well with global illumination, they should be, speaking in terms of "
"physics, energy conserving. That means they cannot reflect more light than comes in. This property is "
"not strictly enforced, but if colors are in the range 0.0 to 1.0, and :abbr:`BSDF (Bidirectional "
"scattering distribution function)`\\ s are only mixed together with the Mix Shader node, this will "
"automatically be true."
msgstr ""
"为了能够让材质在全局光中取得理想的效果， 用户应该遵循物理原则，质能守恒定律。这意味着，物体所反射的光量不"
"能多于入射的光量。这种属性并没有强制限定，但如果色彩值在0.0-1.0之间，并且 :abbr:`BSDF (双向散射分布函"
"数)` 着色器只通过Mix Shader（混合着色器）结点进行混合的话，那么结果就是正确的。"

#: ../../manual/render/cycles/materials/introduction.rst:74
msgid ""
"It is however, possible to break this, with color values higher than 1.0 or using the Add Shader node, "
"but one must be careful when doing this to keep materials behaving predictably under various lighting "
"conditions. It can result in a reflection adding light into the system at each bounce, turning a :abbr:"
"`BSDF (Bidirectional scattering distribution function)` into a kind of emitter."
msgstr ""
"然而，这种情况则例外：当色彩值高于1.0，或者使用了Add Shader（叠加着色器）结点的时候，你必须谨慎操作，确保"
"材质的效果在各种光照情况下都在预料之内。因为这种情况下会导致在系统中每当光线被反射时都会被多反射一次，使"
"得 :abbr:`BSDF (双向散射分布函数)` 着色器呈现出一种类似于自发光的效果。"
