# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-30 09:48+1000\n"
"PO-Revision-Date: 2019-08-26 14:49+0800\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"X-Generator: Poedit 2.2.3\n"

#: ../../manual/render/cycles/render_settings/performance.rst:4
msgid "Performance"
msgstr "性能"

#: ../../manual/render/cycles/render_settings/performance.rst:6
msgid "Reference"
msgstr "参考"

#: ../../manual/render/cycles/render_settings/performance.rst
msgid "Panel"
msgstr "面板"

#: ../../manual/render/cycles/render_settings/performance.rst:9
msgid ":menuselection:`Render --> Performance`"
msgstr ":menuselection:`渲染 --> 性能`"

#: ../../manual/render/cycles/render_settings/performance.rst:13
msgid "Threads"
msgstr "主题"

#: ../../manual/render/cycles/render_settings/performance.rst:23
msgid "Mode"
msgstr "模式"

#: ../../manual/render/cycles/render_settings/performance.rst:17
msgid "Auto-detect"
msgstr "自动"

#: ../../manual/render/cycles/render_settings/performance.rst:17
msgid ""
"Automatically chooses the amount of threads to match the number of "
"logical processors on your computer."
msgstr "自动选择"

#: ../../manual/render/cycles/render_settings/performance.rst:23
msgid "Fixed"
msgstr "手动"

#: ../../manual/render/cycles/render_settings/performance.rst:20
msgid ""
"Manually choose the amount of threads to use for rendering. This can be "
"useful for example, if you want to use your computer while rendering, "
"you can set the property to a thread count lower the amount of logical "
"processors on your computer."
msgstr ""
"手动选择要用于呈现的线程量。这非常有用，例如，如果要在呈现时使用计算机，"
"可以将 属性设置为线程计数，从而降低计算机上的逻辑处理器数量。"

#: ../../manual/render/cycles/render_settings/performance.rst:26
msgid "Tiles"
msgstr "切片"

#: ../../manual/render/cycles/render_settings/performance.rst:29
msgid "Tile Order"
msgstr "切片顺序"

#: ../../manual/render/cycles/render_settings/performance.rst:29
msgid ""
"Order of rendering tiles. This does not significantly affect the "
"performance."
msgstr "渲染切片的顺序。这不会对性能产生显著影响。"

#: ../../manual/render/cycles/render_settings/performance.rst:36
msgid "Tile size X/Y"
msgstr "切片X向/Y向的大小"

#: ../../manual/render/cycles/render_settings/performance.rst:32
msgid "The size of the tiles for rendering."
msgstr "用于渲染的切片的大小。"

#: ../../manual/render/cycles/render_settings/performance.rst:34
msgid ""
"Depending on what device you are using for rendering, different tile "
"sizes can give faster renders. For CPU rendering smaller tiles sizes "
"(like 32 x 32) tend to be faster, while for :doc:`GPU rendering </render/"
"cycles/gpu_rendering>` larger tile sizes give a better performance (like "
"256 x 256)."
msgstr ""
"根据用于渲染的设备，不同的磁贴大小可以提供更快的渲染。对于 CPU 渲染，较小"
"的切片尺寸(如 32 x 32)往往更快，而对于 :doc:`GPU 渲染 </render/cycles/"
"gpu_rendering>` ,更大的切片大小可提供更好的性能(如 256 x 256)。"

#: ../../manual/render/cycles/render_settings/performance.rst:43
msgid "Progressive Refine"
msgstr "渐进式更新"

#: ../../manual/render/cycles/render_settings/performance.rst:39
msgid ""
"Instead of rendering each tile until it has finished every sample, "
"refine the whole image progressively. Note that progressive rendering is "
"slightly slower than tiled rendering, but time can be saved by manually "
"stopping the render when the noise level is low enough."
msgstr ""
"在完成每个样本之前，不要渲染每个切片，而是逐步优化整个图像。请注意，渐进"
"式渲染比平铺渲染切片稍慢，但当噪点级别足够低时，手动停止渲染可以节省时"
"间。"

#: ../../manual/render/cycles/render_settings/performance.rst:43
msgid ""
"For rendering animations it is best to disable this feature, as stopping "
"a frame early is not possible."
msgstr "对于渲染动画，最好禁用此功能，因为无法提前停止帧。"

#: ../../manual/render/cycles/render_settings/performance.rst:52
msgid "Save Buffers"
msgstr "缓存"

#: ../../manual/render/cycles/render_settings/performance.rst:48
msgid ""
"Saves all render layers and passes to the temp directory on a drive, and "
"reads them back after rendering has finished. This saves memory (RAM) "
"usage during rendering, particularly when using many render layers and "
"passes. This can be read back in the Compositor and Image editor by "
"using :ref:`bpy.ops.node.read_viewlayers`."
msgstr ""
"保存所有渲染图层并传递到驱动器上的临时目录，并在渲染完成后读回它们。这样"
"可以节省在渲染期间使用内存 (RAM)，尤其是在使用许多渲染图层和刀路时。这"
"可以通过使用 :ref:`bpy.ops.node.read_viewlayers` 在合成器和图像编辑器中读"
"回。"

#: ../../manual/render/cycles/render_settings/performance.rst:55
msgid "Viewport"
msgstr "视窗"

#: ../../manual/render/cycles/render_settings/performance.rst:61
msgid "Viewport BVH Type"
msgstr "视窗BVH模式"

#: ../../manual/render/cycles/render_settings/performance.rst:58
msgid "Dynamic BVH"
msgstr "动态BHV模式"

#: ../../manual/render/cycles/render_settings/performance.rst:59
msgid ""
"Objects can be transformed, added and deleted interactively, at the cost "
"of slower renders."
msgstr "对象可以以交互方式转换、添加和删除，但代价是渲染速度较慢。"

#: ../../manual/render/cycles/render_settings/performance.rst:61
msgid "Static BVH"
msgstr "静态BHV模式"

#: ../../manual/render/cycles/render_settings/performance.rst:61
msgid ""
"Object modifications require a complete :term:`BVH` rebuild which "
"reduces interactivity but renders faster."
msgstr ""
"修改对象时需要完全重建 :term:`BVH` ，如此降低了交互性但增加了渲染速度。"

#: ../../manual/render/cycles/render_settings/performance.rst:64
msgid "Start Resolution"
msgstr "开始分辨率"

#: ../../manual/render/cycles/render_settings/performance.rst:64
msgid ""
"Resolution to start rendering preview at, progressively increase it to "
"the full viewport size."
msgstr "开始渲染预览的分辨率，逐步将其增加到全视口大小。"

#: ../../manual/render/cycles/render_settings/performance.rst:70
msgid "Viewport Resolution"
msgstr "视窗分辨率"

#: ../../manual/render/cycles/render_settings/performance.rst:70
msgid "Pixel Size"
msgstr "像素大小"

#: ../../manual/render/cycles/render_settings/performance.rst:68
msgid ""
"Option to control the resolution for viewport rendering. Allows you to "
"speed up viewport rendering, which is especially useful for displays "
"with high DPI."
msgstr ""
"用于控制视口渲染分辨率的选项。允许您加快视口渲染，这对于具有高 DPI 的显示"
"器特别有用。"

#: ../../manual/render/cycles/render_settings/performance.rst:73
msgid "Final Render"
msgstr "最终渲染"

#: ../../manual/render/cycles/render_settings/performance.rst:78
msgid "Persistent Images"
msgstr "缓存图像"

#: ../../manual/render/cycles/render_settings/performance.rst:76
msgid ""
"Keep image data in memory after rendering, for faster re-renders at the "
"cost of extra memory usage when performing other tasks in Blender."
msgstr ""
"渲染后将图像数据保存在内存中，以便更快地重新呈现，在 Blender 中执行其他任"
"务时，需要额外使用内存。"

#: ../../manual/render/cycles/render_settings/performance.rst:81
msgid "Acceleration Structure"
msgstr "加速结构"

#: ../../manual/render/cycles/render_settings/performance.rst:84
msgid "Use Spatial Splits"
msgstr "使用空间分割"

#: ../../manual/render/cycles/render_settings/performance.rst:84
msgid ""
"Spatial splits improve the rendering performance in scenes with a mix of "
"large and small polygons. The downsides are longer BVH build times and "
"slightly increased memory usage."
msgstr ""
"空间分割可提高混合大面和小面的场景中的渲染性能。缺点是 BVH 生成时间较长，"
"内存使用量略有增加。"

#: ../../manual/render/cycles/render_settings/performance.rst:88
msgid "Use Hair BVH"
msgstr "使用毛发BHV"

#: ../../manual/render/cycles/render_settings/performance.rst:87
msgid ""
"Use a special type of :term:`BVH` for rendering hair. The bounding boxes "
"are not axis aligned allowing a spatially closer fit to the hair "
"geometry. Disabling this option will reduce memory, at the cost of "
"increasing hair render time."
msgstr ""
"使用特殊类型的 :term:`BVH` 来渲染头发。边界框不对齐轴，允许在空间上更接近"
"毛发几何体。禁用此选项将减少内存，但会增加头发渲染时间。"

#: ../../<generated>:1
msgid "BVH Time Steps"
msgstr "BVH时间步长"

#: ../../manual/render/cycles/render_settings/performance.rst:91
msgid ""
"Split BVH primitives by this number of time steps to speed up render "
"time in cost of memory."
msgstr "按此时间步长拆分 BVH 基元，以加快以内存成本为代价的渲染时间。"
