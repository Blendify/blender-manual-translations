#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 16:58+0200\n"
"PO-Revision-Date: 2019-04-20 20:29+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../manual/render/materials/introduction.rst:5
msgid "Introduction"
msgstr "简介"

#: ../../manual/render/materials/introduction.rst:7
msgid ""
"A material defines the artistic qualities of the substance that an object"
" is made of. In its simplest form, you can use materials to show the "
"substance an object is made of, or to \"paint\" the object with different"
" colors. Usually, the substance is represented by its surface qualities "
"(color, shininess, reflectance, etc.) but it can also exhibit more "
"complicated effects such as transparency, diffraction and subsurface "
"scattering. Typical materials might be brass, skin, glass, or linen."
msgstr ""
"材质定义了物体所组成的物质的艺术品质。在最简单的形式中, 你可以使用材质来显示物体所构成的物质, 或用不同的颜色 \"绘制\" 物体。通常, "
"该物质由其表面品质 (颜色、光泽、反射率等) 表示, 但也会产生更复杂的效果, "
"如透明度、衍射和次表面散射。典型的材质可能是黄铜、皮肤、玻璃或亚麻。"

#: ../../manual/render/materials/introduction.rst:14
msgid ""
"Materials can also contain displacement information to described how the "
"material raises and lowers the surface of the material."
msgstr "材质还可以包含置换信息来描述材质如何升高和降低材质表面。"

#: ../../manual/render/materials/introduction.rst:20
msgid ""
"Various basic materials (single, multiple material, transparency, vertex "
"paint)."
msgstr "各种基本材质（单材质、多材质、透明、顶点绘制）。"

#: ../../manual/render/materials/introduction.rst:22
msgid ""
"The basic (un-textured) Blender material is uniform across each face of "
"an object (although the various pixels of each face of the object may "
"appear differently because of lighting effects). However, different faces"
" of the object may use different materials (see :ref:`bi-multiple-"
"materials`)."
msgstr ""
"基本 (无纹理) blender 材质在物体的每个面上都是均匀的 (尽管由于照明效果, 物体的每个面的各种像素可能会出现不同的外观)。但是, "
"物体的不同面可以使用不同的材质 (请参见 :ref:`bi-multiple-materials` )。"

#: ../../manual/render/materials/introduction.rst:26
#, fuzzy
msgid ""
"In Blender, materials can (optionally) have associated textures. Textures"
" *describe* the substance: e.g. *polished* brass, *dirty* glass or "
"*embroidered* linen. The :doc:`Textures "
"</render/materials/legacy_textures/index>` chapter describes how to add "
"textures to materials."
msgstr ""
"在 blender 中, 材质可以 (可选) 具有关联的纹理。纹理 *描述*  物质: 例如 *抛光* 的黄铜, *脏* 的玻璃或 *绣花* "
"的亚麻布。 :doc:`Textures </editors/uv_image/uv/textures/index>` "
"一章介绍了如何向材质添加纹理。"

#: ../../manual/render/materials/introduction.rst:33
msgid "How Materials Work"
msgstr "材质如何工作"

#: ../../manual/render/materials/introduction.rst:35
msgid ""
"Before you can understand how to design effectively with materials, you "
"must understand how simulated light and surfaces interact in Blender's "
"rendering engine and how material settings control those interactions. A "
"deep understanding of the engine will help you to get the most from it."
msgstr ""
"在了解如何有效地使用材质进行设计之前, 你必须了解 blender 的模拟光线和表面在渲染引擎中是如何相互作用的, "
"以及如何设置材质控制这些相互作用。深入了解引擎将帮助你从中获得最大收益。"

#: ../../manual/render/materials/introduction.rst:40
msgid ""
"The rendered image you create with Blender is a projection of the scene "
"onto an imaginary surface called the *viewing plane*. The viewing plane "
"is analogous to the film in a traditional camera, or the rods and cones "
"in the human eye, except that it receives simulated light, not real "
"light."
msgstr ""
"使用Blender创建的渲染图像是将场景投影到称为 *视图平面* "
"的假想表面上。视图平面类似于传统相机中的胶片，或者人眼中的视杆和视锥，除了接受模拟光，而不是真正的光外。"

#: ../../manual/render/materials/introduction.rst:46
msgid ""
"To render an image of a scene we must first determine what light from the"
" scene is arriving at each point on the viewing plane. The best way to "
"answer this question is to follow a straight line (the simulated light "
"ray) backwards through that point on the viewing plane and the focal "
"point (the location of the camera) until it hits a renderable surface in "
"the scene, at which point we can determine what light would strike that "
"point."
msgstr "要渲染场景的图像，必须首先确定场景中的光线到视图平面上的每个点。回答这个问题的最佳方法是沿着直线（模拟光线）向后穿过视图平面上的该点和焦点（相机的位置），直到它碰到场景中的可渲染表面，在该点上，我们可以确定哪些光线会击中到该点。"

#: ../../manual/render/materials/introduction.rst:53
msgid ""
"The surface properties and incident light angle tells how much of that "
"light would be reflected back along the incident viewing angle "
"*(Rendering engine basic principle)*."
msgstr "表面特性和入射光角度告诉我们有多少光线会沿入射视角反射回来  *（渲染引擎基本原理）* 。"

#: ../../manual/render/materials/introduction.rst:59
msgid "Rendering engine basic principle."
msgstr "渲染引擎基本原理。"

#: ../../manual/render/materials/introduction.rst:61
msgid ""
"Two basic types of phenomena take place at any point on a surface when a "
"light ray strikes it: diffusion and specular reflection. Diffusion and "
"specular reflection are distinguished from each other mainly by the "
"relationship between the incident light angle and the reflected light "
"angle."
msgstr "当光线照射到表面上时，在表面上的任何点发生两种基本类型的现象：漫反射和高光反射。漫反射和高光反射主要通过入射光角度和反射光角度之间的关系来区分。"

#: ../../manual/render/materials/introduction.rst:66
msgid ""
"The shading (or coloring) of the object during render will then take into"
" account the base color (as modified by the diffusion and specular "
"reflection phenomenon) and the light intensity."
msgstr "在渲染过程中，物体的着色（或颜色）将考虑基础颜色（由漫反射和高光反射现象修改）和光强度。"

#: ../../manual/render/materials/introduction.rst:69
msgid ""
"Using the internal ray tracer, other (more advanced) phenomena could "
"occur. In ray-traced reflections, the point of a surface struck by a "
"light ray will return the color of its surrounding environment, according"
" to the rate of reflection of the material (mixing the base color and the"
" surrounding environment's) and the viewing angle."
msgstr "使用内部光线跟踪器，可能会发生其他（更高级）现象。在光线跟踪反射中，光线照射的表面点将根据材料的反射速率（混合基色和周围环境）和视角返回其周围环境的颜色。"

#: ../../manual/render/materials/introduction.rst:74
msgid ""
"On the other hand, in ray-traced refractions, the point of a surface "
"struck by a light ray will return the color of its background "
"environment, according to the rate of transparency (mixing the base color"
" and the background environment's along with its optional filtering "
"value) of the material and the optional index of refraction of the "
"material, which will distort the viewing angle."
msgstr "另一方面，在光线跟踪折射中，被光线照射的表面点将根据材质的透明度（基础颜色和背景环境的混合及其可选过滤值）和材质的可选折射率返回其背景环境的颜色，这将会扭曲视角。"

#: ../../manual/render/materials/introduction.rst:80
msgid ""
"Of course, shading of the object hit by a light ray will be about mixing "
"all these phenomena at the same time during the rendering. The appearance"
" of the object, when rendered, depends on many interrelated settings:"
msgstr "当然，光线照射的物体的着色将是在渲染过程中同时混合所有这些现象。物体渲染时的外观取决于许多相关设置："

#: ../../manual/render/materials/introduction.rst:84
msgid "World (Ambient color, Radiosity, Ambient Occlusion)"
msgstr "世界（环境颜色，辐射，环境遮蔽）"

#: ../../manual/render/materials/introduction.rst:85
msgid "Lights"
msgstr "灯光"

#: ../../manual/render/materials/introduction.rst:86
msgid ""
"Material settings (including ambient, emission, and every other setting "
"on every panel in that tab)"
msgstr "材质设置（包括环境、发光和该选项卡中每个面板上的其他设置）"

#: ../../manual/render/materials/introduction.rst:87
msgid "Texture(s) and how they are mixed"
msgstr "纹理及其混合方式"

#: ../../manual/render/materials/introduction.rst:88
msgid "Material Nodes"
msgstr "材质节点"

#: ../../manual/render/materials/introduction.rst:89
msgid "Camera"
msgstr "相机"

#: ../../manual/render/materials/introduction.rst:90
msgid "Viewing angle"
msgstr "视角"

#: ../../manual/render/materials/introduction.rst:91
msgid "Obstructions and transparent occlusions"
msgstr "障碍和透明遮挡"

#: ../../manual/render/materials/introduction.rst:92
msgid "Shadows from other opaque/transparent objects"
msgstr "来自其他不透明/透明物体的阴影"

#: ../../manual/render/materials/introduction.rst:93
msgid "Render settings"
msgstr "渲染设置"

#: ../../manual/render/materials/introduction.rst:94
msgid "Object dimensions (SS settings are relevant to dimensions)"
msgstr "物体尺寸（SS设置与尺寸相关）"

#: ../../manual/render/materials/introduction.rst:95
msgid "Object shape (refractions, Fresnel effects)"
msgstr "物体形状（折射，菲涅耳效应）"

#: ../../manual/render/materials/introduction.rst:99
msgid "Using Materials"
msgstr "使用材质"

#: ../../manual/render/materials/introduction.rst:101
msgid "Check your Render"
msgstr "检查你的渲染"

#: ../../manual/render/materials/introduction.rst:103
msgid ""
"When designing materials (and textures and lighting), frequently check "
"the rendered appearance of your scene, using your chosen render "
"engine/shader settings. The appearance might be quite different from that"
" shown in the texture display in the 3D panel."
msgstr "在设计材质（以及纹理和光照）时，请经常使用所选的渲染引擎/着色器设置检查场景的渲染外观。外观可能与3D面板中纹理显示中显示的外观完全不同。"

#: ../../manual/render/materials/introduction.rst:107
msgid ""
"As stated above, the material settings usually determine the surface "
"properties of the object. There are several ways in which materials can "
"be set up in Blender. Generally speaking, these are not compatible. You "
"must choose which method you are going to use for each particular object "
"in your scene:"
msgstr "如上所述，材质设置通常决定物体的表面属性。有几种方法可以在Blender中设置材质。一般来说，这些是不兼容的。必须为场景中的每个特定物体选择要使用的方法："

#: ../../manual/render/materials/introduction.rst:112
#, fuzzy
msgid ""
"First, you can set the :doc:`Settings </render/materials/settings>` in "
"the various Material panels."
msgstr "首先，你可以在各种材质面板中设置材质 :doc:`属性 </render/cycles/materials/settings>`。"

#: ../../manual/render/materials/introduction.rst:114
#, fuzzy
msgid ""
"Second, you can use :doc:`Nodes </render/shader_nodes/index>`; a "
"graphical nodes editor is available."
msgstr "其次，你可以使用 :doc:`节点 </render/cycles/nodes/index>` ; 可以使用图形节点编辑器。"

#: ../../manual/render/materials/introduction.rst:116
#, fuzzy
msgid ""
"Last, you can directly set the color of object surfaces using various "
"special effects. Strictly speaking, these are not materials at all, but "
"they are included here because they affect the appearance of your "
"objects. These include :ref:`Vertex Painting <painting-vertex-index>`, "
":doc:`Volume Rendering </render/materials/components/volume>`, and "
":doc:`Wire Rendering </render/shader_nodes/input/wireframe>`."
msgstr ""
"最后，你可以使用各种特殊效果直接设置物体表面的颜色。严格来说，这些根本不是材质，但它们包括在这里因为它们会影响物体的外观。这些包括  "
":ref:`Vertex Painting <painting-vertex-index>`, :doc:`Wire Rendering "
"</render/cycles/nodes/types/input/wireframe>`, :doc:`Volume Rendering "
"</render/cycles/materials/volume>`。"

#: ../../manual/render/materials/introduction.rst:122
msgid ""
"The exact effect of Material settings can be affected by a number of "
"system settings. First and foremost is the renderer used: Cycles and the "
"Blender Renderer (aka Blender Internal or BI) require quite different "
"illumination levels to achieve similar results, and even then the "
"appearance of objects can be quite different. Also, the material "
"properties settings can be affected by the texture method used (single-"
"texture, multi-texture or GLSL). So it is recommended to always select "
"the appropriate system settings before starting the design of materials."
msgstr "材质设置的确切效果可能会受到许多系统设置的影响。首先，最重要的是所使用的渲染器：Cycles和Blender渲染器（也称为Blender内部渲染器或BI）需要相当不同的照明级别来获得类似的结果，即使这样，物体的外观也可能会非常不同。此外，材质属性设置可能会受到所使用的纹理方法（单纹理、多纹理或GLSL）的影响。因此，在开始材质设计之前，建议始终选择适当的系统设置。"

#~ msgid ""
#~ "Materials define the appearance of "
#~ "meshes, curves and other objects. They"
#~ " consist of three shaders, defining "
#~ "the appearance of the surface of "
#~ "the mesh, the volume inside the "
#~ "mesh, and displacement of the surface"
#~ " of the mesh."
#~ msgstr "材质定义了网格物体、曲线物体及其它各类物体的外观。它们共有三种类型的着色器，分别是：定义网格的表面效果、网格内部的体积效果、以及网格表面的置换效果。"

#~ msgid ":doc:`Surface Shader </render/cycles/materials/surface>`."
#~ msgstr ":doc:`表面着色器 </render/cycles/materials/surface>`。"

#~ msgid ":doc:`Volume Shader </render/cycles/materials/volume>`."
#~ msgstr ":doc:`体积着色器 </render/cycles/materials/volume>`。"

#~ msgid ":doc:`Displacement </render/cycles/materials/displacement>`."
#~ msgstr ":doc:`置换着色器 </render/cycles/materials/displacement>`。"

#~ msgid "Surface Shader"
#~ msgstr "表面着色器"

#~ msgid ""
#~ "The :doc:`surface shader "
#~ "</render/materials/components/surface>` defines the "
#~ "light interaction at the surface of "
#~ "the mesh."
#~ msgstr ":doc:`表面着色器 </render/cycles/materials/surface>` 定义了网格表面的光线交互状态。"

#~ msgid "Volume Shader"
#~ msgstr "体积着色器"

#~ msgid ""
#~ "When the surface shader does not "
#~ "reflect or absorb light, it enters "
#~ "into the volume. If no :doc:`volume "
#~ "shader </render/materials/components/volume>` is "
#~ "specified, it will pass straight through"
#~ " to the other side of the mesh."
#~ msgstr ""
#~ "当表面着色器既不反射也不吸收光线时，光线会进入到物体内部。如果不指定任何的 :doc:`体积着色器 "
#~ "</render/cycles/materials/volume>`，它将直接穿透到达网格的另一头。"

#~ msgid ""
#~ "If it is defined, a volume shader"
#~ " describes the light interaction as "
#~ "it passes through the volume of "
#~ "the mesh. Light may be scattered, "
#~ "absorbed, or emitted at any point "
#~ "in the volume."
#~ msgstr "如果进行了定义，那么一个体积着色器就会对光线经过物体内部时的作用效果进行说明。光线可能会被散射、吸收或是照亮内部的任意点。"

#~ msgid ""
#~ "A material may have both a surface"
#~ " and a volume shader, or only "
#~ "one of either. Using both may be"
#~ " useful for materials such as glass,"
#~ " water or ice, where you want "
#~ "some of the light to be absorbed"
#~ " as it passes through the surface,"
#~ " combined with e.g. a glass or "
#~ "glossy shader at the surface."
#~ msgstr "一个材质可以同时具有表面着色器和体积着色器属性，或是只含其一。同时使用二者时，有助于表现如玻璃、水或冰块等材质。例如，当你需要一部分光在穿过物体被吸收，兼具玻璃着色器和光泽着色器属性的表面的情况。"

#~ msgid "Displacement"
#~ msgstr "置换着色器"

#~ msgid ""
#~ "The shape of the surface and the"
#~ " volume inside it may be altered "
#~ "by :doc:`displacement "
#~ "</render/materials/components/displacement>`. This way,"
#~ " textures can then be used to "
#~ "make the mesh surface more detailed."
#~ msgstr ""
#~ "表面以及内部的形状可以通过 :doc:`置换 "
#~ "</render/cycles/materials/displacement>` "
#~ "改变。用这种方式，贴图可以让网格表面的细节程度得到增强。"

#~ msgid ""
#~ "Depending on the settings, the "
#~ "displacement may be virtual, only "
#~ "modifying the surface normals to give"
#~ " the impression of displacement, which "
#~ "is known as bump mapping, or a "
#~ "combination of real and virtual "
#~ "displacement."
#~ msgstr "如果设置得当，置换效果可以只调节表面法线即可虚拟呈现效果，也就是传说中的凹凸贴图，又或者实现虚实结合的置换效果。"

#~ msgid "Energy Conservation"
#~ msgstr "能量守恒"

#~ msgid ""
#~ "The material system is built with "
#~ "physically-based rendering in mind, cleanly"
#~ " separating how a material looks and"
#~ " which rendering algorithm is used to"
#~ " render it. This makes it easier "
#~ "to achieve realistic results and "
#~ "balanced lighting, though there are a"
#~ " few things to keep in mind."
#~ msgstr "材质系统是基于物理渲染思想的基础上建立的，将材质的感官形式与所用的渲染算法进行泾渭分明的划分。这样做会比较易于获得逼真的效果以及均衡的光照，不过需要注意几点。"

#~ msgid ""
#~ "In order for materials to work "
#~ "well with global illumination, they "
#~ "should be, speaking in terms of "
#~ "physics, energy conserving. That means "
#~ "they cannot reflect more light than "
#~ "comes in. This property is not "
#~ "strictly enforced, but if colors are "
#~ "in the range 0.0 to 1.0, and "
#~ ":abbr:`BSDF (Bidirectional scattering distribution"
#~ " function)`\\ s are only mixed "
#~ "together with the Mix Shader node, "
#~ "this will automatically be true."
#~ msgstr ""
#~ "为了能够让材质在全局光中取得理想的效果， "
#~ "用户应该遵循物理原则，质能守恒定律。这意味着，物体所反射的光量不能多于入射的光量。这种属性并没有强制限定，但如果色彩值在0.0-1.0之间，并且"
#~ " :abbr:`BSDF (双向散射分布函数)` 着色器只通过Mix "
#~ "Shader（混合着色器）结点进行混合的话，那么结果就是正确的。"

#~ msgid ""
#~ "It is however, possible to break "
#~ "this, with color values higher than "
#~ "1.0 or using the Add Shader node,"
#~ " but one must be careful when "
#~ "doing this to keep materials behaving"
#~ " predictably under various lighting "
#~ "conditions. It can result in a "
#~ "reflection adding light into the system"
#~ " at each bounce, turning a "
#~ ":abbr:`BSDF (Bidirectional scattering distribution"
#~ " function)` into a kind of emitter."
#~ msgstr ""
#~ "然而，这种情况则例外：当色彩值高于1.0，或者使用了Add "
#~ "Shader（叠加着色器）结点的时候，你必须谨慎操作，确保材质的效果在各种光照情况下都在预料之内。因为这种情况下会导致在系统中每当光线被反射时都会被多反射一次，使得"
#~ " :abbr:`BSDF (双向散射分布函数)` 着色器呈现出一种类似于自发光的效果。"

