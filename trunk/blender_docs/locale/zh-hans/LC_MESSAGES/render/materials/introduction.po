#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-11 19:29+0800\n"
"PO-Revision-Date: 2019-08-12 12:31+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/render/materials/introduction.rst:4
msgid "Introduction"
msgstr "简介"

#: ../../manual/render/materials/introduction.rst:6
msgid ""
"Materials control the appearance of meshes, curves, volumes and other "
"objects. They define the substance that the object is made of, its color "
"and texture, and how light interacts with it."
msgstr "材质控制着网格，曲线，体积和其它物体的外观。它们定义了物体的组成物质，颜色，纹理，以及与光照的交互。"

#: ../../manual/render/materials/introduction.rst:10
msgid ""
"Physically based materials can be created using the :doc:`Principled BSDF"
" </render/shader_nodes/shader/principled>`, :doc:`Principled Hair "
"</render/shader_nodes/shader/hair_principled>`, and :doc:`Principled "
"Volume </render/shader_nodes/shader/volume_principled>` shaders. With "
"these uber shaders, a wide variety of materials including plastic, glass,"
" metal, cloth, skin, hair, smoke and fire can be created."
msgstr ""
"使用 :doc:`原理化BSDF </render/shader_nodes/shader/principled>` 来创建基于物理的渲染, "
":doc:`原理化毛发 </render/shader_nodes/shader/hair_principled>`, and "
":doc:`原理化体积 </render/shader_nodes/shader/volume_principled>` 着色器. "
"有了这些超级材质,可以创造出包括塑料，玻璃，金属，布料，皮肤，毛发，烟雾，火焰等各种各样的材质。"

#: ../../manual/render/materials/introduction.rst:17
msgid ""
"A flexible :doc:`shading nodes </render/shader_nodes/introduction>` "
"system is used to set up textures and create entirely different types of "
"materials like toon shading."
msgstr ""
"灵活的 :doc:`着色器节点 </render/shader_nodes/introduction>` "
"系统用于设置纹理和创造完全不同类型的例如卡通着色之类的材质。"

#: ../../manual/render/materials/introduction.rst:22
msgid "Setting up Materials"
msgstr "设置材质"

#: ../../manual/render/materials/introduction.rst:24
msgid ""
"Materials can be created in either the :doc:`Material properties "
"</editors/properties_editor>`, or in the :doc:`Shader Editor "
"</editors/shader_editor/index>`. These provide a different view of the "
"same shader nodes and material settings."
msgstr ""
"可以用 :doc:`材质属性 </editors/properties_editor>` 来创建材质, 也可以在 :doc:`着色器编辑器 "
"</editors/shader_editor/index>` 中创建材质. 两者为相同着色器节点和材质设置提供了不同的视图."

#: ../../manual/render/materials/introduction.rst:28
#, fuzzy
msgid ""
"The defaults Shading workspace has a shader editor and a 3D Viewport that"
" can be set to Material Preview or Rendered shading, to interactively "
"preview how the material interacts with objects and lights in the scene."
msgstr "默认的着色工作区包含一个着色器编辑器，和一个可以设置成LookDev或实时预览场景中物体与光照交互的渲染着色的3D视口。"

#: ../../manual/render/materials/introduction.rst:32
msgid ""
"Materials are data-blocks that can be :doc:`assigned "
"</render/materials/assignment>` to one or more objects, and different "
"materials can be assigned to different parts of meshes."
msgstr ""
"材质是可用于 :doc:`指定 </render/materials/assignment>` "
"到一个或多个物体的数据块，且网格的各个部分可以指定不同的材质。"

#: ../../manual/render/materials/introduction.rst:35
msgid ""
"Image textures can be created from scratch in :doc:`texture paint mode "
"</sculpt_paint/texture_paint/index>`, or by loading in existing images "
"with the :doc:`Image Texture node </render/shader_nodes/textures/image>`."
" A variety of :doc:`procedural texture nodes "
"</render/shader_nodes/textures/index>` is also available."
msgstr ""
"可以在 :doc:`纹理绘画模式 </sculpt_paint/texture_paint/index>` 中创建纹理图像, 或用 "
":doc:`图像纹理节点 </render/shader_nodes/textures/image>` 来加载已存在的图像. 还有丰富的 "
":doc:`程序化纹理节点 </render/shader_nodes/textures/index>` 可供使用."

#: ../../manual/render/materials/introduction.rst:41
msgid "Components"
msgstr "部件"

#: ../../manual/render/materials/introduction.rst:43
msgid ""
"Materials consist of three shaders, defining the appearance of the "
"surface, the volume inside the object, and the displacement of the "
"surface."
msgstr "材质由三部分着色器组成，包括定义表面外观，物体内部体积，以及表面的置换。"

#: ../../manual/render/materials/introduction.rst:51
msgid "Surface Shader"
msgstr "表面材质"

#: ../../manual/render/materials/introduction.rst:53
msgid ""
"The :doc:`surface shader </render/materials/components/surface>` controls"
" the textures and light interaction at the surface of the mesh."
msgstr ":doc:`表面着色器 </render/materials/components/surface>` 控制着网格表面的纹理和与光照交互的表现。"

#: ../../manual/render/materials/introduction.rst:58
msgid "Volume Shader"
msgstr "体积材质"

#: ../../manual/render/materials/introduction.rst:60
msgid ""
"The :doc:`volume shader </render/materials/components/volume>` defines "
"the interior of the mesh. A material can have just a volume shader for "
"cases like smoke and fire, or it can be combined with a surface shader "
"for materials like cloudy glass."
msgstr ""
":doc:`体积材质 </render/materials/components/volume>` "
"定义了网格内部的表现。一个材质可以是仅拥有一个体积着色器的(例如烟雾和火焰)，也可以是混合了表面着色器的(例如磨花玻璃)。"

#: ../../manual/render/materials/introduction.rst:66
msgid "Displacement"
msgstr "置换"

#: ../../manual/render/materials/introduction.rst:68
msgid ""
"The shape of the surface and the volume inside it may be altered by "
":doc:`displacement </render/materials/components/displacement>`. This "
"way, textures can then be used to make the mesh surface more detailed."
msgstr ""
"用 :doc:`置换 </render/materials/components/displacement>` "
"可以改变表面形状或内在体积。因此，纹理可以用来增加网格表面更多的细节。"

#: ../../manual/render/materials/introduction.rst:72
msgid ""
"Depending on the settings, the displacement may be virtual, only "
"modifying the surface normals to give the impression of displacement, "
"which is known as bump mapping, or a combination of real and virtual "
"displacement."
msgstr "依据设置，置换可以是虚拟的，仅修改表面的法线来营造一种类似于凹凸贴图的置换的感觉，也可以是介于真实与虚拟之间的置换。"

#: ../../manual/render/materials/introduction.rst:78
msgid "Physically Based Shading"
msgstr "基于物理的渲染"

#: ../../manual/render/materials/introduction.rst:80
msgid ""
"The material system is built with physically-based rendering in mind, "
"separating how a material looks and which rendering algorithm is used to "
"render it. This makes it easier to achieve realistic results and balanced"
" lighting, though there are a few things to keep in mind."
msgstr "此材质系统是基于物理渲染而构建的,解构了用于材质的表现各个渲染算法. 用它可以更轻松地营造逼真效果和平衡光照，但仍有一些小细节值得注意。"

#: ../../manual/render/materials/introduction.rst:85
msgid ""
"In order for materials to work well with global illumination, they should"
" be energy conserving. That means they cannot reflect more light than "
"comes in. This property is not strictly enforced, but if colors are in "
"the range 0.0 to 1.0, and :abbr:`BSDF (Bidirectional scattering "
"distribution function)`\\ s are only mixed together with the Mix Shader "
"node, this will automatically be true."
msgstr ""
"为了使全局光照更好地作用于材质，它们应该遵循能量守恒。这意味着它们反射的光不能比投射进来的光还多。此属性并没有被严格框定，如果颜色范围介于0.0和1.0之间，以及"
" :abbr:`BSDF (Bidirectional scattering distribution function)`\\ s "
"仅与混合着色器节点点混合，那将自动遵循上述原理。"

#: ../../manual/render/materials/introduction.rst:91
msgid ""
"It is however, possible to break this, with color values higher than 1.0 "
"or using the Add Shader node, but one must be careful when doing this to "
"keep materials behaving predictably under various lighting conditions."
msgstr "换言之，如果颜色数值高于1.0或者使用添相加着色器节点，将会打破原理框架。但有一条需要注意的是必须保证材质在各类光照情况中的表现可预测。"

