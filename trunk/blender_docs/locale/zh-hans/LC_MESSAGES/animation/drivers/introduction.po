# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-19 23:24+0800\n"
"PO-Revision-Date: 2019-08-19 23:33+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"X-Generator: Poedit 2.2.3\n"

#: ../../manual/animation/drivers/introduction.rst:4
msgid "Introduction"
msgstr "简介"

#: ../../manual/animation/drivers/introduction.rst:6
msgid ""
"Drivers are a way to control values of properties by means of a function, or a "
"mathematical expression."
msgstr "驱动器通过函数来控制属性值。"

#: ../../manual/animation/drivers/introduction.rst:9
msgid "Effectively, drivers consist of:"
msgstr "事实上，驱动器由以下部分组成:"

#: ../../manual/animation/drivers/introduction.rst:11
msgid ""
"A **driver configuration** that specifies zero, one, or more input values "
"using other properties or object transformation channels, and combines them "
"using a predefined mathematical function or a custom Python expression."
msgstr ""
"**驱动器配置**，指定0个，1个或多个使用其他属性或物体变换通道的输入值，并使用预"
"定义的数学函数或自定义的Python表达式将其结合在一起。"

#: ../../manual/animation/drivers/introduction.rst:14
msgid ""
"An **animation** :doc:`F-Curve </editors/graph_editor/fcurves/introduction>` "
"that maps the output of the driver configuration to the final value to apply "
"to the driven property."
msgstr ""
"**动画** :doc:`函数曲线 </editors/graph_editor/fcurves/introduction>`，将驱动配"
"置的输出映射到最终值，以应用到被驱动属性。"

#: ../../manual/animation/drivers/introduction.rst:18
msgid ""
"As an example, the rotation of Object 1 can be controlled by the scale of "
"Object 2. It is then said that the scale of Object 2 *drives* the rotation of "
"Object 1."
msgstr ""
"例如，物体1的旋转可以被物体2的位置控制。可以说，物体2的位置驱动物体1旋转。"

#: ../../manual/animation/drivers/introduction.rst:21
msgid ""
"Not only can drivers directly set the value of a property to the value of a "
"different one, they can also combine multiple values using a fixed function or "
"a Python expression and further modulate it with a manually defined curve and/"
"or a modifier stack."
msgstr ""
"驱动器不仅可以调用大多数属性值，直接映射到其他属性，而且属性也可以作为数学表达"
"式或者Python脚本的一部分，通过函数进一步调整。"

#: ../../manual/animation/drivers/introduction.rst:25
msgid ""
"Drivers are an extremely powerful tool for building rigs and are typically "
"used to drive bone transforms and the influence of shape keys, action "
"constraints and modifiers, often using custom properties as inputs."
msgstr ""
"驱动器是构建装备的极其强大的工具，通常用于驱动骨骼变换以及形状键，操作约束和影"
"响修改器，通常使用自定义属性作为输入。"

#: ../../manual/animation/drivers/introduction.rst:31
msgid "Graph View"
msgstr "曲线视图"

#: ../../manual/animation/drivers/introduction.rst:36
msgid "Driver curve in the Drivers editor."
msgstr "曲线编辑器中的驱动器范例。"

#: ../../manual/animation/drivers/introduction.rst:38
msgid ""
"The main area of the :doc:`Drivers editor </editors/drivers_editor>` shows an :"
"doc:`F-Curve </editors/graph_editor/fcurves/introduction>` that represents the "
"driver function."
msgstr ""
"如图 :doc:`驱动器编辑器 </editors/drivers_editor>` 的主界面，以及 :doc:`函数曲"
"线 </editors/graph_editor/fcurves/introduction>` 。"

#: ../../manual/animation/drivers/introduction.rst:42
msgid ""
"The **X axis** maps to the output value of the driver configuration. The units "
"depend on the setup."
msgstr "如图 **X轴** 映射驱动器的控制变量。单位取决于驱动器。"

#: ../../manual/animation/drivers/introduction.rst:44
msgid ""
"The **Y axis** shows the value applied to the target property. The units "
"depend on the property."
msgstr "而 **Y轴** 是被驱动的属性值。单位取决于物体属性。"

#: ../../manual/animation/drivers/introduction.rst:46
msgid ""
"In the example image, if the driver value is 2.0 the property value will be "
"0.5."
msgstr "在示例图中，如果控制变量为2.0，则被赋予的属性值为0.5。"

#: ../../manual/animation/drivers/introduction.rst:48
msgid ""
"The default F-curve is an identity map, i.e. the value produced by the driver "
"configuration is applied to the driven property unchanged. If the driver "
"output value is 2.0, the property will be 2.0."
msgstr ""
"默认的函数曲线，即控制变量与被控属性值相等，例如，控制变量为2.0，属性值为2.0."

#: ../../manual/animation/drivers/introduction.rst:52
msgid ""
"The driver function can be defined artistically with Bézier curve handles or "
"mathematically with trigonometric functions or polynomial expressions such as :"
"math:`y = a + bx`. Furthermore, the function can also be procedurally "
"modulated with noise or cyclic repetitions. See :doc:`Modifiers </editors/"
"graph_editor/fcurves/modifiers>` for more details."
msgstr ""
"驱动函数可以使用贝塞尔曲线的控制柄用线条定义，也可以使用多项表达式进行数学定"
"义，如 :math:`y = a + bx` 。此外，该功能还可以通过噪声或循环重复进行程序调制。"
"有关详细信息，请参阅 :doc:`修改器 </editors/graph_editor/fcurves/modifiers>` 。"

#: ../../manual/animation/drivers/introduction.rst:59
msgid "Driver Configuration"
msgstr "驱动器配置"

#: ../../manual/animation/drivers/introduction.rst:61
msgid ""
"The :doc:`Drivers panel </animation/drivers/drivers_panel>` shows the setup "
"for a driver."
msgstr "在 :doc:`驱动器面板 </animation/drivers/drivers_panel>` 中配置驱动器。"

#: ../../manual/animation/drivers/introduction.rst:63
msgid ""
"A driver can have zero, one, or more **variables**. Variables specify which "
"properties, object transformation channels, or relative distances between "
"objects, are used as inputs by the driver."
msgstr ""
"驱动器可以有零个，一个或多个 **变量** 。变量是两个物体之间的属性或者距离值。"

#: ../../manual/animation/drivers/introduction.rst:67
msgid ""
"The driver **type** determines how the variables are used. The type can be:"
msgstr "驱动器 **类型** 决定变量的使用方式。类型可以可以是："

#: ../../manual/animation/drivers/introduction.rst:69
msgid "a built-in function: for example, the sum of the variables' values, or"
msgstr "内置函数：例如，变量值的总和"

#: ../../manual/animation/drivers/introduction.rst:70
msgid ""
"a scripted expression: an arbitrary Python expression that refers to the "
"variables by their names."
msgstr ""
"脚本表达式：可以使用任何现有变量，通过自定义数学表达式或Python表达式控制。"

#: ../../manual/animation/drivers/introduction.rst:72
msgid ""
"This driver configuration outputs a single value which changes when the "
"variables change. This value is then evaluated through the driver function "
"curve to produce the result to be applied to the driven property."
msgstr ""
"驱动器输出单个值，该值在变量发生变化时变化，变量在驱动器中进行函数计算，得出被"
"驱动的属性值。"

#: ../../manual/animation/drivers/introduction.rst:78
msgid "Notes on Scripted Expressions"
msgstr "关于脚本表达式的注释"

#: ../../manual/animation/drivers/introduction.rst:80
msgid ""
"When a driver uses a *Scripted Expression*, Blender can evaluate it without "
"using the fully featured Python interpreter if it is simple enough. This means "
"that drivers are fast to evaluate with simple divisions, additions and other "
"\"simple\" expressions. The built-in functions are always evaluated natively."
msgstr ""
"当驱动器使用简单表达式时，Blender 可以将其转化为内部表达式（如果它足够简单）。"
"这意味着，即使是在复杂的场景中，使用人员也能通过简单的操作，添加其它”简单“表达"
"式快速计算。内置函数始终以内置方式快速计算。"

#: ../../manual/animation/drivers/introduction.rst:85
msgid ""
"See :ref:`Simple Expressions <drivers-simple-expressions>` for a comprehensive "
"list of expressions that can be evaluated natively."
msgstr ""
"简单表达式完整列表详见， :ref:`简单表达式 <drivers-simple-expressions>` 。"

#: ../../manual/animation/drivers/introduction.rst:88
msgid ""
"When the expression is not simple, it will be evaluated using Python. As a "
"consequence, the driver will be slower and there is a security risk if the "
"author of the Python code is unknown. This is an important thing to take into "
"consideration for heavy scenes and when sharing files with other people. See "
"also: :doc:`Auto run </advanced/scripting/security>`."
msgstr ""
"当表达式不简单时，可以用Python进行计算。因此，如果不知道Python代码的作者，则驱"
"动器将更慢且有安全风险。这在应用于复杂场景或与他人共享文件时，要格外注意。见 :"
"doc:`自动运行 </advanced/scripting/security>`。"

#~ msgid "ToDo."
#~ msgstr "ToDo."

#~ msgid "Graph Editor: Driver example."
#~ msgstr "曲线编辑器: 驱动器示例。"

#~ msgid ""
#~ "The main area of the :doc:`Graph editor </editors/graph_editor/index>` in "
#~ "Driver Mode shows a :doc:`F-Curve </editors/graph_editor/fcurves/"
#~ "introduction>` that maps the Driver Value to the target property. The "
#~ "Driver Value is the output of the driver script. The X-axis represents the "
#~ "Driver Value and the Y-axis is the value of the target property. In the "
#~ "example image, if the Driver Value is 2.0 the property will be 0.5."
#~ msgstr ""
#~ "驱动器模式下的 :doc:`曲线编辑器 </editors/graph_editor/index>` 主区域显示映"
#~ "射驱动器到目标属性的 :doc:`函数曲线 </editors/graph_editor/fcurves/"
#~ "introduction>` 。驱动值是驱动脚本的输出。横轴表示驱动值，纵轴表示目标属性。"
#~ "示例图片中，驱动值为2.0 时，目标属性值为0.5。"

#~ msgid "All from Target (properties icon)"
#~ msgstr "全部来自目标 (属性图标)"

#~ msgid ""
#~ "This will add drivers to the set of properties used as a destination. It "
#~ "creates a default curve with keyframes at (0, 0) and (1, 1), For example, "
#~ "it will add drivers to X, Y, and Z for Location."
#~ msgstr ""
#~ "该选项将一组属性作为目标添加驱动器。默认将创建一条通过(0, 0) 和 (1, 1)的函数"
#~ "曲线。比如，对位移的X, Y和Z同时添加驱动器。"

#~ msgid "Single from Target"
#~ msgstr "单个来自目标"

#~ msgid ""
#~ "This will add a single driver to the selected property used as a "
#~ "destination."
#~ msgstr "仅为选中属性添加驱动器。"

#~ msgid "Match Indices (color wheel icon)"
#~ msgstr "匹配索引 (调色盘图标)"

#~ msgid ""
#~ "Use the corresponding index to drive the corresponding property on a "
#~ "similar sized vector/array property. This is useful for driving ``ob1."
#~ "location`` with ``ob2.location``, or ``RGB color`` with ``XYZ location``."
#~ msgstr ""
#~ "对向量/数组属性，使用对应下标的属性驱动目标属性。对于使用 ``ob2.location`` "
#~ "驱动 ``ob1.location``, 或者 ``XYZ位移`` 驱动 ``RGB颜色`` 。"

#~ msgid "Manually Create Later/(Single) (hand icon)"
#~ msgstr "稍后自动创建/(单个) (手掌图标)"

#~ msgid ""
#~ "The source/target (input) property can then be selected with an :ref:`ui-"
#~ "eye-dropper` (e.g. \"Scale Y\")."
#~ msgstr ""
#~ "源/目标 (输入) 可以稍后使用 :ref:`ui-eye-dropper` (比如 \"Scale Y\")选择。"

#~ msgid ""
#~ "Due to the way that Blender's UI Context works, you'll need *two* "
#~ "Properties editor instances open (and to have pinned one of the two to show "
#~ "the properties for the unselected object). This is necessary as the UI "
#~ "cannot be manipulated while using eyedroppers to pick data. Therefore, you "
#~ "need to be able to see both the source and the destination properties when "
#~ "using the eyedropper."
#~ msgstr ""
#~ "由于Blender界面工作方式的缘故，用户需要打开 *两个* 属性编辑器(并且钉住其中一"
#~ "个，以显示非选中物体的属性)。由于使用吸管工具选择数据的时候无法操作UI，只能"
#~ "这样做。因此，使用吸管工具时必须可以同时看到源属性和目标属性。"

#~ msgid "Editor"
#~ msgstr "编辑器"

#~ msgid "Graph editor"
#~ msgstr "曲线编辑器"

#~ msgid "Mode"
#~ msgstr "模式"

#~ msgid "Drivers"
#~ msgstr "驱动器"

#~ msgid "Panel"
#~ msgstr "面板"

#~ msgid ""
#~ ":menuselection:`Sidebar region --> Driver --> Drivers --> Remove Driver`"
#~ msgstr ":menuselection:`侧栏 --> 驱动 --> 驱动器 --> 移除驱动器`"

#~ msgid "ToDo add."
#~ msgstr "ToDo add."

#~ msgid ""
#~ "Drivers are small scripts with the purpose of controlling properties with "
#~ "other properties. For example, the rotation of one object can be controlled "
#~ "by the location of another object."
#~ msgstr ""
#~ "驱动器即脚本，主要目的是以属性控制其他属性。例如，可以用一个物体的位置控制另"
#~ "一个物体的旋转。"

#~ msgid ":doc:`Auto run </advanced/scripting/security>`"
#~ msgstr ":doc:`自动运行 </advanced/scripting/security>`"

#~ msgid "Adding & Removing"
#~ msgstr "添加 & 删除"

#~ msgid ""
#~ "There are some different ways to add drivers in Blender. After adding "
#~ "drivers they are usually modified in the *Graph Editor* with the mode set "
#~ "to *Drivers*, or via a simplified *Edit Driver* popover invoked from the "
#~ "property context menu."
#~ msgstr ""
#~ "在Blender中添加驱动器有几种不同方式。添加驱动器后，通常到 *曲线编辑器* 中的 "
#~ "*驱动器* 模式下进行修改。"

#~ msgid "Add Driver"
#~ msgstr "驱动器"

#~ msgid "Reference"
#~ msgstr "参考"

#~ msgid "Menu"
#~ msgstr "菜单"

#~ msgid ":menuselection:`Context menu --> Add Driver`"
#~ msgstr ":menuselection:`上下文菜单 --> 添加驱动器`"

#~ msgid "Hotkey"
#~ msgstr "快捷键"

#~ msgid ":kbd:`Ctrl-D`"
#~ msgstr ":kbd:`Ctrl-D`"

#~ msgid ""
#~ "The common way to add a driver to a property is to :kbd:`RMB` click a "
#~ "property, then add a driver via the context menu. Drivers can also be added "
#~ "by pressing :kbd:`Ctrl-D` with the mouse over the property set."
#~ msgstr ""
#~ "添加驱动器的常规方式是在属性上方 :kbd:`RMB` 单击，然后通过弹出的上下文菜单添"
#~ "加驱动器。还可以在将鼠标移到属性上方，按下 :kbd:`Ctrl-D` 添加驱动器。被选中"
#~ "的属性将成为驱动目标 (输出)。"

#~ msgid ""
#~ "This operation adds a driver with a single variable (but not filled in), "
#~ "and displays the *Edit Driver* popover."
#~ msgstr "添加1个/组驱动器，分别使用一个变量(空值)驱动。不会出现吸管工具。"

#~ msgid "Edit Driver"
#~ msgstr "驱动器"

#~ msgid ":menuselection:`Context menu --> Edit Driver`"
#~ msgstr ":menuselection:`上下文菜单 --> 添加驱动器`"

#~ msgid ":menuselection:`Context menu --> Open Drivers Editor`"
#~ msgstr ":menuselection:`上下文菜单 --> 复制/粘贴驱动器`"

#~ msgid "Copy & Paste"
#~ msgstr "复制 & 粘贴"

#~ msgid ":menuselection:`Context menu --> Copy/Paste Driver`"
#~ msgstr ":menuselection:`上下文菜单 --> 复制/粘贴驱动器`"

#~ msgid ""
#~ "Drivers can be copied and pasted in the UI, via the context menu. When "
#~ "adding drivers with the same settings, this can save time modifying "
#~ "settings."
#~ msgstr ""
#~ "通过上下文菜单，可以直接在界面上复制和粘贴驱动器。当添加相同设置的驱动器时，"
#~ "该操作可以节约修改设置的时间。"

#~ msgid "Expression"
#~ msgstr "表达式"

#~ msgid ""
#~ "This is a quick way to add drivers with a scripted expression. First click "
#~ "the property you want to add a driver to, then add a hash ``#`` and a "
#~ "scripted expression."
#~ msgstr ""
#~ "使用脚本表达式添加驱动是一种快捷的方法。首先单击想要添加驱动的目标属性，然后"
#~ "输入井号 ``#`` 和表达式。"

#~ msgid "Some examples:"
#~ msgstr "一些例子:"

#~ msgid "``#frame``"
#~ msgstr "``#frame``"

#~ msgid "``#frame / 20.0``"
#~ msgstr "``#frame / 20.0``"

#~ msgid "``#sin(frame)``"
#~ msgstr "``#sin(frame)``"

#~ msgid "``#cos(frame)``"
#~ msgstr "``#cos(frame)``"

#~ msgid "Removing Drivers"
#~ msgstr "移除驱动器"

#~ msgid ":menuselection:`Context menu --> Delete (Single) Driver(s)`"
#~ msgstr ":menuselection:`上下文菜单 --> 删除驱动器`"

#~ msgid ":kbd:`Ctrl-Alt-D`"
#~ msgstr ":kbd:`Ctrl-Alt-D`"

#~ msgid ""
#~ "The main area of the :doc:`Graph editor </editors/graph_editor/index>` in "
#~ "Driver Mode shows an :doc:`F-Curve </editors/graph_editor/fcurves/"
#~ "introduction>` that maps the Driver Value to the target property. The "
#~ "Driver Value is the output of the driver script. The X axis represents the "
#~ "Driver Value and the Y axis is the value of the target property. In the "
#~ "example image, if the Driver Value is 2.0 the property will be 0.5."
#~ msgstr ""
#~ "驱动器模式下的 :doc:`曲线编辑器 </editors/graph_editor/index>` 主区域显示的"
#~ "是一条 :doc:`函数曲线 </editors/graph_editor/fcurves/introduction>` ，将驱动"
#~ "值映射至目标属性。驱动值是驱动器脚本的输出。横轴表示驱动值，纵轴是目标属性"
#~ "植。在上例的图片中，如果驱动值为2.0，属性值将为0.5。"

#~ msgid ""
#~ "The default F-curve is an identity map i.e. the value is not changed. It "
#~ "can be used to create corrective drivers."
#~ msgstr "默认的函数曲线是等值映射，即数值不变。可用于矫正驱动器。"
