# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-17 01:57+0200\n"
"PO-Revision-Date: 2018-04-23 21:26+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"X-Generator: Poedit 2.0.6\n"

#: ../../manual/animation/drivers/workflow_examples.rst:4
msgid "Workflow & Examples"
msgstr "工作流程 & 范例"

#: ../../manual/animation/drivers/workflow_examples.rst:6
msgid "These are some driver examples and workflow."
msgstr "这里有几个驱动器范例和工作流程。"

#: ../../manual/animation/drivers/workflow_examples.rst:10
msgid "Workflow"
msgstr "工作流程"

#: ../../manual/animation/drivers/workflow_examples.rst:13
msgid "Transform Driver"
msgstr "变换驱动器"

#: ../../manual/animation/drivers/workflow_examples.rst:15
msgid ""
"This example shows you how setup a transform driver. First make sure you are in the Front Ortho "
"view. :kbd:`Numpad5`, :kbd:`Numpad1`."
msgstr ""
"这个例子展示了如何建立一个变换驱动器。首先确保你用的是正交前视图。 :kbd:`Numpad5`, :kbd:"
"`Numpad1`."

#: ../../manual/animation/drivers/workflow_examples.rst:18
msgid ""
"In object mode, select then duplicate the default Cube. :kbd:`Shift-D`. Move \"Cube.001\" to a "
"new location."
msgstr "在物体模式，选择并复制默认立方体。 :kbd:`Shift-D` ，将 \"Cube.001\" 移到一边。"

#: ../../manual/animation/drivers/workflow_examples.rst:19
msgid "With \"Cube.001\" selected, add a single driver to the *Rotation Y* property."
msgstr "选中 \"Cube.001\" ，对 *旋转 Y* 属性添加单个驱动器。"

#: ../../manual/animation/drivers/workflow_examples.rst:20
msgid "Open the *Graph Editor*, set the Mode to *Drivers*."
msgstr "打开 *曲线编辑器* ，设置模式为 *驱动器*。"

#: ../../manual/animation/drivers/workflow_examples.rst:21
msgid "*Show Only Selected* is useful disabled for drivers, marked green in the picture."
msgstr "禁用图中绿框标记的 *仅显示选中* 按钮。"

#: ../../manual/animation/drivers/workflow_examples.rst:22
msgid "In the channels region, select the *Y Euler Rotation* property."
msgstr "在通道区域，选择 *Y欧拉旋转* 属性。"

#: ../../manual/animation/drivers/workflow_examples.rst:23
msgid "Press :kbd:`N` to open the properties region, scroll down to Drivers panel."
msgstr "按下 :kbd:`N` 打开属性区块，向下滚动到驱动器面板。"

#: ../../manual/animation/drivers/workflow_examples.rst:24
msgid ""
"Change the *Type* to *Averaged Value*, this will return the averaged value of the driver "
"variables."
msgstr "修改 *类型* 为 *平均化值* ，这将返回所有驱动器变量的平均值。"

#: ../../manual/animation/drivers/workflow_examples.rst:25
msgid "Modify the driver variable settings:"
msgstr "修改驱动器变量设置："

#: ../../manual/animation/drivers/workflow_examples.rst:27
msgid "Type -- Transform Channel"
msgstr "类型 -- 变换"

#: ../../manual/animation/drivers/workflow_examples.rst:28
msgid "Ob/Bone -- Cube"
msgstr "物体 -- Cube"

#: ../../manual/animation/drivers/workflow_examples.rst:29
msgid "Transform Type -- X Location"
msgstr "变换类型 -- X 位移"

#: ../../manual/animation/drivers/workflow_examples.rst:30
msgid "Transform Space -- World Space"
msgstr "变换空间 -- 世界空间"

#: ../../manual/animation/drivers/workflow_examples.rst:38
msgid ""
"When finished, \"Cube.001\" should rotate on the Y axis when moving \"Cube\" left to right."
msgstr "结束之后，从左向右移动 \"Cube\"时，\"Cube.001\" 会绕Y轴旋转。"

#: ../../manual/animation/drivers/workflow_examples.rst:42
msgid "Examples"
msgstr "范例"

#: ../../manual/animation/drivers/workflow_examples.rst:45
msgid "Driver Expression"
msgstr "驱动器表达式"

#: ../../manual/animation/drivers/workflow_examples.rst:47
msgid "Here are some examples using the scripted expression Expr to set the Driver Value."
msgstr "这里是一些使用脚本表达式设置驱动器值的范例。"

#: ../../manual/animation/drivers/workflow_examples.rst:51
msgid "Object rotation example."
msgstr "物体旋转。"

#: ../../manual/animation/drivers/workflow_examples.rst:55
msgid "Orbit a Point"
msgstr "环绕一个点"

#: ../../manual/animation/drivers/workflow_examples.rst:57
msgid "Here two drivers have been added to the Cube, X Location and Y Location."
msgstr "这里对立方体的X位移和Y位移分别添加驱动器。"

#: ../../manual/animation/drivers/workflow_examples.rst:59
msgid "The scripted expressions are being used to set the object location."
msgstr "使用脚本表达式设置物体位置。"

#: ../../manual/animation/drivers/workflow_examples.rst:65
msgid "X Location Expr"
msgstr "X位移表达式"

#: ../../manual/animation/drivers/workflow_examples.rst:65
msgid "``0 + (sin(frame / 8) * 4)``"
msgstr "``0 + (sin(frame / 8) * 4)``"

#: ../../manual/animation/drivers/workflow_examples.rst:63
msgid ""
"``(frame/8)`` : is the current frame of the animation, divided by 8 to slow the orbit down. "
"``(sin( )*4)`` : This returns the sine of (frame/8), then multiplies by 4 for a bigger circle. "
"``0 +`` : is used to control the X Location offset of the orbit."
msgstr ""
"``(frame/8)`` : 表示当前动画帧除以8，降低环绕速度。 ``(sin( )*4)`` : 返回 (frame/8)的正弦值，再"
"乘以4，放大环绕半径。 ``0 +`` : 用于控制环绕时 X 位移偏移量。"

#: ../../manual/animation/drivers/workflow_examples.rst:71
msgid "Y Location Expr"
msgstr "Y位移表达式"

#: ../../manual/animation/drivers/workflow_examples.rst:71
msgid "``0 + (cos(frame / 8) * 4)``"
msgstr "``0 + (cos(frame / 8) * 4)``"

#: ../../manual/animation/drivers/workflow_examples.rst:69
msgid ""
"``(frame / 8)`` : is the current frame of the animation, divided by 8 to slow the orbit down. "
"``(cos( ) * 4)`` : This returns the cosine of (frame/8), then multiplies by 4 for a bigger "
"circle. ``0 +`` : is used to control the Y Location offset of the orbit."
msgstr ""
"``(frame/8)`` : 表示当前动画帧除以8，降低环绕速度。 ``(cos( )*4)`` : 返回 (frame/8)的余弦值，再"
"乘以4，放大环绕半径。 ``0 +`` : 用于控制环绕时 Y 位移偏移量。"

#: ../../manual/animation/drivers/workflow_examples.rst:73
msgid "``frame`` is the same as bpy.context.scene.frame_current."
msgstr "``frame`` 与 bpy.context.scene.frame_current 等价。"

#: ../../manual/animation/drivers/workflow_examples.rst:77
msgid "Driver Namespace"
msgstr "驱动器命名空间"

#: ../../manual/animation/drivers/workflow_examples.rst:79
msgid ""
"There is a list of built-in driver functions and properties. These can be displayed via the "
"Python Console:"
msgstr "内置的驱动器函数和属性是一个列表。可以使用Python控制台显示出来:"

#: ../../manual/animation/drivers/workflow_examples.rst:104
msgid ""
"This script will add a function to the driver namespace, which can then be used in the "
"expression ``driver_func(frame)``"
msgstr ""
"下面的脚本用于添加一个函数到驱动器命名空间，接下来可以在表达式中使用 ``driver_func(frame)``"

#: ../../manual/animation/drivers/workflow_examples.rst:119
msgid "Shape Key Driver"
msgstr "形态键驱动器"

#: ../../manual/animation/drivers/workflow_examples.rst:121
msgid "This example is a shape key driver. The driver was added to the shape key Value."
msgstr "这是一个形态键驱动器的范例，即对形态键数值添加驱动器。"

#: ../../manual/animation/drivers/workflow_examples.rst:126
msgid "Shape key driver example."
msgstr "形态键驱动器。"

#: ../../manual/animation/drivers/workflow_examples.rst:128
msgid ""
"This example uses the Armature Bone \"b\" 's Z Rotation to control the Value of a Shape Key. "
"The bone rotation mode is set to XYZ Euler."
msgstr "该例子使用骨架的骨骼 \"b\" 的Z旋转控制形态键数值。骨骼旋转模式设置为XYZ欧拉。"

#: ../../manual/animation/drivers/workflow_examples.rst:131
msgid "The Driver F-Curve is mapped like so:"
msgstr "驱动器函数曲线映射如下："

#: ../../manual/animation/drivers/workflow_examples.rst:133
msgid "Bone Z Rotation 0.0 (0.0): Shape Key value 0.0"
msgstr "骨骼Z旋转 0.0 (0.0): 形态键数值 0.0"

#: ../../manual/animation/drivers/workflow_examples.rst:134
msgid "Bone Z Rotation -2.09 (-120.0): Shape Key value 1.0"
msgstr "骨骼Z旋转 -2.09 (-120.0): 形态键数值 1.0"

#: ../../manual/animation/drivers/workflow_examples.rst:136
msgid "This kind of driver can also be setup with the Variable Type Rotational Difference."
msgstr "这种类型的驱动器还可以使用旋转差值变量类型设置。"

#: ../../manual/animation/drivers/workflow_examples.rst:138
msgid "See :doc:`Shape Keys </animation/shape_keys/index>` for more info."
msgstr "更多信息参考 :doc:`形态键 </animation/shape_keys/index>` 。"

#: ../../manual/animation/drivers/workflow_examples.rst:142
msgid "Drivers and Multiple Relative Shape Keys"
msgstr "驱动器和多重相关形态键"

#: ../../manual/animation/drivers/workflow_examples.rst:144
msgid ""
"The following screenshots illustrate combining shape keys, bones, and drivers to make multiple "
"chained relative shape keys sharing a single root. While it lacks the convenience of the single "
"Evaluation Time of an absolute shape key, it allows you to have more complex relationships "
"between your shape keys."
msgstr ""
"下面的屏幕截图展示了结合形态键，骨骼和驱动器，来制作共用基型的多重链状相关形态键。尽管这样没有使"
"用绝对形态键的单一时间计算来的方便，但却可以做出更复杂的形态键关系。"

#: ../../manual/animation/drivers/workflow_examples.rst:154
msgid "Basis shape key."
msgstr "Basis 形态键。"

#: ../../manual/animation/drivers/workflow_examples.rst:159
msgid "Key1 shape key."
msgstr "Key1 形态键。"

#: ../../manual/animation/drivers/workflow_examples.rst:164
msgid "Key2A shape key."
msgstr "Key2A 形态键。"

#: ../../manual/animation/drivers/workflow_examples.rst:169
msgid "Key2B shape key."
msgstr "Key2B 形态键。"

#: ../../manual/animation/drivers/workflow_examples.rst:171
msgid ""
"The Basis shape key has the stacks fully retracted. Key1 has the base fully extended. Key2A has "
"the left stack fully extended. Key2B has the right stack fully extended. Key2A and Key2B are "
"both relative to Key1 (as you can see in the field in the bottom right of the Shape Keys panel)."
msgstr ""
"作为基型的形态键的挤出面完全缩回，Key1的基底完全挤出，Key2A挤出左侧凸起，Key2B挤出右侧凸起。"
"Key2A和2B都和Key1相关(如右下角的形态键面板所见)。"

#: ../../manual/animation/drivers/workflow_examples.rst:181
msgid "Key1 must handle conflicting values from the two bones."
msgstr "Key1需要处理来自两个骨骼的数值冲突。"

#: ../../manual/animation/drivers/workflow_examples.rst:186
msgid ""
"Key2A has different generator coefficients so it is activated in a different range of the "
"bone's position."
msgstr "Key2A有不同的生成器系数，所以会在骨骼的另外一段位置范围内才被激活。"

#: ../../manual/animation/drivers/workflow_examples.rst:191
msgid "Key2B is the same as Key2A, but is controlled by the second bone."
msgstr "Key2B和Key2A类似，但是被第二根骨骼控制。"

#: ../../manual/animation/drivers/workflow_examples.rst:193
msgid ""
"The value of Key1 is bound to the position of bones by a driver with two variables. Each "
"variable uses the world Z coordinate of a bone and uses the maximum value to determine how much "
"the base should be extended. The generator polynomial is crafted such that the top of the "
"dominant stack should line up with the bone for that stack."
msgstr ""
"Key1的值通过一个包含两个变量的驱动器，与两个骨骼的位置属性绑定。每一个变量使用的都是骨骼的全局Z"
"坐标，然后取最大值决定基底的挤出量。多项式生成器用于使基底的上表面与骨骼对齐。"

#: ../../manual/animation/drivers/workflow_examples.rst:199
msgid ""
"The value of Key2A is bound to the position of \"Bone.L\". Its generator parameters are crafted "
"such that when Key1's value reaches 1, the value of Key2A starts increasing beyond zero. In "
"this way, the top of the left stack will move with bone.L (mostly)."
msgstr ""
"Key2A的值与 ``Bone.L`` 的位置绑定。生成器的参数使得当Key1的值增加到1时，Key2A 才开始从0增长。这"
"样的话，左侧凸起顶部会与 bone.L 一起移动(基本上)。"

#: ../../manual/animation/drivers/workflow_examples.rst:204
msgid ""
"The value of Key2B is bound to the position of \"Bone.R\". Its generator parameters are similar "
"to Key2A so that the top of the right stack will move with bone.R (mostly)."
msgstr ""
"Key2B的值与 ``Bone.R`` 的位置绑定。它的生成参数和Key2A类似，右边的凸起会随着bone.R一起移动(基本"
"上)。"

#: ../../manual/animation/drivers/workflow_examples.rst:213
msgid "When both bones are low, Key2B and Key2A are deactivated and Key1 is at low influence."
msgstr "当骨骼所有骨骼调低时，Key2B 和 Key2A 不被激活，Key1处于低影响。"

#: ../../manual/animation/drivers/workflow_examples.rst:218
msgid "Extended."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:220
msgid ""
"Since it is quite easy for bone.L and bone.R to be in positions that indicate conflicting "
"values for Key1 there will be times when the bones do not line up with the tops of their "
"respective stacks. If the driver for Key1 was to use Average or Minimum instead of Maximum to "
"determine the value of the shape key then \"conflicts\" between bone.L and bone.R would be "
"resolved differently. You will choose according to the needs of your animation."
msgstr ""
"由于bone.L 和 bone.R很容易出现位置差异，这意味着Key1的值会导致冲突，有时骨骼无法与对应的凸起对"
"齐。如果Key1的驱动器使用平均值或最小值，而非最大值，来确定形变键的值， bone.L 和 bone.R 的“冲"
"突”则会断然不同。用户可以视动画需求进行选择。"

#~ msgid "Shape Key Driver. Click to enlarge."
#~ msgstr "形态键驱动器。单击放大。"
