# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-17 17:01+1000\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/render/cycles/gpu_rendering.rst:4
msgid "GPU Rendering"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:7
msgid "Introduction"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:9
msgid ""
":abbr:`GPU (Graphics Processing Unit)` rendering makes it possible to use"
" your graphics card for rendering, instead of the CPU. This can speed up "
"rendering, because modern GPUs are designed to do quite a lot of number "
"crunching. On the other hand, they also have some limitations in "
"rendering complex scenes, due to more limited memory, and issues with "
"interactivity when using the same graphics card for display and "
"rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:17
msgid "Configuration"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:19
msgid ""
"To enable GPU rendering, go into the Preferences, and under the System "
"tab, select the Compute Device(s) to use. Next, for each scene, you can "
"configure to use CPU or GPU rendering in the Render properties."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:23
msgid ""
"In case of problems, be sure to install the graphics drivers from the "
"NVIDIA or AMD website, or through the package manager on Linux."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:28
msgid "NVIDIA CUDA"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:30
msgid ""
"NVIDIA :abbr:`CUDA (Compute Unified Device Architecture)` is supported "
"for GPU rendering with *NVIDIA* graphics cards. We support graphics cards"
" with compute capability 3.0 and higher. See the `list of NVIDIA graphics"
" cards <https://developer.nvidia.com/cuda-gpus>`__ with compute "
"capabilities."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:37
msgid "AMD OpenCL"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:39
msgid ""
":abbr:`OpenCL (Open Computing Language)` is supported for GPU rendering "
"with *AMD* graphics cards, with :abbr:`GCN (Graphics Core Next)` "
"architecture 2.0 and above. To make sure your GPU is supported checkout "
"`this Wikipedia page "
"<https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units>`__."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:44
msgid "AMD GPU rendering is supported on Windows and Linux, but not on macOS."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:48
msgid "Supported Features and Limitations"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:50
msgid "GPU rendering supports all the same features as CPU rendering, except two:"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:52
msgid "Open Shading Language."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:53
msgid "Advanced volume light sampling to reduce noise."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:57
msgid "Frequently Asked Questions"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:60
msgid "Why is Blender unresponsive during rendering?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:62
msgid ""
"While a graphics card is rendering, it cannot redraw the user interface, "
"which makes Blender unresponsive. We attempt to avoid this problem by "
"giving back control over the GPU as often as possible, but a completely "
"smooth interaction cannot be guaranteed, especially on heavy scenes. This"
" is a limitation of graphics cards for which no true solution exists, "
"though we might be able to improve this somewhat in the future."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:68
msgid ""
"If possible, it is best to install more than one GPU, using one for "
"display and the other(s) for rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:73
msgid "Why does a scene that renders on the CPU not render on the GPU?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:75
msgid ""
"There maybe be multiple causes, but the most common is that there is not "
"enough memory on your graphics card. We can currently only render scenes "
"that fit in graphics card memory, and this is usually smaller than that "
"of the CPU. Note that, for example, 8k, 4k, 2k and 1k image textures take"
" up respectively 256MB, 64MB, 16MB and 4MB of memory."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:81
msgid ""
"We do intend to add a system to support scenes bigger than GPU memory, "
"but this will not be added soon."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:86
msgid "Can multiple GPUs be used for rendering?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:88
msgid ""
"Yes, go to :menuselection:`Preferences --> System --> Compute Device "
"Panel`, and configure it as you desire."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:92
msgid "Would multiple GPUs increase available memory?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:94
msgid "No, each GPU can only access its own memory."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:98
msgid "What renders faster, NVIDIA or AMD, CUDA or OpenCL?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:100
msgid ""
"Currently NVIDIA with CUDA is rendering fastest, but this really depends "
"on the hardware you buy. Currently, CUDA and OpenCL are about the same in"
" the newest mid-range GPUs. However, CUDA is fastest in the respect of "
"high-end GPUs."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:106
msgid "Error Messages"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:109
msgid "Unsupported GNU version! gcc 4.7 and up are not supported!"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:111
msgid ""
"On Linux, depending on your GCC version you might get this error. There "
"are two possible solutions:"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:124
msgid "Use an alternate compiler"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:114
msgid ""
"If you have an older GCC installed that is compatible with the installed "
"CUDA toolkit version, then you can use it instead of the default "
"compiler. This is done by setting the ``CYCLES_CUDA_EXTRA_CFLAGS`` "
"environment variable when starting Blender."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:118
msgid "Launch Blender from the command line as follows:"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:124
msgid "(Substitute the name or path of the compatible GCC compiler)."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:132
msgid "Remove compatibility checks"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:127
msgid ""
"If the above is unsuccessful, delete the following line in "
"``/usr/local/cuda/include/host_config.h``"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:134
msgid ""
"This will allow Cycles to successfully compile the CUDA rendering kernel "
"the first time it attempts to use your GPU for rendering. Once the kernel"
" is built successfully, you can launch Blender as you normally would and "
"the CUDA kernel will still be used for rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:140
msgid "CUDA Error: Invalid kernel image"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:142
msgid ""
"If you get this error on Windows 64-bit, be sure to use the 64-bit build "
"of Blender, not the 32-bit version."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:147
msgid "CUDA Error: Kernel compilation failed"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:149
msgid ""
"This error may happen if you have a new NVIDIA graphics card that is not "
"yet supported by the Blender version and CUDA toolkit you have installed."
" In this case Blender may try to dynamically build a kernel for your "
"graphics card and fail."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:153
msgid "In this case you can:"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:155
msgid ""
"Check if the latest Blender version (official or `experimental builds "
"<https://builder.blender.org/download/experimental/>`__) supports your "
"graphics card."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:158
msgid ""
"If you build Blender yourself, try to download and install a newer CUDA "
"developer toolkit."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:160
msgid ""
"Normally users do not need to install the CUDA toolkit as Blender comes "
"with precompiled kernels."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:164
msgid "CUDA Error: Out of memory"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:166
msgid ""
"This usually means there is not enough memory to store the scene on the "
"GPU. We can currently only render scenes that fit in graphics card "
"memory, and this is usually smaller than that of the CPU. See above for "
"more details."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:172
msgid "The NVIDIA OpenGL driver lost connection with the display driver"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:174
msgid ""
"If a GPU is used for both display and rendering, Windows has a limit on "
"the time the GPU can do render computations. If you have a particularly "
"heavy scene, Cycles can take up too much GPU time. Reducing Tile Size in "
"the Performance panel may alleviate the issue, but the only real solution"
" is to use separate graphics cards for display and rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:180
msgid ""
"Another solution can be to increase the time-out, although this will make"
" the user interface less responsive when rendering heavy scenes. `Learn "
"More Here <https://msdn.microsoft.com/en-"
"us/Library/Windows/Hardware/ff570087%28v=vs.85%29.aspx>`__."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:186
msgid "CUDA error: Unknown error in cuCtxSynchronize()"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:188
msgid ""
"An unknown error can have many causes, but one possibility is that it is "
"a time-out. See the above answer for solutions."
msgstr ""

#~ msgid ""
#~ ":abbr:`OpenCL (Open Computing Language)` is"
#~ " supported for GPU rendering with "
#~ "*AMD* graphics cards. We only support"
#~ " graphics cards with :abbr:`GCN (Graphics"
#~ " Core Next)` architecture (HD 7xxx "
#~ "and above). Not all HD 7xxx cards"
#~ " are GCN cards though, you can "
#~ "check if your card is `here "
#~ "<https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units>`__."
#~ msgstr ""

#~ msgid ""
#~ "Currently Nvidia with CUDA is rendering"
#~ " faster. There is no fundamental "
#~ "reason why this should be so, "
#~ "because we do not use any CUDA "
#~ "specific features, but the compiler "
#~ "appears to be more mature, and can"
#~ " better support big kernels. OpenCL "
#~ "support is still in an early stage"
#~ " and has not been optimized as "
#~ "much."
#~ msgstr ""

#~ msgid ""
#~ ":abbr:`OpenCL (Open Computing Language)` is"
#~ " supported for GPU rendering with "
#~ "*AMD* graphics cards. We only support"
#~ " graphics cards with :abbr:`GCN (Graphics"
#~ " Core Next)` architecture 2.0 and "
#~ "above). To make sure your GPU is"
#~ " supported checkout `this Wikipedia page"
#~ " "
#~ "<https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check if the latest Blender version "
#~ "(official or `experimental builds "
#~ "<https://builder.blender.org/download/experimental/>`_) supports"
#~ " your graphics card."
#~ msgstr ""

#~ msgid ""
#~ "Currently Nvidia with CUDA is rendering"
#~ " fastest, but this really depends on"
#~ " the hardware you buy. Currently, "
#~ "CUDA and OpenCL are about the same"
#~ " in the newest mid range GPUs. "
#~ "However, CUDA is fastest in the "
#~ "respect of high end GPUs."
#~ msgstr ""

#~ msgid ""
#~ "Another solution can be to increase "
#~ "the timeout, although this will make "
#~ "the user interface less responsive when"
#~ " rendering heavy scenes. `Learn More "
#~ "Here <https://msdn.microsoft.com/en-"
#~ "us/Library/Windows/Hardware/ff570087%28v=vs.85%29.aspx>`__."
#~ msgstr ""

#~ msgid ""
#~ "An unknown error can have many "
#~ "causes, but one possibility is that "
#~ "it is a timeout. See the above "
#~ "answer for solutions."
#~ msgstr ""

#~ msgid ""
#~ "Nvidia :abbr:`CUDA (Compute Unified Device "
#~ "Architecture)` is supported for GPU "
#~ "rendering with *Nvidia* graphics cards. "
#~ "We support graphics cards starting from"
#~ " GTX 4xx (computing capability 2.0)."
#~ msgstr ""

#~ msgid "On Linux, depending on your GCC version you might get this error."
#~ msgstr ""

#~ msgid ""
#~ "If so, delete the following line "
#~ "in ``/usr/local/cuda/include/host_config.h``"
#~ msgstr ""

#~ msgid ""
#~ "Nvidia :abbr:`CUDA (Compute Unified Device "
#~ "Architecture)` is supported for GPU "
#~ "rendering with *Nvidia* graphics cards. "
#~ "We support graphics cards starting from"
#~ " GTX 4xx (computing capability from "
#~ "2.0 to 6.1)."
#~ msgstr ""

#~ msgid "CUDA limitations:"
#~ msgstr ""

#~ msgid ""
#~ "The maximum amount of individual "
#~ "textures is limited to 88 byte-"
#~ "image textures (``PNG``, ``JPEG``, ..) "
#~ "and 5 float-image textures (``OpenEXR``,"
#~ " 16 bit ``TIFF``, ..) on GTX "
#~ "4xx/5xx cards. Newer cards do not "
#~ "have this limit."
#~ msgstr ""

#~ msgid ""
#~ "Nvidia :abbr:`CUDA (Compute Unified Device "
#~ "Architecture)` is supported for GPU "
#~ "rendering with *Nvidia* graphics cards. "
#~ "We support graphics cards starting from"
#~ " GTX 6xx (computing capability from "
#~ "3.0 to 6.1)."
#~ msgstr ""

#~ msgid ""
#~ "`List of CUDA cards with shader "
#~ "model <https://developer.nvidia.com/cuda-gpus>`__."
#~ msgstr ""

#~ msgid ""
#~ "To enable GPU rendering, go into "
#~ "the User Preferences, and under the "
#~ "System tab, select the Compute Device(s)"
#~ " to use. Next, for each scene, "
#~ "you can configure to use CPU or"
#~ " GPU rendering in the Render "
#~ "properties."
#~ msgstr ""

#~ msgid ""
#~ "For an overview of supported features,"
#~ " check the comparison in the "
#~ ":doc:`Features </render/cycles/features>`."
#~ msgstr ""

#~ msgid ""
#~ "Yes, go to :menuselection:`User Preferences"
#~ " --> System --> Compute Device "
#~ "Panel`, and configure it as you "
#~ "desire."
#~ msgstr ""

#~ msgid ""
#~ "For an overview of supported features,"
#~ " check the comparison in the "
#~ ":doc:`Features </render/engines/cycles/features>`."
#~ msgstr ""

#~ msgid ""
#~ "Cycles has two GPU rendering modes: "
#~ "*CUDA*, which is the preferred method"
#~ " for Nvidia graphics cards; and "
#~ "*OpenCL*, which supports rendering on "
#~ "AMD graphics cards."
#~ msgstr ""

#~ msgid "CUDA"
#~ msgstr ""

#~ msgid ""
#~ "Nvidia :abbr:`CUDA (Compute Unified Device "
#~ "Architecture)` is supported for GPU "
#~ "rendering with *Nvidia* graphics cards. "
#~ "We support graphics cards with compute"
#~ " capability 3.0 and higher. See the"
#~ " `list of Nvidia graphics cards "
#~ "<https://developer.nvidia.com/cuda-gpus>`__ with "
#~ "compute capabilities."
#~ msgstr ""

#~ msgid ""
#~ "Cycles requires recent Nvidia drivers to"
#~ " be installed, on all operating "
#~ "systems."
#~ msgstr ""

#~ msgid "OpenCL"
#~ msgstr ""

#~ msgid ""
#~ ":abbr:`OpenCL (Open Computing Language)` is"
#~ " supported for GPU rendering with "
#~ "*AMD* graphics cards. (We only support"
#~ " graphics cards with :abbr:`GCN (Graphics"
#~ " Core Next)` architecture 2.0 and "
#~ "above). To make sure your GPU is"
#~ " supported checkout `this Wikipedia page"
#~ " "
#~ "<https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units>`__."
#~ msgstr ""

#~ msgid ""
#~ "Cycles requires recent AMD drivers to"
#~ " be installed, on all operating "
#~ "systems."
#~ msgstr ""

#~ msgid "What renders faster, Nvidia or AMD, CUDA or OpenCL?"
#~ msgstr ""

#~ msgid ""
#~ "Currently Nvidia with CUDA is rendering"
#~ " fastest, but this really depends on"
#~ " the hardware you buy. Currently, "
#~ "CUDA and OpenCL are about the same"
#~ " in the newest mid-range GPUs. "
#~ "However, CUDA is fastest in the "
#~ "respect of high-end GPUs."
#~ msgstr ""

#~ msgid ""
#~ "This error may happen if you have"
#~ " a new Nvidia graphics card that "
#~ "is not yet supported by the "
#~ "Blender version and CUDA toolkit you "
#~ "have installed. In this case Blender "
#~ "may try to dynamically build a "
#~ "kernel for your graphics card and "
#~ "fail."
#~ msgstr ""

#~ msgid "The Nvidia OpenGL driver lost connection with the display driver"
#~ msgstr ""

#~ msgid ""
#~ "If you get this error on MS-"
#~ "Windows 64-bit, be sure to use the"
#~ " 64-bit build of Blender, not the "
#~ "32-bit version."
#~ msgstr ""

#~ msgid ""
#~ "If a GPU is used for both "
#~ "display and rendering, MS-Windows has"
#~ " a limit on the time the GPU"
#~ " can do render computations. If you"
#~ " have a particularly heavy scene, "
#~ "Cycles can take up too much GPU"
#~ " time. Reducing Tile Size in the "
#~ "Performance panel may alleviate the "
#~ "issue, but the only real solution "
#~ "is to use separate graphics cards "
#~ "for display and rendering."
#~ msgstr ""

