#
# urko <urkokul@gmail.com>, 2018, 2019.
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-30 09:48+1000\n"
"PO-Revision-Date: 2019-01-28 21:09+0200\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language: uk\n"
"Language-Team: \n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/render/materials/introduction.rst:5
msgid "Introduction"
msgstr "Вступ"

#: ../../manual/render/materials/introduction.rst:7
msgid ""
"Materials control the appearance of meshes, curves, volumes and other "
"objects. They define the substance that the object is made of, its color "
"and texture, and how light interacts with it."
msgstr ""

#: ../../manual/render/materials/introduction.rst:11
msgid ""
"Physically based materials can be created using the :doc:`Principled BSDF"
" </render/shader_nodes/shader/principled>`, :doc:`Principled Hair "
"</render/shader_nodes/shader/hair_principled>`, and :doc:`Principled "
"Volume </render/shader_nodes/shader/volume_principled>` shaders. With "
"these uber shaders, a wide variety of materials including plastic, glass,"
" metal, cloth, skin, hair, smoke and fire can be created."
msgstr ""

#: ../../manual/render/materials/introduction.rst:18
msgid ""
"A flexible :doc:`shading nodes </render/shader_nodes/introduction>` "
"system is used to set up textures and create entirely different types of "
"materials like toon shading."
msgstr ""

#: ../../manual/render/materials/introduction.rst:23
#, fuzzy
msgid "Setting up Materials"
msgstr "Використання матеріалів"

#: ../../manual/render/materials/introduction.rst:25
msgid ""
"Materials can be created in either the :doc:`Material properties "
"</editors/properties_editor>`, or in the :doc:`Shader Editor "
"</editors/shader_editor/index>`. These provide a different view of the "
"same shader nodes and material settings."
msgstr ""

#: ../../manual/render/materials/introduction.rst:29
msgid ""
"The defaults Shading workspace has a shader editor and a 3D Viewport that"
" can be set to LookDev or Rendered shading, to interactively preview how "
"the material interacts with objects and lights in the scene."
msgstr ""

#: ../../manual/render/materials/introduction.rst:33
msgid ""
"Materials are data-blocks that can be :doc:`assigned "
"</render/materials/assignment>` to one or more objects, and different "
"materials can be assigned to different parts of meshes."
msgstr ""

#: ../../manual/render/materials/introduction.rst:36
msgid ""
"Image textures can be created from scratch in :doc:`texture paint mode "
"</sculpt_paint/texture_paint/index>`, or by loading in existing images "
"with the :doc:`Image Texture node </render/shader_nodes/textures/image>`."
" A variety of :doc:`procedural texture nodes "
"</render/shader_nodes/textures/index>` is also available."
msgstr ""

#: ../../manual/render/materials/introduction.rst:42
msgid "Components"
msgstr ""

#: ../../manual/render/materials/introduction.rst:44
msgid ""
"Materials consist of three shaders, defining the appearance of the "
"surface, the volume inside the object, and the displacement of the "
"surface."
msgstr ""

#: ../../manual/render/materials/introduction.rst:52
msgid "Surface Shader"
msgstr ""

#: ../../manual/render/materials/introduction.rst:54
msgid ""
"The :doc:`surface shader </render/materials/components/surface>` controls"
" the textures and light interaction at the surface of the mesh."
msgstr ""

#: ../../manual/render/materials/introduction.rst:59
msgid "Volume Shader"
msgstr ""

#: ../../manual/render/materials/introduction.rst:61
msgid ""
"The :doc:`volume shader </render/materials/components/volume>` defines "
"the interior of the mesh. A material can have just a volume shader for "
"cases like smoke and fire, or it can be combined with a surface shader "
"for materials like cloudy glass."
msgstr ""

#: ../../manual/render/materials/introduction.rst:67
msgid "Displacement"
msgstr ""

#: ../../manual/render/materials/introduction.rst:69
msgid ""
"The shape of the surface and the volume inside it may be altered by "
":doc:`displacement </render/materials/components/displacement>`. This "
"way, textures can then be used to make the mesh surface more detailed."
msgstr ""

#: ../../manual/render/materials/introduction.rst:73
msgid ""
"Depending on the settings, the displacement may be virtual, only "
"modifying the surface normals to give the impression of displacement, "
"which is known as bump mapping, or a combination of real and virtual "
"displacement."
msgstr ""

#: ../../manual/render/materials/introduction.rst:79
msgid "Physically Based Shading"
msgstr ""

#: ../../manual/render/materials/introduction.rst:81
msgid ""
"The material system is built with physically-based rendering in mind, "
"separating how a material looks and which rendering algorithm is used to "
"render it. This makes it easier to achieve realistic results and balanced"
" lighting, though there are a few things to keep in mind."
msgstr ""

#: ../../manual/render/materials/introduction.rst:86
msgid ""
"In order for materials to work well with global illumination, they should"
" be energy conserving. That means they cannot reflect more light than "
"comes in. This property is not strictly enforced, but if colors are in "
"the range 0.0 to 1.0, and :abbr:`BSDF (Bidirectional scattering "
"distribution function)`\\ s are only mixed together with the Mix Shader "
"node, this will automatically be true."
msgstr ""

#: ../../manual/render/materials/introduction.rst:92
msgid ""
"It is however, possible to break this, with color values higher than 1.0 "
"or using the Add Shader node, but one must be careful when doing this to "
"keep materials behaving predictably under various lighting conditions."
msgstr ""

#~ msgid ":doc:`Surface Shader </render/cycles/materials/surface>`."
#~ msgstr ""
#~ "Дивіться детальніше тут -- :doc:`Surface "
#~ "Shader </render/cycles/materials/surface>`."

#~ msgid ":doc:`Volume Shader </render/cycles/materials/volume>`."
#~ msgstr ""
#~ "Дивіться детальніше тут -- :doc:`Volume "
#~ "Shader </render/cycles/materials/volume>`."

#~ msgid ":doc:`Displacement </render/cycles/materials/displacement>`."
#~ msgstr ""
#~ "Дивіться детальніше тут -- :doc:`Displacement"
#~ " </render/cycles/materials/displacement>`."

#~ msgid "Surface Shader"
#~ msgstr "Поверхнєвий Відтінювач -- Surface Shader"

#~ msgid ""
#~ "The :doc:`surface shader "
#~ "</render/materials/components/surface>` defines the "
#~ "light interaction at the surface of "
#~ "the mesh."
#~ msgstr "Поверхнєвий відтінювач визначає взаємодію світла з поверхнею сіті."

#~ msgid "Volume Shader"
#~ msgstr "Об'ємовий Відтінювач -- Volume Shader"

#~ msgid ""
#~ "When the surface shader does not "
#~ "reflect or absorb light, it enters "
#~ "into the volume. If no :doc:`volume "
#~ "shader </render/materials/components/volume>` is "
#~ "specified, it will pass straight through"
#~ " to the other side of the mesh."
#~ msgstr ""
#~ "Коли поверхнєвий відтінювач не відбиває "
#~ "або не поглинає світло, воно входить "
#~ "в об'єм. Якщо жоден об'ємовий відтінювач"
#~ " не визначено, то світло проходить "
#~ "прямо крізь об'єм на іншу сторону "
#~ "сіті."

#~ msgid ""
#~ "If it is defined, a volume shader"
#~ " describes the light interaction as "
#~ "it passes through the volume of "
#~ "the mesh. Light may be scattered, "
#~ "absorbed, or emitted at any point "
#~ "in the volume."
#~ msgstr ""
#~ "Якщо об'ємовий відтінювач визначено, то "
#~ "він описує взаємодію світла при "
#~ "проходженні його крізь об'єм сіті. "
#~ "Світло може бути розсіяне, поглинуте або"
#~ " емітоване у будь-якій точці об'єму."

#~ msgid ""
#~ "A material may have both a surface"
#~ " and a volume shader, or only "
#~ "one of either. Using both may be"
#~ " useful for materials such as glass,"
#~ " water or ice, where you want "
#~ "some of the light to be absorbed"
#~ " as it passes through the surface,"
#~ " combined with e.g. a glass or "
#~ "glossy shader at the surface."
#~ msgstr ""
#~ "Матеріал може мати визначеними обидва "
#~ "шейдери -- поверхнєвий та об'ємовий, або"
#~ " тільки один із них. Використання "
#~ "обох шейдерів разом може бути корисним"
#~ " для матеріалів, таких як скло, вода"
#~ " або лід, де ви хочете, щоб "
#~ "деяке світло було поглинуте при "
#~ "проходженні крізь поверхню, комбіновано зі,"
#~ " наприклад, скляним або глянцевим шейдером"
#~ " на поверхні."

#~ msgid "Displacement"
#~ msgstr "Зміщення -- Displacement"

#~ msgid ""
#~ "The shape of the surface and the"
#~ " volume inside it may be altered "
#~ "by :doc:`displacement "
#~ "</render/materials/components/displacement>`. This way,"
#~ " textures can then be used to "
#~ "make the mesh surface more detailed."
#~ msgstr ""
#~ "Форма поверхні та об'єм всередині неї"
#~ " можуть бути змінені шейдерами зміщення "
#~ "-- displacement. Таким чином, для "
#~ "зроблення поверхні сіті більш деталізованою"
#~ " можуть використовуватися текстури."

#~ msgid ""
#~ "Depending on the settings, the "
#~ "displacement may be virtual, only "
#~ "modifying the surface normals to give"
#~ " the impression of displacement, which "
#~ "is known as bump mapping, or a "
#~ "combination of real and virtual "
#~ "displacement."
#~ msgstr ""
#~ "Залежно від устав, зміщення може бути"
#~ " віртуальним, що модифікує тільки нормалі"
#~ " поверхні для отримання враження зміщення,"
#~ " відоме під назвою розкладання вигинів "
#~ "-- bump mapping, або комбінацією "
#~ "реального та віртуального зміщень."

#~ msgid "Energy Conservation"
#~ msgstr "Збереження Енергії -- Energy Conservation"

#~ msgid ""
#~ "The material system is built with "
#~ "physically-based rendering in mind, cleanly"
#~ " separating how a material looks and"
#~ " which rendering algorithm is used to"
#~ " render it. This makes it easier "
#~ "to achieve realistic results and "
#~ "balanced lighting, though there are a"
#~ " few things to keep in mind."
#~ msgstr ""
#~ "Система матеріалів побудована з врахуванням"
#~ " фізично-базованого рендеринга, чітко розділяє"
#~ " те, як матеріал виглядає, і те, "
#~ "як алгоритм рендеринга використовується для"
#~ " його рендера. Це полегшує досягнення "
#~ "реалістичних результатів та збалансованого "
#~ "освітлення, хоча тут є кілька речей, "
#~ "про які слід пам'ятати."

#~ msgid ""
#~ "In order for materials to work "
#~ "well with global illumination, they "
#~ "should be, speaking in terms of "
#~ "physics, energy conserving. That means "
#~ "they cannot reflect more light than "
#~ "comes in. This property is not "
#~ "strictly enforced, but if colors are "
#~ "in the range 0.0 to 1.0, and "
#~ ":abbr:`BSDF (Bidirectional scattering distribution"
#~ " function)`\\ s are only mixed "
#~ "together with the Mix Shader node, "
#~ "this will automatically be true."
#~ msgstr ""
#~ "Щоб матеріали працювали добре з "
#~ "глобальним освітлюванням, вони повинні, "
#~ "говорячи термінами фізики, дотримуватися "
#~ "законів збереження енергії. Це означає, "
#~ "що вони не можуть відбивати більше "
#~ "світла, ніж входить у них. Ця "
#~ "властивість не суворо застосовується, але "
#~ "якщо кольори є у діапазоні від 0.0"
#~ " до 1.0, і функції :abbr:`BSDF "
#~ "(Bidirectional scattering distribution function)`"
#~ " змішуються за допомогою вузла Mix "
#~ "Shader -- «Мішаний Відтінювач», то це"
#~ " автоматично буде правдою."

#~ msgid ""
#~ "It is however, possible to break "
#~ "this, with color values higher than "
#~ "1.0 or using the Add Shader node,"
#~ " but one must be careful when "
#~ "doing this to keep materials behaving"
#~ " predictably under various lighting "
#~ "conditions. It can result in a "
#~ "reflection adding light into the system"
#~ " at each bounce, turning a "
#~ ":abbr:`BSDF (Bidirectional scattering distribution"
#~ " function)` into a kind of emitter."
#~ msgstr ""
#~ "Однак, можливе порушення цього при "
#~ "значеннях кольору вищих за 1.0 або "
#~ "при використанні вузла Add Shader -- "
#~ "«Сумований Відтінювач», однак треба бути "
#~ "обережним, роблячи це, щоб тримати "
#~ "поведінку матеріалів передбачуваною відповідно "
#~ "до різних умов освітлення. Це може "
#~ "призвести до додання відбиття світла у"
#~ " систему з кожним відскоком, перетворюючи"
#~ " функцію :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)` у певний вид "
#~ "емітера."

#~ msgid ""
#~ "A material defines the artistic "
#~ "qualities of the substance that an "
#~ "object is made of. In its simplest"
#~ " form, you can use materials to "
#~ "show the substance an object is "
#~ "made of, or to \"paint\" the "
#~ "object with different colors. Usually, "
#~ "the substance is represented by its "
#~ "surface qualities (color, shininess, "
#~ "reflectance, etc.) but it can also "
#~ "exhibit more complicated effects such as"
#~ " transparency, diffraction and subsurface "
#~ "scattering. Typical materials might be "
#~ "brass, skin, glass, or linen."
#~ msgstr ""
#~ "Матеріал -- material -- визначає художні"
#~ " якості речовини, з якої зроблено "
#~ "об'єкт. У найпростішій формі ви можете"
#~ " використовувати матеріали для показу "
#~ "речовини, з якої зроблено об'єкт, або"
#~ " «малювати» об'єкт різними кольорами. "
#~ "Зазвичай, ця речовина представляється якостями"
#~ " її поверхні (колір, блискучість, "
#~ "відбиваність тощо), але може також "
#~ "виявляти більш складні ефекти, як "
#~ "прозорість, дифракція та підповерхневе "
#~ "розсіювання. Типовими матеріалами можуть бути"
#~ " мідь, шкіра, скло або тканина."

#~ msgid ""
#~ "Materials can also contain displacement "
#~ "information to described how the "
#~ "material raises and lowers the surface"
#~ " of the material."
#~ msgstr ""
#~ "Матеріали можуть також містити інформацію "
#~ "зміщення для опису того, як матеріал "
#~ "піднімає та опускає поверхню матеріалу."

#~ msgid ""
#~ "Various basic materials (single, multiple "
#~ "material, transparency, vertex paint)."
#~ msgstr ""
#~ "Різні базові матеріали (одиничний, одночасно"
#~ " кілька матеріалів, прозорість, малювання "
#~ "вершин)."

#~ msgid ""
#~ "The basic (un-textured) Blender material"
#~ " is uniform across each face of "
#~ "an object (although the various pixels"
#~ " of each face of the object may"
#~ " appear differently because of lighting "
#~ "effects). However, different faces of "
#~ "the object may use different materials"
#~ " (see :ref:`bi-multiple-materials`)."
#~ msgstr ""
#~ "Базовий (не-текстурований) матеріал у "
#~ "Blender'і є однорідним по кожній грані"
#~ " об'єкта (хоча різні пікселі кожної "
#~ "грані об'єкта можуть виглядати по-різному "
#~ "через ефекти освітлення). Однак, різні "
#~ "грані об'єкта можуть використовувати різні "
#~ "матеріали (дивіться :ref:`bi-multiple-"
#~ "materials`)."

#~ msgid ""
#~ "In Blender, materials can (optionally) "
#~ "have associated textures. Textures *describe*"
#~ " the substance: e.g. *polished* brass, "
#~ "*dirty* glass or *embroidered* linen. "
#~ "The :doc:`Textures "
#~ "</render/materials/legacy_textures/index>` chapter "
#~ "describes how to add textures to "
#~ "materials."
#~ msgstr ""
#~ "У Blender'і матеріали можуть (за "
#~ "бажанням) мати асоційовані з ними "
#~ "текстури. Текстури *описують* речовину: "
#~ "наприклад, *полірована* мідь, *брудне* скло"
#~ " або *вишита* тканина, Глава :doc:`Textures"
#~ " </editors/uv_image/uv/textures/index>` описує, як "
#~ "додавати текстури у матеріали."

#~ msgid "How Materials Work"
#~ msgstr "Як Матеріали Працюють"

#~ msgid ""
#~ "Before you can understand how to "
#~ "design effectively with materials, you "
#~ "must understand how simulated light and"
#~ " surfaces interact in Blender's rendering"
#~ " engine and how material settings "
#~ "control those interactions. A deep "
#~ "understanding of the engine will help"
#~ " you to get the most from it."
#~ msgstr ""
#~ "Перш ніж зрозуміти, як ефективно "
#~ "розробляти матеріали, ви повинні розуміти, "
#~ "як імітовані світло та поверхні "
#~ "взаємодіють у рушії рендеринга у "
#~ "Blender'і та як устави матеріалу керують"
#~ " цими взаємодіями. Глибоке розуміння рушія"
#~ " рендера допоможе вам максимально "
#~ "використовувати його."

#~ msgid ""
#~ "The rendered image you create with "
#~ "Blender is a projection of the "
#~ "scene onto an imaginary surface called"
#~ " the *viewing plane*. The viewing "
#~ "plane is analogous to the film in"
#~ " a traditional camera, or the rods"
#~ " and cones in the human eye, "
#~ "except that it receives simulated light,"
#~ " not real light."
#~ msgstr ""
#~ "Рендерене зображення, створюване вами у "
#~ "Blender'і, -- це проекція сцени на "
#~ "уявну поверхню, що зветься «площиною "
#~ "огляду» -- *viewing plane*. Ця площина"
#~ " огляду є аналогом плівки у "
#~ "традиційній камері, або колбочок і "
#~ "паличок у людському оці, за винятком "
#~ "того, що вона сприймає імітоване, а "
#~ "не реальне, світло."

#~ msgid ""
#~ "To render an image of a scene "
#~ "we must first determine what light "
#~ "from the scene is arriving at each"
#~ " point on the viewing plane. The "
#~ "best way to answer this question "
#~ "is to follow a straight line (the"
#~ " simulated light ray) backwards through "
#~ "that point on the viewing plane "
#~ "and the focal point (the location "
#~ "of the camera) until it hits a "
#~ "renderable surface in the scene, at "
#~ "which point we can determine what "
#~ "light would strike that point."
#~ msgstr ""
#~ "Для рендера зображення сцени ви повинні"
#~ " спершу визначити, яке світло зі "
#~ "сцени прибуватиме у кожну точку площини"
#~ " огляду. Найкращий спосіб відповісти на "
#~ "це питання -- це прослідкувати пряму "
#~ "лінію (імітований промінь світла) назад "
#~ "від точки на площині огляду та "
#~ "фокальної точки (локації камери), допоки "
#~ "він не потрапить на рендероздатну "
#~ "поверхню -- renderable surface -- у "
#~ "сцені, у точці якої ми зможемо "
#~ "визначити, яке світло потрапляє на цю"
#~ " точку."

#~ msgid ""
#~ "The surface properties and incident "
#~ "light angle tells how much of that"
#~ " light would be reflected back along"
#~ " the incident viewing angle *(Rendering "
#~ "engine basic principle)*."
#~ msgstr ""
#~ "Властивості цієї поверхні та кут падіння"
#~ " світла -- incident light angle --"
#~ " розкажуть, наскільки це світло було "
#~ "відбито назад уздовж кута падіння огляду"
#~ " -- incident viewing angle -- "
#~ "*(Базовий принцип рушія рендеринга)*."

#~ msgid "Rendering engine basic principle."
#~ msgstr "Базовий принцип рушія рендеринга."

#~ msgid ""
#~ "Two basic types of phenomena take "
#~ "place at any point on a surface"
#~ " when a light ray strikes it: "
#~ "diffusion and specular reflection. Diffusion"
#~ " and specular reflection are distinguished"
#~ " from each other mainly by the "
#~ "relationship between the incident light "
#~ "angle and the reflected light angle."
#~ msgstr ""
#~ "У будь-якій точці на поверхні при "
#~ "потраплянні на неї променя світла "
#~ "відбуваються два базових типи явищ: "
#~ "розсіяння -- diffusion та відбиття "
#~ "бліків -- specular reflection. Розсіяння "
#~ "та відбиття бліків відрізняються один "
#~ "від одного головно відношенням між кутом"
#~ " падіння світла та кутом відбивання "
#~ "світла."

#~ msgid ""
#~ "The shading (or coloring) of the "
#~ "object during render will then take "
#~ "into account the base color (as "
#~ "modified by the diffusion and specular"
#~ " reflection phenomenon) and the light "
#~ "intensity."
#~ msgstr ""
#~ "Відтінення -- shading (або забарвлення "
#~ "-- coloring) об'єкта у ході рендера "
#~ "далі враховуватиме цей базовий колір "
#~ "(модифікований явищами розсіяння і відбиття"
#~ " бліків) та інтенсивність світла."

#~ msgid ""
#~ "Using the internal ray tracer, other "
#~ "(more advanced) phenomena could occur. "
#~ "In ray-traced reflections, the point "
#~ "of a surface struck by a light "
#~ "ray will return the color of its"
#~ " surrounding environment, according to the"
#~ " rate of reflection of the material"
#~ " (mixing the base color and the "
#~ "surrounding environment's) and the viewing "
#~ "angle."
#~ msgstr ""
#~ "При використанні внутрішнього простежника "
#~ "променів можуть траплятися інші (більш "
#~ "просунуті) явища. При промінь-простежених "
#~ "відбиттях точка поверхні, на яку "
#~ "потрапляє промінь світла, буде повертати "
#~ "колір навколишнього її середовища відповідно"
#~ " до норми відбиття матеріалу (змішування"
#~ " базового кольору і кольору навколишнього"
#~ " середовища) та кута огляду."

#~ msgid ""
#~ "On the other hand, in ray-traced"
#~ " refractions, the point of a surface"
#~ " struck by a light ray will "
#~ "return the color of its background "
#~ "environment, according to the rate of"
#~ " transparency (mixing the base color "
#~ "and the background environment's along "
#~ "with its optional filtering value) of"
#~ " the material and the optional index"
#~ " of refraction of the material, which"
#~ " will distort the viewing angle."
#~ msgstr ""
#~ "З іншого боку, при промінь-простежених "
#~ "відбиттях точка поверхні, на яку "
#~ "потрапляє промінь світла, буде повертати "
#~ "колір фонового її середовища, відповідно "
#~ "до норми прозорості (змішування базового "
#~ "кольору і кольору фонового середовища "
#~ "згідно з його додатковим фільтрувальним "
#~ "значенням) матеріалу, та додатковий вказівник"
#~ " заломлення матеріалу, який буде "
#~ "спотворювати кут огляду."

#~ msgid ""
#~ "Of course, shading of the object "
#~ "hit by a light ray will be "
#~ "about mixing all these phenomena at "
#~ "the same time during the rendering. "
#~ "The appearance of the object, when "
#~ "rendered, depends on many interrelated "
#~ "settings:"
#~ msgstr ""
#~ "Звичайно, відтінення об'єкта, освітленого "
#~ "променем світла, полягає в одночасному "
#~ "змішуванні всіх цих явищ у ході "
#~ "рендеринга. Вигляд об'єкта після рендеринга"
#~ " залежить від багатьох взаємопов'язаних "
#~ "устав:"

#~ msgid "World (Ambient color, Radiosity, Ambient Occlusion)"
#~ msgstr ""
#~ "Світ сцени -- World (колір оточення "
#~ "-- Ambient Color, опромінюваність -- "
#~ "Radiosity, загорода оточення -- Ambient "
#~ "Occlusion)"

#~ msgid "Lights"
#~ msgstr "Освітлювачі -- Lights"

#~ msgid ""
#~ "Material settings (including ambient, "
#~ "emission, and every other setting on "
#~ "every panel in that tab)"
#~ msgstr ""
#~ "Устави Матеріалів (включаючи оточення -- "
#~ "ambient, емісію -- emission та всі "
#~ "інші устави на панелях у цій "
#~ "вкладці)"

#~ msgid "Texture(s) and how they are mixed"
#~ msgstr "Текстури -- Texture та як вони змішуються"

#~ msgid "Material Nodes"
#~ msgstr "Матеріалові Вузли -- Material Nodes"

#~ msgid "Camera"
#~ msgstr "Камера -- Camera"

#~ msgid "Viewing angle"
#~ msgstr "Кут Огляду -- Viewing angle"

#~ msgid "Obstructions and transparent occlusions"
#~ msgstr ""
#~ "Перешкоди -- obstructions та Загороди "
#~ "Прозорості -- transparent occlusions"

#~ msgid "Shadows from other opaque/transparent objects"
#~ msgstr "Тіні -- Shadows від інших безпрозорих/прозорих об'єктів"

#~ msgid "Render settings"
#~ msgstr "Устави Рендеринга -- Render settings"

#~ msgid "Object dimensions (SS settings are relevant to dimensions)"
#~ msgstr ""
#~ "Розміри Об'єкта (устави підповерхневого "
#~ "розсіювання залежать від розмірів)"

#~ msgid "Object shape (refractions, Fresnel effects)"
#~ msgstr ""
#~ "Форма Об'єкта (заломлення, рефракції -- "
#~ "refractions, ефекти Френеля -- Fresnel)"

#~ msgid "Check your Render"
#~ msgstr "Перевіряйте ваш Рендер"

#~ msgid ""
#~ "When designing materials (and textures "
#~ "and lighting), frequently check the "
#~ "rendered appearance of your scene, using"
#~ " your chosen render engine/shader settings."
#~ " The appearance might be quite "
#~ "different from that shown in the "
#~ "texture display in the 3D panel."
#~ msgstr ""
#~ "При розробленні матеріалів (та текстур і"
#~ " освітлення) часто перевіряйте рендерений "
#~ "вигляд вашої сцени, використовуючи обрані "
#~ "вами устави рушія рендеринга / шейдера."
#~ " Цей рендерений вигляд може сильно "
#~ "відрізнятися від показу текстури у 3D"
#~ " Огляді."

#~ msgid ""
#~ "As stated above, the material settings"
#~ " usually determine the surface properties"
#~ " of the object. There are several "
#~ "ways in which materials can be set"
#~ " up in Blender. Generally speaking, "
#~ "these are not compatible. You must "
#~ "choose which method you are going "
#~ "to use for each particular object "
#~ "in your scene:"
#~ msgstr ""
#~ "Як зазначено вище, устави матеріалу "
#~ "зазвичай визначають властивості поверхні "
#~ "об'єкта. Існують кілька шляхів укладання "
#~ "матеріалів у Blender'і. Взагалі кажучи, "
#~ "вони не сумісні. Ви повинні обрати, "
#~ "який метод ви збираєтеся використати для"
#~ " кожного конкретного об'єкта у вашій "
#~ "сцені:"

#~ msgid ""
#~ "First, you can set the :doc:`Settings"
#~ " </render/materials/settings>` in the various "
#~ "Material panels."
#~ msgstr ""
#~ "По-перше, ви можете задати властивості "
#~ "-- :doc:`Properties "
#~ "</render/blender_render/materials/properties/introduction>` на"
#~ " різних панелях вкладки «Матеріал»."

#~ msgid ""
#~ "Second, you can use :doc:`Nodes "
#~ "</render/shader_nodes/index>`; a graphical nodes "
#~ "editor is available."
#~ msgstr ""
#~ "По-друге, ви можете використати вузли --"
#~ " :doc:`Nodes </render/blender_render/materials/nodes/index>`;"
#~ " доступний графічний редактор вузлів."

#~ msgid ""
#~ "Last, you can directly set the "
#~ "color of object surfaces using various"
#~ " special effects. Strictly speaking, these"
#~ " are not materials at all, but "
#~ "they are included here because they "
#~ "affect the appearance of your objects."
#~ " These include :ref:`Vertex Painting "
#~ "<painting-vertex-index>`, :doc:`Volume Rendering"
#~ " </render/materials/components/volume>`, and :doc:`Wire"
#~ " Rendering </render/shader_nodes/input/wireframe>`."
#~ msgstr ""
#~ "Останнє, ви можете безпосередньо задати "
#~ "колір поверхонь об'єктів, використовуючи різні"
#~ " ефекти. Строго кажучи, вони не є "
#~ "взагалі матеріалами, але вони згадуються "
#~ "тут, оскільки впливають на вигляд ваших"
#~ " об'єктів. Це, зокрема, малювання вершин"
#~ " -- :ref:`Vertex Painting <painting-"
#~ "vertex-index>`, дротяний рендеринг -- "
#~ ":doc:`Wire Rendering "
#~ "</render/blender_render/materials/special_effects/wire>`, "
#~ "об'ємовий рендеринг -- :doc:`Volume Rendering"
#~ " </render/blender_render/materials/special_effects/volume>` "
#~ "та ореоловий рендеринг -- :doc:`Halo "
#~ "Rendering "
#~ "</render/blender_render/materials/special_effects/halo>`."

#~ msgid ""
#~ "The exact effect of Material settings"
#~ " can be affected by a number of"
#~ " system settings. First and foremost "
#~ "is the renderer used: Cycles and "
#~ "the Blender Renderer (aka Blender "
#~ "Internal or BI) require quite different"
#~ " illumination levels to achieve similar "
#~ "results, and even then the appearance"
#~ " of objects can be quite different."
#~ " Also, the material properties settings "
#~ "can be affected by the texture "
#~ "method used (single-texture, multi-"
#~ "texture or GLSL). So it is "
#~ "recommended to always select the "
#~ "appropriate system settings before starting"
#~ " the design of materials."
#~ msgstr ""
#~ "Точний ефект устав Матеріалу може "
#~ "визначатися рядом системних устав. У "
#~ "першу чергу - це використовуваний "
#~ "рендерер: Cycles та Blender Renderer "
#~ "(aka Blender Internal чи BI) вимагають"
#~ " зовсім різні рівні освітлюваності для "
#~ "досягнення подібних результатів, і навіть "
#~ "надалі вигляд об'єктів може бути досить"
#~ " різним. Також, на устави властивостей "
#~ "матеріалу може впливати використовуваний метод"
#~ " текстурування (одинична текстура, одночасно "
#~ "кілька текстур або GLSL). А тому, "
#~ "рекомендується завжди обирати відповідні "
#~ "системні устави перед початком розроблення "
#~ "матеріалів."

