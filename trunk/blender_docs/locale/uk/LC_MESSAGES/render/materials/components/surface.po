#
# urko <urkokul@gmail.com>, 2018.
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 13:27+0200\n"
"PO-Revision-Date: 2019-02-03 22:40+0200\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language: uk\n"
"Language-Team: \n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../manual/render/engines/cycles/materials/surface.rst:4
msgid "Surfaces"
msgstr "Поверхні -- Surfaces"

#: ../../manual/render/engines/cycles/materials/surface.rst:6
msgid ""
"The surface shader defines the light interaction at the surface of the "
"mesh. One or more :abbr:`BSDF (Bidirectional scattering distribution "
"function)`\\ 's specify if incoming light is reflected back, refracted "
"into the mesh, or absorbed."
msgstr ""
"Поверхнєвий відтінювач визначає взаємодію світла з поверхнею сіті. Одна "
"чи кілька функцій :abbr:`BSDF (Bidirectional scattering distribution "
"function)` визначають, чи вхідне світло відбивається назад, заломлюється "
"через сіть або поглинається."

#: ../../manual/render/engines/cycles/materials/surface.rst:10
msgid ""
"Emission defines how light is emitted from the surface, allowing any "
"surface to become a light source."
msgstr ""
"Emission -- емісія визначає, як світло емітується з поверхні, дозволяючи "
"будь-якій поверхні стати джерелом освітлення."

#: ../../manual/render/engines/cycles/materials/surface.rst:15
msgid "Terminology"
msgstr "Термінологія"

#: ../../manual/render/engines/cycles/materials/surface.rst:18
msgid "BSDF"
msgstr "BSDF"

#: ../../manual/render/engines/cycles/materials/surface.rst:18
msgid ""
"Stands for Bidirectional Scattering Distribution Function. It defines how"
" light is reflected and refracted at a surface."
msgstr ""
"Скорочено від Bidirectional Scattering Distribution Function -- Функція "
"Розподілу Двонапрямного Розсіювання. Вона визначає, як світло "
"відбивається та заломлюється поверхнею."

#: ../../manual/render/engines/cycles/materials/surface.rst:20
msgid "Reflection"
msgstr "Reflection -- Відбиття"

#: ../../manual/render/engines/cycles/materials/surface.rst:21
msgid "BSDFs reflect an incoming ray on the same side of the surface."
msgstr "Ці BSDF'и відбивають вхідний промінь на тій же стороні поверхні."

#: ../../manual/render/engines/cycles/materials/surface.rst:22
msgid "Transmission"
msgstr "Пропускання -- Transmission"

#: ../../manual/render/engines/cycles/materials/surface.rst:23
msgid ""
"BSDFs transmit an incoming ray through the surface, leaving on the other "
"side."
msgstr ""
"Ці BSDF'и пропускають вхідний промінь крізь поверхню, залишаючи на іншій "
"стороні."

#: ../../manual/render/engines/cycles/materials/surface.rst:27
msgid "Refraction"
msgstr "Заломлення -- Refraction"

#: ../../manual/render/engines/cycles/materials/surface.rst:25
msgid ""
"BSDFs are a type of *Transmission*, transmitting an incoming ray and "
"changing its direction as it exits on the other side of the surface."
msgstr ""
"Ці BSDF'и є типом пропускання *Transmission*, що дає пропускання вхідного"
" променя та змінення його напрямку при виході його з іншого боку "
"поверхні."

#: ../../manual/render/engines/cycles/materials/surface.rst:30
msgid "BSDF Parameters"
msgstr "Параметри BSDF"

#: ../../manual/render/engines/cycles/materials/surface.rst:32
msgid ""
"A major difference from non-physically-based renderers is that direct "
"light reflection from lamps and indirect light reflection of other "
"surfaces are not decoupled, but rather handled using a single :abbr:`BSDF"
" (Bidirectional scattering distribution function)`. This limits the "
"possibilities a bit, but we believe overall it is helpful in creating "
"consistent-looking renders with fewer parameters to tune."
msgstr ""
"Головною відмінністю від не-фізично-базованих рендерерів є те, що "
"відбиття прямого світла від ламп та відбиття побічного світла з інших "
"поверхонь не роз'єднуються, а обробляються за допомогою єдиної "
":abbr:`BSDF (Bidirectional scattering distribution function)`. Це трохи "
"лімітує можливості, але ми вважаємо, що загалом це допомагає створювати "
"узгоджені на вигляд рендери за допомогою підлаштування меншої кількості "
"параметрів."

#: ../../<generated>:1
msgid "Roughness"
msgstr "Roughness -- Шорсткість"

#: ../../manual/render/engines/cycles/materials/surface.rst:39
msgid ""
"For the glossy :abbr:`BSDF (Bidirectional scattering distribution "
"function)`\\ s, the *roughness* parameter controls the sharpness of the "
"reflection, from 0.0 (perfectly sharp) to 1.0 (very soft). Compared to "
"*hardness* or *exponent* parameters, it has the advantage of being in the"
" range 0.0 to 1.0, and as a result gives more linear control and is more "
"easily textureable. The relation is roughly: *roughness* = 1 - "
"1/*hardness*"
msgstr ""
"Для :abbr:`BSDF (Bidirectional scattering distribution function)` глянцю "
"параметр *roughness* - *шорсткість* керує різкістю відбиття, від 0.0 "
"(ідеально різке) до 1.0 (дуже м'яке). У порівнянні з параметрами "
"*hardness* -- жорсткість, твердість або *exponent* -- експонента він має "
"перевагу знаходження у діапазоні від 0.0 до 1.0 та у результаті дає "
"більший прямолінійний контроль, і є більш легко здатним для "
"текстурування. Грубе співвідношення: *roughness* = 1 - 1/*hardness*"

#: ../../manual/render/engines/cycles/materials/surface.rst:48
#, fuzzy
msgid ""
"Currently Blender is coded to use an unsquared model. So if you are using"
" a :term:`Roughness Map` chances are that the result will not be "
"accurate. To fix this, you can square the texture by connecting the "
"texture to a :doc:`Math node </render/shader_nodes/converter/math>` and "
"either setting it to *Multiply* and inputing the texture in both input "
"sockets, or using the *Power* function and setting the second input to 2."
msgstr ""
"Поточно код Blender'а написано так, щоб використовувати неквадратну "
"модель. А тому, якщо ви використовуєте карту шорсткості -- "
":term:`Roughness Map`, то є шанс, що результат на її основі не буде "
"точним. Для виправлення цього ви можете квадрувати текстуру, подавши дані"
" з її вузла на вузол a :doc:`Math node "
"</render/cycles/nodes/types/converter/math>` -- «Математика» та, або "
"використати як оператор *Multiply* -- «Множення» та подати дані на обидва"
" уводи, або скористатися функцією *Power* -- «Степінь» та задати значення"
" на другому, нижньому уводі як 2."

