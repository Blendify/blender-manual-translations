# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@gmail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.79 Manual 2.79\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-27 20:49-0600\n"
"PO-Revision-Date: 2019-04-24 02:16+0100\n"
"Last-Translator: Hoang Duy Tran <hoangduytran1960@googlemail.com>\n"
"Language: vi\n"
"Language-Team: London, UK <hoangduytran1960@googlemail.com>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/render/materials/components/volume.rst:4
msgid "Volumes"
msgstr "-- Volumes"

#: ../../manual/render/materials/components/volume.rst:6
msgid ""
"Volume rendering can be used to render effects like fire, smoke, mist, "
"absorption in glass, and many other effects that cannot be represented by"
" surface meshes alone."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:9
msgid ""
"To set up a volume, you create a mesh that defines the bounds within "
"which the volume exists. In the material you typically remove the surface"
" nodes and instead connect volume nodes to define the shading inside the "
"volume. For effects such as absorption in glass you can use both a "
"surface and volume shader. The world can also use a volume shader to "
"create effects such as mist."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:17
msgid "Shading"
msgstr "Tô Bóng -- Shading"

#: ../../manual/render/materials/components/volume.rst:20
msgid "Principled Volume"
msgstr "Thể Tích Nguyên Tắc -- Principled Volume"

#: ../../manual/render/materials/components/volume.rst:22
#, fuzzy
msgid ""
":doc:`Principled Volume </render/shader_nodes/shader/volume_principled>` "
"is a physically-based volume shader that can be used to create a wide "
"range of volume materials. It supports scattering, absorption and "
"emission in one easy to use node. Fire can be rendered with blackbody "
"emission."
msgstr ""
":doc:`Principled Volume "
"</render/cycles/nodes/types/shaders/volume_principled>` is a physically-"
"based volume shader that can be used to create a wide range of volume "
"materials. It supports scattering, absorption and emission in one easy to"
" use node. Fire can be rendered with blackbody emission."

#: ../../manual/render/materials/components/volume.rst:30
msgid "Smoke and fire rendered with Principled Volume shader."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:34
msgid "Volume Components"
msgstr "-- Volume Components"

#: ../../manual/render/materials/components/volume.rst:36
msgid ""
"For more control, volume shading components can be manually combined into"
" a custom shader setup."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:38
#, fuzzy
msgid ""
":doc:`Volume Absorption </render/shader_nodes/shader/volume_absorption>` "
"will absorb part of the light as it passes through the volume. This can "
"be used to shade for example black smoke or colored glass objects, or "
"mixed with the Volume Scatter node. This node is similar to the "
"transparent BSDF node, it blocks part of the light and lets other light "
"pass straight through."
msgstr ""
":doc:`Volume Absorption "
"</render/cycles/nodes/types/shaders/volume_absorption>` will absorb part "
"of the light as it passes through the volume. This can be used to shade "
"for example black smoke or colored glass objects, or mixed with the "
"volume scatter node. This node is similar to the transparent BSDF node, "
"it blocks part of the light and lets other light pass straight through."

#: ../../manual/render/materials/components/volume.rst:43
#, fuzzy
msgid ""
":doc:`Volume Scatter </render/shader_nodes/shader/volume_scatter>` lets "
"light scatter in other directions as it hits particles in the volume. The"
" anisotropy defines in which direction the light is more likely to "
"scatter. A value of 0 will let light scatter evenly in all directions "
"(similar to the diffuse BSDF node), negative values let light scatter "
"mostly backwards, and positive values let light scatter mostly forward. "
"This can be used to shade white smoke or clouds for example."
msgstr ""
":doc:`Volume Scatter </render/cycles/nodes/types/shaders/volume_scatter>`"
" lets light scatter in other directions as it hits particles in the "
"volume. The anisotropy defines in which direction the light is more "
"likely to scatter. A value of 0 will let light scatter evenly in all "
"directions (similar to the diffuse BSDF node), negative values let light "
"scatter mostly backwards, and positive values let light scatter mostly "
"forward. This can be used to shade white smoke or clouds for example."

#: ../../manual/render/materials/components/volume.rst:49
#, fuzzy
msgid ""
":doc:`Emission </render/shader_nodes/shader/emission>` will emit light "
"from the volume, for example for fire."
msgstr ""
":doc:`Emission </render/cycles/nodes/types/shaders/emission>` will emit "
"light from the volume, for example for fire."

#: ../../manual/render/materials/components/volume.rst:55
msgid "Volume Absorption, Scatter and Emission"
msgstr ""

#: ../../manual/render/materials/components/volume.rst:59
msgid "Attributes"
msgstr "Thuộc Tính -- Attributes"

#: ../../manual/render/materials/components/volume.rst:61
msgid ""
"When rendering smoke and fire, volume attributes are used to define the "
"shape and shading of the volume. The Principled Volume shader will use "
"them by default, while custom volume shaders can use the Attribute node "
"to get attributes such as density, color and temperature."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:67
msgid "Density"
msgstr "Tỷ Trọng -- Density"

#: ../../manual/render/materials/components/volume.rst:69
msgid ""
"All volume shaders have a density input. The density defines how much of "
"the light will interact with the volume, getting absorbed or scattered, "
"and how much will pass straight through. For effects such as smoke you "
"would specify a density field to indicate where in the volume there is "
"smoke and how much (density bigger than 0), and where there is no smoke "
"(density equals 0)."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:75
msgid ""
"Volumes in the real world consist of particles, a higher density means "
"there are more particles per unit volume. More particles means there is a"
" higher chance for light to collide with a particle and get absorbed or "
"scattered, rather than passing straight through."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:82
msgid "Mesh Volumes"
msgstr "Thể Tích Khung Lưới -- Mesh Volumes"

#: ../../manual/render/materials/components/volume.rst:84
msgid ""
"Meshes used for volume render should be closed and :term:`manifold`. That"
" means that there should be no holes in the mesh. Each edge must be "
"connected to exactly two faces such that there are no holes or T-shaped "
"faces where three or more faces are connected to an edge."
msgstr ""
"Meshes used for volume render should be closed and :term:`manifold`. That"
" means that there should be no holes in the mesh. Each edge must be "
"connected to exactly two faces such that there are no holes or T-shaped "
"faces where three or more faces are connected to an edge."

#: ../../manual/render/materials/components/volume.rst:90
msgid ""
"Normals must point outside for correct results. The normals are used to "
"determine if a ray enters or exits a volume, and if they point in a wrong"
" direction, or there is a hole in the mesh, then the renderer is unable "
"to decide what is the inside or outside of the volume."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:95
msgid "These rules are the same as for rendering glass refraction correctly."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:99
msgid "World Volume"
msgstr "-- World Volume"

#: ../../manual/render/materials/components/volume.rst:101
msgid ""
"A volume shader can also be applied to the world, filling the entire "
"space."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:103
msgid ""
"Currently, this is most useful for night time or other dark scenes, as "
"the world surface shader or sun lights will have no effect if a volume "
"shader is used. This is because the world background is assumed to be "
"infinitely far away, which is accurate enough for the sun for example. "
"However, for modeling effects such as fog or atmospheric scattering, it "
"is not a good assumption that the volume fills the entire space, as most "
"of the distance between the sun and the earth is empty space. For such "
"effects it is be better to create a volume object surrounding the scene. "
"The size of this object will determine how much light is scattered or "
"absorbed."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:115
msgid "Multiple Scattering"
msgstr "Đa Tán Xạ -- Multiple Scattering"

#: ../../manual/render/materials/components/volume.rst:117
msgid ""
"Real-world effects such as scattering in clouds or subsurface scattering "
"require many scattering bounces. However, unbiased rendering of such "
"effects can be noisy, so by default the number of bounces is zero in "
"Cycles, and no support is available in Eevee. The effect you get when "
"rendering with zero volume bounces is what is known as \"single "
"scattering\", the effect from more bounces is \"multiple scattering\"."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:123
msgid ""
"For rendering materials like skin or milk that require multiple "
"scattering, subsurface scattering is more efficient and easier to "
"control. Particularly the random walk method can accurately render such "
"materials."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:127
msgid ""
"For materials such as clouds or smoke that do not have a well defined "
"surface, volume rendering is required. These look best with many "
"scattering bounces, but in practice one might have to limit the number of"
" bounces to keep render times acceptable."
msgstr ""

#~ msgid ""
#~ "Currently, this is most useful for "
#~ "night time or other dark scenes, "
#~ "as the world surface shader or sun"
#~ " lamps will have no effect if a"
#~ " volume shader is used. This is "
#~ "because the world background is assumed"
#~ " to be infinitely far away, which "
#~ "is accurate enough for the sun for"
#~ " example. However, for modeling effects "
#~ "such as fog or atmospheric scattering,"
#~ " it is not a good assumption "
#~ "that the volume fills the entire "
#~ "space, as most of the distance "
#~ "between the sun and the earth is"
#~ " empty space. For such effects it "
#~ "is be better to create a volume"
#~ " object surrounding the scene. The "
#~ "size of this object will determine "
#~ "how much light is scattered or "
#~ "absorbed."
#~ msgstr ""

#~ msgid ""
#~ "Real-world effects such as scattering"
#~ " in clouds or subsurface scattering "
#~ "require many scattering bounces. However, "
#~ "unbiased rendering of such effects can"
#~ " be noisy, so by default the "
#~ "number of bounces is zero. The "
#~ "effect you get when rendering with "
#~ "zero volume bounces is what is "
#~ "known as \"single scattering\", the "
#~ "effect from more bounces is \"multiple"
#~ " scattering\"."
#~ msgstr ""

#~ msgid "Limitations"
#~ msgstr "Những Giới Hạn -- Limitations"

#~ msgid "Not available on GPU:"
#~ msgstr "Not available on GPU:"

#~ msgid "Multiple importance sampling for efficient lights inside volumes."
#~ msgstr ""

