# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.80 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@googlemail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.80 Manual 2.80\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-30 09:48+1000\n"
"PO-Revision-Date: 2019-04-24 02:16+0100\n"
"Last-Translator: Hoang Duy Tran <hoangduytran1960@googlemail.com>\n"
"Language: vi\n"
"Language-Team: London, UK <hoangduytran1960@googlemail.com>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/render/eevee/limitations.rst:4
msgid "Limitations"
msgstr "Những Giới Hạn -- Limitations"

#: ../../manual/render/eevee/limitations.rst:6
msgid ""
"Eevee's goal is to be an interactive render engine. Some features may not"
" be there yet or may be impossible to implement into Eevee's architecture"
" without compromising performance."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:9
msgid ""
"Here is a rather exhaustive list of all the limitations you can expect "
"while working with Eevee."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:13
msgid "Cameras"
msgstr "Máy Quay Phim -- Cameras"

#: ../../manual/render/eevee/limitations.rst:15
msgid "Only perspective and orthographic projections are currently supported."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:19
msgid "Lights"
msgstr "Nguồn Sáng -- Lights"

#: ../../manual/render/eevee/limitations.rst:21
#: ../../manual/render/eevee/limitations.rst:48
msgid ""
"Shadows are not supported on light instances (instance objects, group "
"instancing)."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:22
#: ../../manual/render/eevee/limitations.rst:49
msgid "Only 128 active lights can be supported by Eevee in a scene."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:23
#: ../../manual/render/eevee/limitations.rst:50
msgid "Only 8 Shadowed sun lights can be supported at the same time."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:24
msgid ""
"As of now, lights can only have one color and do not support light node "
"trees."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:28
msgid "Light Probes"
msgstr "-- Light Probes"

#: ../../manual/render/eevee/limitations.rst:30
msgid "Eevee only supports up to 128 active Reflection Cubemaps."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:31
msgid "Eevee only supports up to 64 active Irradiance Volumes."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:32
msgid ""
"Eevee only supports up to 16 active Reflection Planes inside the view "
"frustum."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:36
msgid "Indirect Lighting"
msgstr "Áng Sáng Gián Tiếp -- Indirect Lighting"

#: ../../manual/render/eevee/limitations.rst:38
msgid ""
"Volumetrics don't receive light from Irradiance Volumes but do receive "
"world's diffuse lighting."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:39
msgid ""
"Eevee does not support \"specular to diffuse\" light bounces nor "
"\"specular to specular\" light bounces."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:40
msgid "All specular lighting is turned off during baking."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:46
msgid "Shadows"
msgstr ""

#: ../../manual/render/eevee/limitations.rst:56
msgid "Volumetrics"
msgstr "Thể Tích -- Volumetrics"

#: ../../manual/render/eevee/limitations.rst:58
msgid "Only single scattering is supported."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:59
msgid ""
"Volumetrics are rendered only for the camera \"rays\". They don't appear "
"in reflections/refractions and probes."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:60
msgid ""
"Volumetrics don't receive light from Irradiance Volumes but does receive "
"world's diffuse lighting."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:61
msgid ""
"Volumetric shadowing does only work on other volumetrics. They won't cast"
" shadows on solid objects in the scene."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:62
msgid "Volumetric shadowing does only work for volumes inside the view frustum."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:63
msgid ""
"Volumetric lighting does not respect the lights shapes. They are treated "
"as point lights."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:67
#, fuzzy
msgid "Screen Space Effects"
msgstr "Phản Quang trong Không Gian Màn Hình -- Screen Space Reflections"

#: ../../manual/render/eevee/limitations.rst:69
msgid ""
"Eevee is not a ray tracing engine and cannot do ray-triangle "
"intersection. Instead of this, Eevee uses the depth buffer as an "
"approximated scene representation. This reduces the complexity of scene "
"scale effects and enables a higher performance. However, only what is in "
"inside the view can be considered when computing these effects. Also, "
"since it only uses one layer of depth, only the front-most pixel distance"
" is known."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:75
msgid "These limitations creates a few problems:"
msgstr ""

#: ../../manual/render/eevee/limitations.rst:77
msgid ""
"The screen space effects disappear when reaching the screen border. This "
"can be partially fixed by using the *overscan* feature."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:79
msgid ""
"The screen space effects don't know how deep (or thick) the objects are. "
"This is why most effects have a thickness parameter to control how to "
"consider potential intersected pixels."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:81
msgid ""
"Blended surfaces are not considered by these effects. They are not part "
"of the depth prepass and do not appear in the depth buffer."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:88
msgid "Ambient Occlusion"
msgstr "Tính Hấp Thụ Quang Xạ Môi Trường -- Ambient Occlusion"

#: ../../manual/render/eevee/limitations.rst:90
msgid ""
"Objects are treated as infinitely thick, producing overshadowing if the "
"*Distance* is really large."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:96
msgid "Screen Space Reflections"
msgstr "Phản Quang trong Không Gian Màn Hình -- Screen Space Reflections"

#: ../../manual/render/eevee/limitations.rst:98
msgid "Only one glossy BSDF can emit screen space reflections."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:99
msgid "The evaluated BSDF is currently arbitrarily chosen."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:100
msgid ""
"Screen Space Reflections will reflect transparent objects and objects "
"using Screen Space Refraction but without accurate positioning due to the"
" one layer depth buffer."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:105
msgid "Screen Space Refraction"
msgstr "-- Screen Space Refraction"

#: ../../manual/render/eevee/limitations.rst:107
msgid "Only one refraction event is correctly modeled."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:108
msgid "Only opaque and alpha hashed materials can be refracted."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:114
msgid "Subsurface Scattering"
msgstr ""

#: ../../manual/render/eevee/limitations.rst:116
msgid "Only one BSSRDF can produce screen space subsurface scattering."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:117
msgid "The evaluated BSSRDF is currently arbitrarily chosen."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:118
msgid "A maximum of 254 different surfaces can use subsurface scattering."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:119
msgid ""
"Only scaling is adjustable per pixel. Individual RGB radii are adjustable"
" in the socket default value."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:120
msgid ""
"Input radiance from each surfaces are not isolated during the blurring, "
"leading to light leaking from surface to surface."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:127
msgid "Materials"
msgstr "Nguyên Liệu -- Materials"

#: ../../manual/render/eevee/limitations.rst:140
#, fuzzy
msgid "Refractions"
msgstr "Khúc Xạ -- Refraction"

#: ../../manual/render/eevee/limitations.rst:130
msgid ""
"Refraction is faked by sampling the same reflection probe used by the "
"Glossy BSDFs, but using the refracted view direction instead of the "
"reflected view direction. Only the first refraction event is modeled "
"correctly. An approximation of the second refraction event can be used "
"for relatively thin objects using Refraction Depth. Using Screen Space "
"refraction will refract what is visible inside the view, and use the "
"nearest probe if there is no hit."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:137
msgid ""
"Screen Space Reflections and Ambient Occlusion are not compatible with "
"Screen Space Refraction; they will be disabled on the surfaces that use "
"it. Surfaces that use Screen Space Refraction will not appear in Screen "
"Space Reflections at the right place. Surfaces that use Screen Space "
"Refraction will not cast Ambient Occlusion onto other surfaces."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:150
msgid "Bump Mapping"
msgstr ""

#: ../../manual/render/eevee/limitations.rst:143
msgid ""
"As of now, bump mapping is supported using OpenGL derivatives which are "
"the same for each block of 2x2 pixels. This means the bump output value "
"will appear pixelated. It is recommended to use normal mapping instead."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:149
msgid ""
"If you absolutely need to render using Bump nodes, render at twice the "
"target resolution and downscale the final output."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:155
#, fuzzy
msgid "Volume Objects"
msgstr "-- Volumes Objects"

#: ../../manual/render/eevee/limitations.rst:153
msgid ""
"Object volume shaders will affect the whole bounding box of the object. "
"The shape of the volume must be adjusted using procedural texturing "
"inside the shader."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:158
msgid "Shader Nodes"
msgstr "Nút Tô Bóng -- Shader Nodes"

#: ../../manual/render/eevee/limitations.rst:160
msgid ""
"All BSDF's are using approximations to achieve realtime performance so "
"there will always be small differences between Cycles and Eevee."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:162
msgid ""
"Some utility nodes are not yet compatible with Eevee (e.g. Sky Texture "
"node)."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:166
#, fuzzy
msgid ""
"For a full list of unsupported nodes see :doc:`Nodes Support "
"</render/eevee/materials/nodes_support>`."
msgstr ""
"For a full list of unsupported nodes see :doc:`Nodes Support "
"</render/eevee/materials/nodes_support>`."

#: ../../manual/render/eevee/limitations.rst:170
msgid "Memory Management"
msgstr "-- Memory Management"

#: ../../manual/render/eevee/limitations.rst:172
#, fuzzy
msgid ""
"In Eevee, :abbr:`GPU (Graphic Processing Unit, also known as Graphics "
"Card)` Memory management is done by the GPU driver. In theory, only the "
"needed textures and meshes (now referred as \"the resources\") for a "
"single draw call (i.e. one object) needs to fit into the GPU memory."
msgstr ""
"As of now Eevee uses OpenGL, and :abbr:`GPU (Graphic Processing Unit, "
"also known as Graphics Card)` Memory management is done by the OpenGL "
"driver. In theory, only the needed textures and meshes (now referred as "
"\"the resources\") for a single draw call (i.e. one object) needs to fit "
"into the GPU memory."

#: ../../manual/render/eevee/limitations.rst:177
msgid ""
"So if the scene is really heavy, the driver will swap things in and out "
"to make sure all objects are rendered correctly."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:180
msgid ""
"In practice, using too much GPU memory can make the GPU driver crash, "
"freeze, or kill the application. So be careful of what you ask."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:183
msgid ""
"There is no standard way of estimating if the resources will fit into the"
" GPU memory and/or if the GPU will render them successfully."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:188
msgid "CPU Rendering"
msgstr "-- CPU Rendering"

#: ../../manual/render/eevee/limitations.rst:190
msgid ""
"Being an rasterization engine, Eevee only uses the power of the "
":abbr:`GPU (Graphic Processing Unit, also known as Graphics Card)` to "
"render. There is no plan to support :abbr:`CPU (Central Processing Unit)`"
" (software) rendering as it would be very inefficient. CPU power is still"
" needed to handle high scene complexity as the geometry must be prepared "
"by the CPU before rendering each frame."
msgstr ""

#: ../../manual/render/eevee/limitations.rst:198
msgid "Multiple GPU Support"
msgstr "-- Multiple GPU Support"

#: ../../manual/render/eevee/limitations.rst:200
#, fuzzy
msgid ""
"There is currently no support for multiple :abbr:`GPU (Graphic Processing"
" Unit, also known as Graphics Card)` systems."
msgstr ""
"There is currently no support for multiple :abbr:`GPU (Graphic Processing"
" Unit, also known as Graphics Card)` system."

#: ../../manual/render/eevee/limitations.rst:205
msgid "Headless Rendering"
msgstr "-- Headless Rendering"

#: ../../manual/render/eevee/limitations.rst:207
msgid ""
"There is currently no support for using Eevee on headless systems (i.e. "
"without a Display Manager)."
msgstr ""

#~ msgid ""
#~ "Volumetrics are rendered only for the"
#~ " Camera \"Rays\". They don't appear "
#~ "in reflections/refractions and probes."
#~ msgstr ""

#~ msgid ""
#~ "Volumetric lighting does not respect the"
#~ " Lights shapes. They are treated as"
#~ " point lights"
#~ msgstr ""

#~ msgid "The chosen BSDF is currently arbitrary chosen."
#~ msgstr ""

#~ msgid ""
#~ "Objects are treated as infinitely thick,"
#~ " producing overshadowing if the Distance"
#~ " is really large."
#~ msgstr ""

#~ msgid ""
#~ "Refraction is faked by sampling the "
#~ "same reflection probe used by the "
#~ "Glossy BSDFs, but using the refracted"
#~ " view direction instead of the "
#~ "reflected view direction. Only the first"
#~ " refraction event is modeled correctly. "
#~ "An approximation of the second "
#~ "refraction event can be used for "
#~ "relatively thin objects using Refraction "
#~ "Depth."
#~ msgstr ""

#~ msgid ""
#~ "Eevee does not support \"specular to "
#~ "diffuse\" light bounces nor \"specular "
#~ "to specular\" light bounces. All "
#~ "specular lighting is turned off during"
#~ " baking."
#~ msgstr ""

#~ msgid "Only one BSSSDF can produce screen space subsurface scattering."
#~ msgstr ""

#~ msgid "The evaluated BSSSDF is currently arbitrarily chosen."
#~ msgstr ""

#~ msgid ""
#~ "Only scalling is adjustable per pixel."
#~ " Individual RGB radii are adjustable "
#~ "in the socket default value."
#~ msgstr ""

#~ msgid "Bump"
#~ msgstr "Độ Gồ Ghề -- Bump"

#~ msgid ""
#~ "All BSDF are using approximations to "
#~ "achieve realtime performance so there "
#~ "will always be small differences between"
#~ " Cycles and Eevee."
#~ msgstr ""

#~ msgid ""
#~ "Being an OpenGL engine, Eevee only "
#~ "uses the power of the :abbr:`GPU "
#~ "(Graphic Processing Unit, also known as"
#~ " Graphics Card)` to render. There is"
#~ " no plan to support :abbr:`CPU "
#~ "(Central Processing Unit)` (software) "
#~ "rendering as it would be very "
#~ "inefficient. CPU power is still needed"
#~ " to handle high complexity scene as"
#~ " the geometry is still being prepared"
#~ " by the CPU before rendering each "
#~ "frame."
#~ msgstr ""
#~ "Being an OpenGL engine, Eevee only "
#~ "uses the power of the :abbr:`GPU "
#~ "(Graphic Processing Unit, also known as"
#~ " Graphics Card)` to render. There is"
#~ " no plan to support :abbr:`CPU "
#~ "(Central Processing Unit)` (software) "
#~ "rendering as it would be very "
#~ "inefficient. CPU power is still needed"
#~ " to handle high complexity scene as"
#~ " the geometry is still being prepared"
#~ " by the CPU before rendering each "
#~ "frame."

#~ msgid ""
#~ "Shadows are not supported on light "
#~ "instances (dupli objects, group instancing)."
#~ msgstr ""

#~ msgid ""
#~ "Refraction is faked by sampling the "
#~ "same reflection probe used by the "
#~ "Glossy BSDFs, but using the refracted"
#~ " view direction instead of the "
#~ "reflected view direction. Only the first"
#~ " refraction event is modeled correctly. "
#~ "An approximation of the second "
#~ "refraction event can be used for "
#~ "relatively thin objects using Refraction "
#~ "Depth. Using Screen Space refraction "
#~ "will refract what is visible in."
#~ msgstr ""

