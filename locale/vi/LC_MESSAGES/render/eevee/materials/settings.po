# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.80 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@googlemail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.80 Manual 2.80\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-18 20:54+0100\n"
"PO-Revision-Date: 2019-04-22 13:17+0100\n"
"Last-Translator: Hoang Duy Tran <hoangduytran1960@googlemail.com>\n"
"Language: vi\n"
"Language-Team: London, UK <hoangduytran1960@googlemail.com>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../manual/render/eevee/materials/settings.rst:4
msgid "Material Settings"
msgstr "-- Material Settings"

#: ../../manual/render/eevee/materials/settings.rst:6
msgid "Reference"
msgstr "Tham Chiếu -- Reference"

msgid "Panel"
msgstr "Bảng -- Panel"

#: ../../manual/render/eevee/materials/settings.rst:9
msgid ":menuselection:`Material --> Options`"
msgstr ":menuselection:`Nguyên Liệu (Material) --> Tùy Chọn (Options)`"

#: ../../manual/render/eevee/materials/settings.rst:13
msgid "Blend Mode"
msgstr "Chế Độ Hòa Trộn -- Blend Mode"

#: ../../manual/render/eevee/materials/settings.rst:15
msgid "After calculating the color of a surface, Eevee needs to know how to add it to the color buffer. Depending on the blend mode the final color will be different."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:20
msgid "Additive, Multiplicative and Alpha Blending are considered \"Transparent\" blend mode. This has implications regarding screen space effects."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:25
#: ../../manual/render/eevee/materials/settings.rst:95
msgid "Opaque"
msgstr "Đục -- Opaque"

#: ../../manual/render/eevee/materials/settings.rst:24
msgid "The previous color will be overwritten by the surface color. The alpha component is ignored. This is the fastest option."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:29
msgid "Additive"
msgstr "Bổ Sung -- Additive"

#: ../../manual/render/eevee/materials/settings.rst:28
msgid "The surface color will be added to the previous color. The alpha value will be used to mix surface color with the neutral color black (0.0, 0.0, 0.0)."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:33
msgid "Multiplicative"
msgstr " -- Multiplicative"

#: ../../manual/render/eevee/materials/settings.rst:32
msgid "The previous color will be multiplied by the surface color. The alpha value will be used to mix surface color with the neutral color white (1.0, 1.0, 1.0)."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:37
msgid "Alpha Clip"
msgstr "Cắt Bằng Alpha -- Alpha Clip"

#: ../../manual/render/eevee/materials/settings.rst:36
msgid "The previous color will be overwritten by the surface color, but only if the alpha value is above the clip threshold."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:43
msgid "Alpha Hashed"
msgstr " -- Alpha Hashed"

#: ../../manual/render/eevee/materials/settings.rst:40
msgid "The previous color will be overwritten by the surface color, but only if the alpha value is above a random clip threshold. This statistical approach is noisy but is able to approximate alpha blending without any sorting problem. Increasing the sample count in the render settings will reduce the resulting noise."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:47
msgid "Alpha Blending"
msgstr " -- Alpha Blending"

#: ../../manual/render/eevee/materials/settings.rst:46
msgid "Use alpha blending to overlay the surface color on top of the previous color."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:50
msgid "Sorting Problem"
msgstr "-- Sorting Problem"

#: ../../manual/render/eevee/materials/settings.rst:52
msgid "When writing to the color buffer using transparent blend modes, the order in which the color blending happens is important as it can change the final output color. As of now Eevee does not support per-fragment (pixel) sorting or per-triangle sorting. Only per-object sorting is available and is automatically done on all transparent surfaces based on object origin."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:59
msgid "This per-object sorting has already a cost and having thousands of these objects in a scene will greatly degrade performance."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:62
msgid "Additive and Multiplicative blending are, individually, order independent. This means all the triangles of a surface rendered with one of these blending mode will always output the expected result if they do not intersect with other transparent surfaces. This will work even if the triangles of that surface intersect each others."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:67
msgid "However this does not work with Alpha Blending, where even triangle order is important. In this case you can disable the *Show Backside* option."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:74
msgid "Show Backside"
msgstr " -- Show Backside"

#: ../../manual/render/eevee/materials/settings.rst:71
msgid "If enabled all transparent fragments will be rendered. If disabled, only the frontmost surface fragments will be render. Disable this option to ensure correct appearance of transparent from any point of view."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:77
msgid "Transparent Shadow"
msgstr "-- Transparent Shadow"

#: ../../manual/render/eevee/materials/settings.rst:79
msgid "Type of shadows used for this transparent surface. Eevee does not support colored shadow maps."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:82
msgid "Half transparent shadows can be produced by using hashed transparent shadows and larger Soft value on shadow map."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:86
msgid "This option does not change the behavior of contact shadows which are traced using the depth buffer. If the material is writing to the depth buffer (in other words, if the blend mode is set to either *Opaque*, *Alpha Clip* or *Alpha Hashed*), contact shadows will be casted by the surface material regardless of the *Transparent Shadow* type."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:92
msgid "None"
msgstr "Không Có -- None"

#: ../../manual/render/eevee/materials/settings.rst:92
msgid "The surface will not cast any shadow."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:95
msgid "The surface will cast shadows like an opaque surface."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:99
msgid "Clip"
msgstr "Cắt/Xén -- Clip"

#: ../../manual/render/eevee/materials/settings.rst:98
msgid "The surface will cast shadows like an opaque surface, but only areas where the alpha value is above the clip threshold."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:104
msgid "Hashed"
msgstr " -- Hashed"

#: ../../manual/render/eevee/materials/settings.rst:102
msgid "The surface will cast shadows like an opaque surface, but only areas where the alpha value is above a random threshold."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:107
#: ../../manual/render/eevee/materials/settings.rst:121
msgid "Screen Space Refraction"
msgstr "-- Screen Space Refraction"

#: ../../manual/render/eevee/materials/settings.rst:109
msgid "Enabling Screen Space Refraction on a surface means that refraction BSDFs will do a raytrace against the depth buffer to find the most accurate refracted color. This has a big performance cost if the surface covers a lot of pixels."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:113
msgid "Screen Space Reflections is not compatible with Screen Space Refraction. It will be disabled on the surfaces that use it. Surfaces that use Screen Space Refraction will not appear in Screen Space Reflections."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:117
msgid "If this option is disabled or if the Screen Space Refraction raytrace fails, the refracted ray will use the color of the nearest probe."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:121
msgid "Enable screen space refraction."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:130
msgid "Refraction Depth"
msgstr " -- Refraction Depth"

#: ../../manual/render/eevee/materials/settings.rst:124
msgid "If Refraction Depth is not 0.0, all refraction BSDFs in the shader will act as if the object would be a thin slab of the refraction material with this thickness. This will model a second refraction event that will double the absorption color and start the refraction ray after this second event."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:129
msgid "This option greatly increase the quality of thin glass objects."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:133
msgid "Subsurface Translucency"
msgstr "-- Subsurface Translucency"

#: ../../manual/render/eevee/materials/settings.rst:135
msgid "Eevee's Subsurface Scattering algorithm works by blurring the irradiance in screen space. This means that if no visible part of the surface is lit, the effect disappear."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:138
msgid "However, true Subsurface Scattering goes beneath the surface and can travel a lot of distance. This is why a human ear lit from behind appears red on the front side."
msgstr ""

#: ../../manual/render/eevee/materials/settings.rst:141
msgid "That is what this effect mimics. This translucency approximation does only work with lamps that have shadow maps and only on Subsurface BSDFs (not the Translucency BSDFs). It does not work with indirect lighting. The soft parameter of the shadow maps also affects this effect."
msgstr ""

