# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@gmail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.79 Manual 2.79\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-27 20:49-0600\n"
"PO-Revision-Date: 2019-12-05 13:49+0000\n"
"Last-Translator: Hoang Duy Tran <hoangduytran1960@googlemail.com>\n"
"Language: vi\n"
"Language-Team: London, UK <hoangduytran1960@googlemail.com>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/render/cycles/gpu_rendering.rst:4
msgid "GPU Rendering"
msgstr "-- GPU Rendering"

#: ../../manual/render/cycles/gpu_rendering.rst:6
#, fuzzy
msgid ""
":abbr:`GPU (Graphics Processing Unit)` rendering makes it possible to use"
" your graphics card for rendering, instead of the CPU. This can speed up "
"rendering because modern GPUs are designed to do quite a lot of number "
"crunching. On the other hand, they also have some limitations in "
"rendering complex scenes, due to more limited memory, and issues with "
"interactivity when using the same graphics card for display and "
"rendering."
msgstr ""
":abbr:`GPU (Graphics Processing Unit)` rendering makes it possible to use"
" your graphics card for rendering, instead of the CPU. This can speed up "
"rendering, because modern GPUs are designed to do quite a lot of number "
"crunching. On the other hand, they also have some limitations in "
"rendering complex scenes, due to more limited memory, and issues with "
"interactivity when using the same graphics card for display and "
"rendering."

#: ../../manual/render/cycles/gpu_rendering.rst:12
msgid ""
"To enable GPU rendering, go into the :menuselection:`Preferences --> "
"System --> Cycles Render Devices`, and select either *CUDA*, *Optix* or "
"*OpenCL*. Next, you must configure each scene to use GPU rendering in "
":menuselection:`Properties --> Render --> Device`."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:18
msgid "Supported Hardware"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:20
msgid ""
"Blender supports two different technologies to render on the GPU "
"depending on the particular GPU manufacture."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:24
msgid "NVIDIA"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:26
msgid ""
":abbr:`CUDA (Compute Unified Device Architecture)` and Optix are "
"supported for GPU rendering with *NVIDIA* graphics cards."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:29
msgid ""
"CUDA requires graphics cards with compute capability 3.0 and higher. To "
"make sure your GPU is supported, see the `list of NVIDIA graphics cards "
"<https://developer.nvidia.com/cuda-gpus>`__ with the compute capabilities"
" and supported graphics cards. CUDA GPU rendering is supported on "
"Windows, macOS, and Linux."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:35
msgid ""
"For RTX graphics cards with hardware ray tracing support (e.g. Turing), "
"Optix can be used for better performance. Optix support is still "
"experimental and does not yet support all features, see below for "
"details."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:38
msgid ""
"Optix requires Geforce or Quadro RTX graphics card with recent NVIDIA "
"drivers, and is supported on Windows and Linux."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:42
msgid "AMD"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:44
msgid ""
":abbr:`OpenCL (Open Computing Language)` is supported for GPU rendering "
"with *AMD* graphics cards. Blender supports graphics cards with "
":abbr:`GCN (Graphics Core Next)` generation 2 and above. To make sure "
"your GPU is supported, see the `list of GCN generations "
"<https://en.wikipedia.org/wiki/Graphics_Core_Next#Iterations>`__ with the"
" GCN generation and supported graphics cards."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:51
msgid ""
"AMD OpenCL GPU rendering is supported on Windows and Linux, but not on "
"macOS."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:55
msgid "Supported Features and Limitations"
msgstr "-- Supported Features and Limitations"

#: ../../manual/render/cycles/gpu_rendering.rst:57
msgid ""
"CUDA and OpenCL rendering supports all the same features as CPU "
"rendering, except two:"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:59
msgid "Open Shading Language."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:60
msgid "Advanced volume light sampling to reduce noise."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:62
msgid ""
"Optix support is experimental and does not yet support the following "
"features:"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:64
msgid "Baking"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:65
msgid "Brachend Path Tracing"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:66
msgid "Ambient Occlusion and Bevel shader nodes"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:67
msgid "Combined CPU + GPU rendering"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:68
msgid "Using CPU memory for bigger scenes"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:72
msgid "Frequently Asked Questions"
msgstr "-- Frequently Asked Questions"

#: ../../manual/render/cycles/gpu_rendering.rst:75
msgid "Why is Blender unresponsive during rendering?"
msgstr "-- Why is Blender unresponsive during rendering?"

#: ../../manual/render/cycles/gpu_rendering.rst:77
msgid ""
"While a graphics card is rendering, it cannot redraw the user interface, "
"which makes Blender unresponsive. We attempt to avoid this problem by "
"giving back control over the GPU as often as possible, but a completely "
"smooth interaction cannot be guaranteed, especially on heavy scenes. This"
" is a limitation of graphics cards for which no true solution exists, "
"though we might be able to improve this somewhat in the future."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:83
msgid ""
"If possible, it is best to install more than one GPU, using one for "
"display and the other(s) for rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:88
msgid "Why does a scene that renders on the CPU not render on the GPU?"
msgstr "-- Why does a scene that renders on the CPU not render on the GPU?"

#: ../../manual/render/cycles/gpu_rendering.rst:90
msgid ""
"There maybe be multiple causes, but the most common is that there is not "
"enough memory on your graphics card. Typically while using GPU rendering "
"the GPU can only use the amount of memory that is on the GPU. This is "
"usually much smaller then the amount of system memory that the CPU uses. "
"In the case that the GPU runs out of memory Blender will automatically "
"try to also use system and GPU memory. This has a performance impact but "
"it is still faster than using CPU rendering. This feature does not work "
"on OpenCL rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:100
msgid "Can multiple GPUs be used for rendering?"
msgstr "-- Can multiple GPUs be used for rendering?"

#: ../../manual/render/cycles/gpu_rendering.rst:102
#, fuzzy
msgid ""
"Yes, go to :menuselection:`Preferences --> System --> Compute Device "
"Panel`, and configure it as you desire."
msgstr ""
"Yes, go to :menuselection:`Sở Thích Người Dùng (User Preferences) --> Hệ "
"Thống (System) --> Bảng Thiết Bị Tính Toán (Compute Device Panel)`, and "
"configure it as you desire."

#: ../../manual/render/cycles/gpu_rendering.rst:106
msgid "Would multiple GPUs increase available memory?"
msgstr "-- Would multiple GPUs increase available memory?"

#: ../../manual/render/cycles/gpu_rendering.rst:108
msgid "No, each GPU can only access its own memory."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:112
#, fuzzy
msgid "What renders faster, NVIDIA or AMD, CUDA or OpenCL?"
msgstr "-- What renders faster, Nvidia or AMD, CUDA or OpenCL?"

#: ../../manual/render/cycles/gpu_rendering.rst:114
msgid ""
"Currently NVIDIA with CUDA is rendering fastest, but this really depends "
"on the hardware you buy. Currently, CUDA and OpenCL are about the same in"
" the newest mid-range GPUs. However, CUDA is fastest in the respect of "
"high-end GPUs."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:120
msgid "Error Messages"
msgstr "Thông Điệp Báo Lỗi -- Error Messages"

#: ../../manual/render/cycles/gpu_rendering.rst:122
msgid ""
"In case of problems, be sure to install the official graphics drivers "
"from the NVIDIA or AMD website, or through the package manager on Linux."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:127
msgid "Unsupported GNU version! gcc 4.7 and up are not supported!"
msgstr "-- Unsupported GNU version! gcc 4.7 and up are not supported!"

#: ../../manual/render/cycles/gpu_rendering.rst:129
msgid ""
"On Linux, depending on your GCC version you might get this error. There "
"are two possible solutions:"
msgstr ""
"On Linux, depending on your GCC version you might get this error. There "
"are two possible solutions:"

#: ../../manual/render/cycles/gpu_rendering.rst:142
msgid "Use an alternate compiler"
msgstr "-- Use an alternate compiler"

#: ../../manual/render/cycles/gpu_rendering.rst:132
msgid ""
"If you have an older GCC installed that is compatible with the installed "
"CUDA toolkit version, then you can use it instead of the default "
"compiler. This is done by setting the ``CYCLES_CUDA_EXTRA_CFLAGS`` "
"environment variable when starting Blender."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:136
msgid "Launch Blender from the command line as follows:"
msgstr "Launch Blender from the command line as follows:"

#: ../../manual/render/cycles/gpu_rendering.rst:142
msgid "(Substitute the name or path of the compatible GCC compiler)."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:150
msgid "Remove compatibility checks"
msgstr "-- Remove compatibility checks"

#: ../../manual/render/cycles/gpu_rendering.rst:145
msgid ""
"If the above is unsuccessful, delete the following line in "
"``/usr/local/cuda/include/host_config.h``"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:152
msgid ""
"This will allow Cycles to successfully compile the CUDA rendering kernel "
"the first time it attempts to use your GPU for rendering. Once the kernel"
" is built successfully, you can launch Blender as you normally would and "
"the CUDA kernel will still be used for rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:158
msgid "CUDA Error: Invalid kernel image"
msgstr "-- CUDA Error: Invalid kernel image"

#: ../../manual/render/cycles/gpu_rendering.rst:160
msgid ""
"If you get this error on Windows 64-bit, be sure to use the 64-bit build "
"of Blender, not the 32-bit version."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:165
msgid "CUDA Error: Kernel compilation failed"
msgstr "-- CUDA Error: Kernel compilation failed"

#: ../../manual/render/cycles/gpu_rendering.rst:167
msgid ""
"This error may happen if you have a new NVIDIA graphics card that is not "
"yet supported by the Blender version and CUDA toolkit you have installed."
" In this case Blender may try to dynamically build a kernel for your "
"graphics card and fail."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:171
msgid "In this case you can:"
msgstr "In this case you can:"

#: ../../manual/render/cycles/gpu_rendering.rst:173
msgid ""
"Check if the latest Blender version (official or `experimental builds "
"<https://builder.blender.org/download/experimental/>`__) supports your "
"graphics card."
msgstr ""
"Check if the latest Blender version (official or `experimental builds "
"<https://builder.blender.org/download/experimental/>`__) supports your "
"graphics card."

#: ../../manual/render/cycles/gpu_rendering.rst:176
msgid ""
"If you build Blender yourself, try to download and install a newer CUDA "
"developer toolkit."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:178
msgid ""
"Normally users do not need to install the CUDA toolkit as Blender comes "
"with precompiled kernels."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:182
msgid "CUDA Error: Out of memory"
msgstr "-- CUDA Error: Out of memory"

#: ../../manual/render/cycles/gpu_rendering.rst:184
msgid ""
"This usually means there is not enough memory to store the scene on the "
"GPU. We can currently only render scenes that fit in graphics card "
"memory, and this is usually smaller than that of the CPU. See above for "
"more details."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:190
msgid ""
"One way to reduce memory usage is by using smaller resolutions for "
"textures. For example, 8k, 4k, 2k, and 1k image textures take up "
"respectively 256MB, 64MB, 16MB and 4MB of memory."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:195
#, fuzzy
msgid "The NVIDIA OpenGL driver lost connection with the display driver"
msgstr "-- The Nvidia OpenGL driver lost connection with the display driver"

#: ../../manual/render/cycles/gpu_rendering.rst:197
msgid ""
"If a GPU is used for both display and rendering, Windows has a limit on "
"the time the GPU can do render computations. If you have a particularly "
"heavy scene, Cycles can take up too much GPU time. Reducing Tile Size in "
"the Performance panel may alleviate the issue, but the only real solution"
" is to use separate graphics cards for display and rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:203
msgid ""
"Another solution can be to increase the time-out, although this will make"
" the user interface less responsive when rendering heavy scenes. `Learn "
"More Here <https://msdn.microsoft.com/en-"
"us/Library/Windows/Hardware/ff570087%28v=vs.85%29.aspx>`__."
msgstr ""
"Another solution can be to increase the time-out, although this will make"
" the user interface less responsive when rendering heavy scenes. `Learn "
"More Here <https://msdn.microsoft.com/en-"
"us/Library/Windows/Hardware/ff570087%28v=vs.85%29.aspx>`__."

#: ../../manual/render/cycles/gpu_rendering.rst:209
msgid "CUDA error: Unknown error in cuCtxSynchronize()"
msgstr "-- CUDA error: Unknown error in cuCtxSynchronize()"

#: ../../manual/render/cycles/gpu_rendering.rst:211
msgid ""
"An unknown error can have many causes, but one possibility is that it is "
"a time-out. See the above answer for solutions."
msgstr ""

#~ msgid ""
#~ "For RTX graphics cards with hardware "
#~ "ray tracing support (Turing+), Optix can"
#~ " be used for better performance. "
#~ "Optix support is still experimental and"
#~ " does not yet support all features,"
#~ " see below for details."
#~ msgstr ""

#~ msgid ""
#~ "There maybe be multiple causes, but "
#~ "the most common is that there is"
#~ " not enough memory on your graphics"
#~ " card. We can currently only render"
#~ " scenes that fit in graphics card "
#~ "memory, and this is usually smaller "
#~ "than that of the CPU. Note that,"
#~ " for example, 8k, 4k, 2k and 1k"
#~ " image textures take up respectively "
#~ "256MB, 64MB, 16MB and 4MB of "
#~ "memory."
#~ msgstr ""

#~ msgid ""
#~ "We do intend to add a system "
#~ "to support scenes bigger than GPU "
#~ "memory, but this will not be added"
#~ " soon."
#~ msgstr ""

