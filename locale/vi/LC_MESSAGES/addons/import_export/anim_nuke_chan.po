# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.82 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.82 Manual 2.82\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-27 20:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/addons/import_export/anim_nuke_chan.rst:4
msgid "Nuke Animation (chan)"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:6
msgid "Reference"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst
msgid "Category"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:9
msgid "Import-Export"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst
msgid "Menu"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:10
msgid ":menuselection:`File --> Import/Export --> Nuke (.chan)`"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:12
msgid ""
"The chan format is used to store camera animations, including location, "
"rotation and optionally field of view. This add-on can import and export "
"chan files using the active object's animation."
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:15
msgid ""
"A chan file is an ASCII file with parameter values saved in columns, one "
"column per parameter, one line per frame. The properties saved and read "
"by this script are:"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:22
msgid ""
"The file format itself is as simple as can be, but its simplicity is its "
"greatest advantage. It is being used by applications like Nuke and "
"Houdini, and since it is so simple to write an import or export script "
"for it is both fast and easy."
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:26
msgid ""
"``angle_y`` stands for vertical field of view. It is used for calculation"
" of the camera lens, and only applies to camera animations, while "
"importing/exporting object animation this parameter is skipped."
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:31
msgid "Usage"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:33
msgid ""
"The add-on gets the currently active object (works in Object Mode only) "
"and saves/loads its transformations from or to a simple ASCII file, "
"through the whole animation range (set either in the Timeline or in the "
"render settings). All you need to do is to select an object and run the "
"add-on in :menuselection:`File --> Import/Export --> Nuke(*.chan)`."
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:38
msgid ""
"Note that Chan saves only the raw property values (``rotation_x``, "
"``rotation_y``, ``rotation_z``, etc.), so you have to mind the rotation "
"order. In other words -- the rotation orders during export and import "
"must be the same (both are being set in the File Browser while "
"importing/exporting)."
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:43
msgid ""
"Another thing is the camera sensor size and its influence on camera lens."
" You can set the sensor size so you can fit a real life cameras (default "
"in Blender is 32 Ã— 18), the best practice in this case is using "
"horizontal fit for the camera (Nuke is using this as a default). While "
"importing the camera from a chan file you have to remember to set the "
"same sensor size as you had in Nuke (or other software that this camera "
"has been exported)."
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:49
msgid "File names"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:51
msgid ""
"It is a good practice to save the chan files with it's rotations order "
"and sensor size stored in a file name (i.e. "
"``camera_for_shot_ZXY_36x24.chan``) so you don't have to look for those "
"values in old files."
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:54
msgid "Exporting Geometry to Other Software"
msgstr ""

#: ../../manual/addons/import_export/anim_nuke_chan.rst:56
msgid ""
"If you want to export the objects movement to other software via the OBJ "
"format, you have to save it with the Z up, Y forward setting. After "
"loading it to the other software it will be rotated 90 degrees, but when "
"you apply the chan file it'll jump into its place."
msgstr ""

#~ msgid ""
#~ "Note that Chan saves only the raw"
#~ " property values ( ``rotation_x`` , "
#~ "``rotation_y`` , ``rotation_z`` , etc.), "
#~ "so you have to mind the rotation"
#~ " order. In other words -- the "
#~ "rotation orders during export and import"
#~ " must be the same (both are "
#~ "being set in the File Browser "
#~ "while importing/exporting)."
#~ msgstr ""

#~ msgid ""
#~ "If you want to export the objects"
#~ " movement to other software via the"
#~ " OBJ format, you have to save "
#~ "it with the Z-up, Y-forward setting. "
#~ "After loading it to the other "
#~ "software it will be rotated 90 "
#~ "degrees, but when you apply the "
#~ "chan file it'll jump into its "
#~ "place."
#~ msgstr ""

