# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 18:46+1000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/compositing/types/distort/displace.rst:4
msgid "Displace Node"
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:10
msgid "Displace Node."
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:12
msgid "This node displaces the pixel position based on an input vector."
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:14
msgid "Image"
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:15
msgid "Target input."
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:16
msgid "Vector"
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:17
msgid "Input of the displacement map."
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:21
msgid "Scale X, Y"
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:19
msgid ""
"Separate scaling of the vector input in X- and Y-direction. Acting as "
"multipliers by increasing or decreasing the strength of the displacement "
"along their respective axes."
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:23
msgid ""
"If the a color output is implicitly converted in the vector input, the "
"first channel (red) value determines displacement along X axis. The "
"second channel (green) the displacement along Y axis. If the input is a "
"greyscale image, where both the channel values are equal, the input image"
" will be displaced equally in both X and Y directions."
msgstr ""

#: ../../manual/compositing/types/distort/displace.rst:30
msgid ""
"This node could be used to model phenomena, like hot air distortion, "
"refractions of uneven glass or for surreal video effects."
msgstr ""

#~ msgid ""
#~ "Ever look down the road on a "
#~ "hot summer day? See how the image"
#~ " is distorted by the hot air? "
#~ "That's because the light is being "
#~ "bent by the air; the air itself"
#~ " is acting like a lens. This "
#~ "fancy little node does the same "
#~ "thing; it moves an input image's "
#~ "pixels based on an input vector "
#~ "mask (the vector mask mimics the "
#~ "effect of the hot air)."
#~ msgstr ""

#~ msgid ""
#~ "This can be useful for a lot "
#~ "of things, like hot air distortion, "
#~ "quick-and-dirty refraction, compositing "
#~ "live footage behind refracting objects "
#~ "like looking through bent glass or "
#~ "glass blocks, and more! Remember what"
#~ " HAL saw in 2001: Space Odyssey; "
#~ "that distorted wide-angle lens? Yup, "
#~ "this node can take a flat image"
#~ " and apply a mask to produce "
#~ "that image."
#~ msgstr ""

#~ msgid "The amount of displacement in the X and Y directions is determined by"
#~ msgstr ""

#~ msgid "The value of the mask's channels:"
#~ msgstr ""

#~ msgid "The scaling of the mask's channels"
#~ msgstr ""

#~ msgid ""
#~ "The (red) channel 1's value determines"
#~ " displacement along the positive or "
#~ "negative X axis. The (green) channel "
#~ "2's value determines displacement along "
#~ "the positive or negative Y axis."
#~ msgstr ""

#~ msgid ""
#~ "If both the channels' values are "
#~ "equal (i.e. a greyscale image), the "
#~ "input image will be displaced equally"
#~ " in both X and Y directions, "
#~ "and also according to the X scale"
#~ " and Y scale buttons. These scale "
#~ "buttons act as multipliers to increase"
#~ " or decrease the strength of the "
#~ "displacement along their respective axes. "
#~ "They need to be set to non-"
#~ "zero values for the node to have"
#~ " any effect."
#~ msgstr ""

#~ msgid ""
#~ "Because of this, you can use the"
#~ " displace node in two ways, with "
#~ "a greyscale mask (easy to paint, "
#~ "or take from a procedural texture), "
#~ "or with a vector channel or RGB"
#~ " image, such as a normal pass, "
#~ "which will displace the pixels based "
#~ "on the normal direction."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid ""
#~ "In this example, she's singing about "
#~ "dreams of the future. So, to "
#~ "represent this, we use a moving "
#~ "clouds texture (shot just by rendering"
#~ " the cloud texture on a moving "
#~ "plane) as the displacement map. Now, "
#~ "the colors in a black and white"
#~ " image go from zero (black) to "
#~ "one (white), which, if fed directly "
#~ "without scaling would only shift the "
#~ "pixels one position. So, we scale "
#~ "their effect in the X and Y "
#~ "direction."
#~ msgstr ""

#~ msgid ""
#~ "Upon reviewing it, sometimes stretching "
#~ "in both the X and Y direction "
#~ "made her face look fat, and we "
#~ "all can guess her reaction to "
#~ "looking fat on camera. SO, we "
#~ "scale it only half as much in "
#~ "the X so her face looks longer "
#~ "and thinner. Now, a single image "
#~ "does not do justice to the "
#~ "animation effect as the cloud moves, "
#~ "and this simple noodle does not "
#~ "reflect using blur and overlays to "
#~ "enhance (and complicate) the effect, but"
#~ " this is the core."
#~ msgstr ""

#~ msgid ""
#~ "Photos courtesy of Becca, no rights "
#~ "reserved. See also some movies of "
#~ "this node in action, made by the"
#~ " wizard programmer himself, by following"
#~ " this `external link "
#~ "<https://lists.blender.org/pipermail/bf-blender-"
#~ "cvs/2006-December/008773.html>`__"
#~ msgstr ""

#~ msgid "Music Video Distortion Example Using Displace"
#~ msgstr ""

