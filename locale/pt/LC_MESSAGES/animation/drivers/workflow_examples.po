# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# Ivan Paulos Tomé <greylica@gmail.com>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: Ivan Paulos Tomé <greylica@gmail.com>\n"
"POT-Creation-Date: 2016-10-12 18:22-0400\n"
"PO-Revision-Date: 2016-11-26 16:23-0300\n"
"Last-Translator: Ivan Paulos Tomé <greylica@gmail.com>\n"
"Language-Team: Ivan Paulos Tomé <greylica@gmail.com>\n"
"MIME-Version: 1.0\n"
"Language: pt_BR\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/animation/drivers/workflow_examples.rst:4
msgid "Workflow & Examples"
msgstr "Fluxo de trabalho e exemplos"

#: ../../manual/animation/drivers/workflow_examples.rst:7
msgid "Workflow"
msgstr "Fluxo de trabalho"

#: ../../manual/animation/drivers/workflow_examples.rst:9
msgid "There are some different ways to add drivers in Blender. These are some driver examples and workflow. After adding drivers they are usually modified in the *Graph Editor* with the mode set the *Drivers*."
msgstr "Existem algumas maneiras diferentes de adicionar controladores no Blender. Apresentamos aqui alguns exemplos de implementação de controladores e seu fluxo de trabalho. Após a adição dos controladores, eles são usualmente modificados dentro do *Editor gráfico* com o seu modo de funcionamento definido para *Controladores*."

#: ../../manual/animation/drivers/workflow_examples.rst:14
msgid "UI"
msgstr "Interface de usuário"

#: ../../manual/animation/drivers/workflow_examples.rst:16
msgid "The common way to add a driver to a property is to right click a property, then add a driver via the context menu."
msgstr "A maneira mais comum de adicionar um controlador á uma propriedade é clicar com o botão direito em uma propriedade, e depois adicionar um controlador através do menu de contexto."

#: ../../manual/animation/drivers/workflow_examples.rst:21
msgid "Add Drivers"
msgstr "Adicionar controlador"

#: ../../manual/animation/drivers/workflow_examples.rst:20
msgid "This will add drivers to the set of properties related to the selected one. For example, it will add drivers to X, Y, and Z for Rotation."
msgstr "Isto irá adicionar controladores para o conjunto de propriedades relacionadas aquela que fora escolhida. Por exemplo, irá adicionar controladores para as rotações X, Y e Z."

#: ../../manual/animation/drivers/workflow_examples.rst:24
msgid "Add Single Driver"
msgstr "Adicionando um único controlador."

#: ../../manual/animation/drivers/workflow_examples.rst:24
msgid "This will add a single driver to the selected property."
msgstr "Isto irá adicionar um único controlador para a propriedade selecionada."

#: ../../manual/animation/drivers/workflow_examples.rst:28
msgid "Drivers can also be added by pressing :kbd:`CTRL-D` with the mouse over the property set."
msgstr "Os controladores também pode ser adicionados através do atalho  :kbd:`CTRL-D` com o mouse pairando sobre a propriedade ou conjunto de propriedades."

#: ../../manual/animation/drivers/workflow_examples.rst:32
msgid "Expression"
msgstr "Expressão"

#: ../../manual/animation/drivers/workflow_examples.rst:34
msgid "This is a quick way to add drivers with a scripted expression. First click the property you want to add a driver to, then add a hash ``#`` and a scripted expression."
msgstr "Esta é uma maneira rápida de adicionar controladores através de uma expressão em formato de script. Primeiramente, clique na propriedade a qual você deseja adicionar um controlador, e depois adicione um caractere ``#`` (\"Jogo da velha\" ou \"cerquilha\" no Brasil, \"Cardinal\", em Portugal) e uma expressão em formato de script."

#: ../../manual/animation/drivers/workflow_examples.rst:37
msgid "Some examples:"
msgstr "Alguns exemplos:"

#: ../../manual/animation/drivers/workflow_examples.rst:39
msgid "``#frame``"
msgstr "``#quadro``"

#: ../../manual/animation/drivers/workflow_examples.rst:40
msgid "``#frame / 20.0``"
msgstr "``#quadro / 20.0``"

#: ../../manual/animation/drivers/workflow_examples.rst:41
msgid "``#sin(frame)``"
msgstr "``#sin(quadro)``"

#: ../../manual/animation/drivers/workflow_examples.rst:42
msgid "``#cos(frame)``"
msgstr "``#cos(quadro)``"

#: ../../manual/animation/drivers/workflow_examples.rst:46
msgid "Copy Paste"
msgstr "Copiar e colar"

#: ../../manual/animation/drivers/workflow_examples.rst:48
msgid "Drivers can be copied and pasted in the UI, via the context menu. When adding drivers with the same settings, this can save time modifying settings."
msgstr "Os controladores podem ser copiados e colados na interface de usuário, através do menu de contexto. Ao adicionar controladores com as mesmas definições, isto pode salvar bastante tempo na modificação de configurações."

#: ../../manual/animation/drivers/workflow_examples.rst:53
msgid "Transform Driver"
msgstr "Controlador de transformações"

#: ../../manual/animation/drivers/workflow_examples.rst:55
msgid "This example shows you how setup a transform driver. First make sure you are in the Front Ortho view. :kbd:`Numpad5`, :kbd:`Numpad1`."
msgstr "Este exemplo mostra a vocẽ como definir um controlador de transformações. Primeiro certifique-se de que vocẽ está dentro da visão frontal e no modo de visualização ortográfico. Caso não, use os atalhos :kbd:`Tecl. Num. 5`, :kbd:`Tecl. Num. 1`."

#: ../../manual/animation/drivers/workflow_examples.rst:58
msgid "In object mode, select then duplicate the default Cube. :kbd:`Shift-D`. Move \"Cube.001\" to a new location."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:59
msgid "With \"Cube.001\" selected, add a single driver to the *Rotation Y* property."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:60
msgid "Open the *Graph Editor*, set the Mode to *Drivers*."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:61
msgid "*Show Only Selected* is useful disabled for drivers, marked green in the picture."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:62
msgid "In the channels region, select the *Y Euler Rotation* property."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:63
msgid "Press :kbd:`N` to open the properties region, scroll down to Drivers panel."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:64
msgid "Change the *Type* to *Averaged Value*, this will return the averaged value of the driver variables."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:65
msgid "Modify the driver variable settings:"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:67
msgid "Type -- Transform Channel"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:68
msgid "Ob/Bone -- Cube"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:69
msgid "Transform Type -- X Location"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:70
msgid "Transform Space -- World Space"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:74
msgid "When finished, \"Cube.001\" should rotate on the Y axis when moving \"Cube\" left of right."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:78
msgid "Examples"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:81
msgid "Driver Expression"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:83
msgid "Here are some examples using the scripted expression Expr to set the Driver Value."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:87
msgid "Object Rotation."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:91
msgid "Orbit a Point"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:93
msgid "Here two drivers have been added to the Cube, X Location and Y Location."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:95
msgid "The scripted expressions are being used to set the object location."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:101
msgid "X Location Expr"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:101
msgid "``0 + (sin(frame / 8) * 4)``"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:99
msgid "``(frame/8)`` : is the current frame of the animation, divided by 8 to slow the orbit down. ``(sin( )*4)`` : This returns the sine of (frame/8), then multiplies by 4 for a bigger circle. ``0 +`` : is used to control the X Location offset of the orbit."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:107
msgid "Y Location Expr"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:107
msgid "``0 + (cos(frame / 8) * 4)``"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:105
msgid "``(frame / 8)`` : is the current frame of the animation, divided by 8 to slow the orbit down. ``(cos( ) * 4)`` : This returns the cosine of (frame/8), then multiplies by 4 for a bigger circle. ``0 +`` : is used to control the Y Location offset of the orbit."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:109
msgid "``frame`` is the same as bpy.context.scene.frame_current."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:113
msgid "Driver Namespace"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:115
msgid "There is a list of built-in driver functions and properties. These can be displayed via the Python Console::"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:139
msgid "This script will add a function to the driver namespace, which can then be used in the expression ``driver_func(frame)``::"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:154
msgid "Shape Key Driver"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:156
msgid "This example is a Shape Key Driver. The driver was added to the shape key Value."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:161
msgid "Shape Key Driver. Click to enlarge."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:164
msgid "This example uses the Armature Bone \"b\" 's Z Rotation to control the Value of a Shape Key. The bone rotation mode is set to XYZ Euler."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:167
msgid "The Driver F-Curve is mapped like so:"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:169
msgid "Bone Z Rotation 0.0 (0.0): Shape Key value 0.0"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:170
msgid "Bone Z Rotation -2.09 (-120.0): Shape Key value 1.0"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:172
msgid "This kind of driver can also be setup with the Variable Type Rotational Difference."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:174
msgid "See :doc:`Shape Keys </animation/shape_keys/index>` for more info."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:178
msgid "Drivers And Multiple Relative Shape Keys"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:180
msgid "The following screenshots illustrate combining shape keys, bones, and drivers to make multiple chained relative shape keys sharing a single root. While it lacks the convenience of the single Evaluation Time of an absolute shape key, it allows you to have more complex relationships between your shape keys."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:190
msgid "Key1 must handle conflicting values from the two bones."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:194
msgid "Key2A has different generator coefficients so it is activated in a different range of the bone's position."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:198
msgid "Key2B is the same as Key2A, but is controlled by the second bone."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:202
msgid "When both bones are low, Key2B and Key2A are deactivated and Key1 is at low influence."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:209
msgid "The Basis shape key has the stacks fully retracted. Key1 has the base fully extended. Key2A has the left stack fully extended. Key2B has the right stack fully extended. Key2A and Key2B are both relative to Key1 (as you can see in the field in the bottom right of the Shape Keys panel."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:214
msgid "The value of Key1 is bound to the position of bones by a driver with two variables. Each variable uses the world Z coordinate of a bone and uses the maximum value to determine how much the base should be extended. The generator polynomial is crafted such that the top of the dominant stack should line up with the bone for that stack."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:220
msgid "The value of Key2A is bound to the position of \"Bone.L\". Its generator parameters are crafted such that when Key1's value reaches 1, the value of Key2A starts increasing beyond zero. In this way, the top of the left stack will move with bone.L (mostly)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:225
msgid "The value of Key2B is bound to the position of \"Bone.R\". Its generator parameters are similar to Key2A so that the top of the right stack will move with bone.R (mostly)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:229
msgid "Since it is quite easy for bone.L and bone.R to be in positions that indicate conflicting values for Key1 there will be times when the bones do not line up with the tops of their respective stacks. If the driver for Key1 was to use Average or Minimum instead of Maximum to determine the value of the shape key then \"conflicts\" between bone.L and bone.R would be resolved differently. You will choose according to the needs of your animation."
msgstr ""
