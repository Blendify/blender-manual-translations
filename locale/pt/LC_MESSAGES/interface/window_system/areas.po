# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-29 15:07-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/interface/window_system/areas.rst:4
msgid "Areas"
msgstr ""

#: ../../manual/interface/window_system/areas.rst:6
msgid ""
"The application window is always a rectangle on your desktop. It is "
"divided up into a number of re-sizable areas. An area contains the "
"workspace for a particular type of editor, like a 3D View Editor, or an "
"Outliner."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:13
msgid "Arranging"
msgstr ""

#: ../../manual/interface/window_system/areas.rst:15
msgid ""
"Blender uses a novel screen-splitting approach to arrange areas. The idea"
" is that you split up that big application window into any number of "
"smaller (but still rectangular) non-overlapping area. That way, each area"
" is always fully visible, and it is very easy to work in one area and hop"
" over to work in another."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:23
msgid "Changing the Size"
msgstr ""

#: ../../manual/interface/window_system/areas.rst:25
msgid ""
"You can resize areas by dragging their borders with :kbd:`LMB`. Simply "
"move your mouse cursor over the border between two areas, until it "
"changes to a double-headed arrow, and then click and drag."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:31
msgid "Splitting"
msgstr ""

#: ../../manual/interface/window_system/areas.rst:36
msgid ""
"In the upper right and lower left corners of a area are the area splitter"
" widgets, and they look like a little ridged thumb grip. It both splits "
"and combines areas. When you hover over it, your cursor will change to a "
"cross (âœ›). :kbd:`LMB` and drag it to the left to split the area "
"vertically, or downward to split it horizontally."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:44
msgid "Joining"
msgstr ""

#: ../../manual/interface/window_system/areas.rst:46
msgid ""
"In order to merge two areas, they must be the same dimension in the "
"direction you wish to merge. For example, if you want to combine two "
"areas that are side-by-side, they must be the same height. If the one on "
"the left is not the same as the one on the right, you will not be able to"
" combine them horizontally. This is so that the combined area space "
"results in a rectangle. The same rule holds for joining two areas that "
"are stacked on top of one another; they must both have the same width. If"
" the one above is split vertically, you must first merge those two, and "
"then join the bottom one up to the upper one."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:60
msgid ""
"To merge the current area with the one above it (in the picture the "
"Properties Editor is being merged \"over\" the Outliner), hover the mouse"
" pointer over the area splitter. When the pointer changes to a cross, "
":kbd:`LMB` click and drag up to begin the process of combining. The upper"
" area will get a little darker, overlaid with an arrow pointing up. This "
"indicates that the lower (current) area will \"take over\" that darkened "
"area space. Let go of the :kbd:`LMB` to merge. If you want the reverse to"
" occur, move your mouse cursor back into the original (lower) area, and "
"it will instead get the overlay arrow."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:70
msgid "In the same way, windows may be merged left to right or vice versa."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:72
msgid ""
"If you press :kbd:`Esc` before releasing the mouse, the operation will be"
" aborted."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:76
msgid "Swapping Contents"
msgstr ""

#: ../../manual/interface/window_system/areas.rst:78
msgid ""
"You can swap the contents between two areas with :kbd:`Ctrl-LMB` on one "
"of the splitters of the initial area, dragging towards the target area, "
"and releasing the mouse there. The two areas do not need to be side by "
"side, though they must be inside the same window."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:85
msgid "Maximizing"
msgstr ""

#: ../../manual/interface/window_system/areas.rst:87
msgid ""
"The maximized area fill the whole application window. It contains the "
"Info Editor and the select area."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:90
msgid ""
"You can maximize an area with the :menuselection:`View --> Toggle Full "
"Screen` menu entry. To return to normal size, use again "
":menuselection:`View --> Toggle Full Screen`. Or :kbd:`RMB` on the "
"editors header and select *Maximize Area* and *Tiled Area* to return. In "
"the Info Editor header the *Back to Previous* button on the right of the "
"menus also returns to tiled areas."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:99
msgid ""
"A quicker way to achieve this is to use the shortcuts: :kbd:`Shift-"
"Spacebar`, :kbd:`Ctrl-Down` or :kbd:`Ctrl-Up` to toggle between maximized"
" and normal areas."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:104
msgid ""
"The area your mouse is currently hovering over is the one that will be "
"maximized using the keyboard shortcuts."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:109
msgid "Opening New Windows"
msgstr ""

#: ../../manual/interface/window_system/areas.rst:111
msgid ""
"The new window is a fully functional window, which is part of the same "
"instance of Blender. This can be useful, i.e. if you have multiple "
"monitors."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:114
msgid ""
"A new window can be created from :menuselection:`View --> Duplicate Area "
"into new Window`."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:116
msgid ""
"You can also create a new window from an existing area by :kbd:`Shift-"
"LMB` on the area splitter icon, then drag slightly."
msgstr ""

#: ../../manual/interface/window_system/areas.rst:119
msgid "The window can be closed with the OS *Close Window* button."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "..note::"
#~ msgstr ""

#~ msgid "Arranging Areas"
#~ msgstr ""

#~ msgid ""
#~ "Blender uses a novel screen-splitting"
#~ " approach to arrange areas. The "
#~ "application window is always a rectangle"
#~ " on your desktop. It divides it "
#~ "up into a number of re-sizable "
#~ "areas. An area contains the workspace"
#~ " for a particular type of editor, "
#~ "like a 3D View editor, or an "
#~ "Outliner editor. The idea is that "
#~ "you split up that big application "
#~ "window into any number of smaller "
#~ "(but still rectangular) non-overlapping "
#~ "area. That way, each area is "
#~ "always fully visible, and it is "
#~ "very easy to work in one area "
#~ "and hop over to work in another."
#~ msgstr ""

#~ msgid "Maximizing an Area"
#~ msgstr ""

#~ msgid ""
#~ "You can maximize an area to fill"
#~ " the whole application window with "
#~ ":menuselection:`View --> Toggle Full Screen`"
#~ " menu entry. To return to normal "
#~ "size, use again :menuselection:`View --> "
#~ "Toggle Full Screen`. A quicker way "
#~ "to achieve this is to use :kbd"
#~ ":`Shift-Spacebar`, :kbd:`Ctrl-Down` or :kbd"
#~ ":`Ctrl-Up` to toggle between maximized "
#~ "and areas."
#~ msgstr ""

#~ msgid "Splitting an Area"
#~ msgstr ""

#~ msgid ""
#~ "In the upper right and lower left"
#~ " corners of a area are the area"
#~ " splitter widgets, and they look like"
#~ " a little ridged thumb grip. It "
#~ "both splits and combines areas. When "
#~ "you hover over it, your cursor "
#~ "will change to a cross. :kbd:`LMB` "
#~ "and drag it to the left to "
#~ "split the area vertically, or downward"
#~ " to split it horizontally."
#~ msgstr ""

#~ msgid "Joining Two Areas"
#~ msgstr ""

#~ msgid ""
#~ "To merge the current area with the"
#~ " one above it (in the picture "
#~ "the properties editor is being merged"
#~ " \"over\" the Outliner), hover the "
#~ "mouse pointer over the area splitter."
#~ " When the pointer changes to a "
#~ "cross, :kbd:`LMB` click and drag up "
#~ "to begin the process of combining. "
#~ "The upper area will get a little"
#~ " darker, overlaid with an arrow "
#~ "pointing up. This indicates that the "
#~ "lower (current) area will \"take over\""
#~ " that darkened area space. Let go "
#~ "of the :kbd:`LMB` to merge. If you"
#~ " want the reverse to occur, move "
#~ "your mouse cursor back into the "
#~ "original (lower) area, and it will "
#~ "instead get the arrow overlay."
#~ msgstr ""

#~ msgid "Changing Area Size"
#~ msgstr ""

#~ msgid ""
#~ "You can resize areas by dragging "
#~ "their borders with :kbd:`LMB`. Simply "
#~ "move your mouse cursor over the "
#~ "border between two areas until it "
#~ "changes to a double-headed arrow, "
#~ "and then click and drag."
#~ msgstr ""

#~ msgid ""
#~ "You may wish to have a new "
#~ "window. This can be useful, for "
#~ "instance, if you have multiple monitors"
#~ " and want them to show different "
#~ "information on the same instance of "
#~ "Blender."
#~ msgstr ""

#~ msgid ""
#~ "A new window can be created from"
#~ " :menuselection:`Window --> Duplicate Window`."
#~ msgstr ""

#~ msgid ""
#~ "You can also create a new window"
#~ " from an existing area by :kbd"
#~ ":`Shift-LMB` on a area splitter, and"
#~ " dragging slightly. A new window pops"
#~ " up, with its maximize, minimize, "
#~ "close and other buttons (depending on"
#~ " your platform), containing a single "
#~ "area with a duplicate of the "
#~ "initial window on which you performed"
#~ " the operation."
#~ msgstr ""

#~ msgid ""
#~ "Once you have that new window, you"
#~ " can move it to the other "
#~ "monitor (or leave it in the "
#~ "current one); you can resize it "
#~ "(or keep it unchanged); you can "
#~ "also arrange its contents in the "
#~ "same way discussed so far (split "
#~ "and resize areas, and tune them as"
#~ " needed), and so on."
#~ msgstr ""

