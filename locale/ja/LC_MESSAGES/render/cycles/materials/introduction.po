# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-19 14:01-0400\n"
"PO-Revision-Date: 2017-03-21 11:36+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: Takashi Sugawara <aimaimokomoko@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"X-Generator: Poedit 1.8.7.1\n"

#: ../../manual/render/cycles/materials/introduction.rst:4
msgid "Introduction"
msgstr "導入"

#: ../../manual/render/cycles/materials/introduction.rst:6
msgid ""
"Materials define the appearance of meshes, curves and other objects. "
"They consist of three shaders, defining the appearance of the surface of "
"the mesh, the volume inside the mesh, and displacement of the surface of "
"the mesh."
msgstr ""
"マテリアルはメッシュ、カーブあるいはその他のオブジェクトの見た目を定義し"
"ます。マテリアルは 3 つのシェーダーからなり、メッシュの surface (サーフェ"
"ス)の見た目、メッシュ内部の volume (ボリューム)、そしてメッシュのサーフェ"
"スの displacement (ディスプレイスメント)です。"

#: ../../manual/render/cycles/materials/introduction.rst:15
msgid "Surface Shader"
msgstr "サーフェスシェーダー"

#: ../../manual/render/cycles/materials/introduction.rst:17
msgid ""
"The surface shader defines the light interaction at the surface of the "
"mesh."
msgstr "サーフェスシェーダーはメッシュ表面の光に対する反応を定義します。"

#: ../../manual/render/cycles/materials/introduction.rst:21
msgid ":doc:`Surface Shader </render/cycles/materials/surface>`."
msgstr ":doc:`サーフェスシェーダー </render/cycles/materials/surface>`."

#: ../../manual/render/cycles/materials/introduction.rst:25
msgid "Volume Shader"
msgstr "ボリュームシェーダー"

#: ../../manual/render/cycles/materials/introduction.rst:27
msgid ""
"When the surface shader does not reflect or absorb light, it enters into "
"the volume. If no volume shader is specified, it will pass straight "
"through to the other side of the mesh."
msgstr ""
"サーフェスシェーダーが光線を反射しないかもしくは吸収する場合、その光線は"
"ボリュームに入射します。もしボリュームシェーダーが定義されていない場合、"
"入射した光線は反対側のメッシュに向かって通過します。"

#: ../../manual/render/cycles/materials/introduction.rst:30
msgid ""
"If it is defined, a volume shader describes the light interaction as it "
"passes through the volume of the mesh. Light may be scattered, absorbed, "
"or emitted at any point in the volume."
msgstr ""
"ボリュームシェーダーが定義されている場合、ボリュームシェーダーはメッシュ"
"のボリュームを通過する光線に対する反応を定義します。光線はボリューム内の"
"あらゆる場所で錯乱、吸収あるいは発射されます。"

#: ../../manual/render/cycles/materials/introduction.rst:34
msgid ""
"A material may have both a surface and a volume shader, or only one of "
"either. Using both may be useful for materials such as glass, water or "
"ice, where you want some of the light to be absorbed as it passes "
"through the surface, combined with e.g. a glass or glossy shader at the "
"surface."
msgstr ""
"一つのマテリアルはサーフェスシェーダーとボリュームシェーダーの両方、もし"
"くはいずれか一つだけを持ちます。両方を用いてサーフェスでガラスや光沢を表"
"現するシェーダーを組み合わせる事は、光線をある程度吸収させながらその表面"
"を通過させるガラス、水や氷といったマテリアルを表現する上で役立ちます。"

#: ../../manual/render/cycles/materials/introduction.rst:41
msgid ":doc:`Volume Shader </render/cycles/materials/volume>`."
msgstr ":doc:`ボリュームシェーダー </render/cycles/materials/volume>`."

#: ../../manual/render/cycles/materials/introduction.rst:45
msgid "Displacement"
msgstr "ディスプレイスメント"

#: ../../manual/render/cycles/materials/introduction.rst:47
msgid ""
"The shape of the surface and the volume inside it may be altered by "
"displacement shaders. This way, textures can then be used to make the "
"mesh surface more detailed."
msgstr ""
"サーフェスの形状と内部のボリュームはディスプレイスメントシェーダーによっ"
"て変化する場合が有ります。これを用いると、メッシュの表面をより詳細に表現"
"するのにテクスチャを用いる事ができます。"

#: ../../manual/render/cycles/materials/introduction.rst:50
msgid ""
"Depending on the settings, the displacement may be virtual, only "
"modifying the surface normals to give the impression of displacement, "
"which is known as bump mapping, or a combination of real and virtual "
"displacement."
msgstr ""
"設定によって、ディスプレイスメントは仮想的な物や、サーフェスの法線に対し"
"てのみディスプレイスメントの度合いを影響させるバンプマッピングと呼ばれる"
"手法や、実際のディスプレイスメントと仮想のディスプレイスメントとを組み合"
"わせる事ができます。"

#: ../../manual/render/cycles/materials/introduction.rst:56
msgid ":doc:`Displacement </render/cycles/materials/displacement>`."
msgstr ""
":doc:`ディスプレイスメント </render/cycles/materials/displacement>`."

#: ../../manual/render/cycles/materials/introduction.rst:60
msgid "Energy Conservation"
msgstr "エネルギーの節約"

#: ../../manual/render/cycles/materials/introduction.rst:62
msgid ""
"The material system is built with physics-based rendering in mind, "
"cleanly separating how a material looks and which rendering algorithm is "
"used to render it. This makes it easier to achieve realistic results and "
"balanced lighting, though there are a few things to keep in mind."
msgstr ""
"マテリアルの機能は物理法則に基づいたレンダリングを行い、どのようにマテリ"
"アルが見えるかという事とレンダー処理にどのレンダリングアルゴリズムを用い"
"るかという事を明確に区別します。この仕組みによって、覚えておくべき事がい"
"くつか有りますが、現実感の有る出力結果とバランスの取れたライティング結果"
"を得る事が容易になっています。"

#: ../../manual/render/cycles/materials/introduction.rst:67
msgid ""
"In order for materials to work well with global illumination, they "
"should be, speaking in terms of physics, energy conserving. That means "
"they cannot reflect more light than comes in. This property is not "
"strictly enforced, but if colors are in the range 0.0 to 1.0, and :abbr:"
"`BSDF (Bidirectional scattering distribution function)` s are only mixed "
"together with the Mix Shader node, this will automatically be true."
msgstr ""
"多様な光源と調和するマテリアルは、物理における言い方をすれば、省エネル"
"ギー的でなければなりません。それは入射する光よりも多くの光を反射しないと"
"いう事です。この性質は強制的に適用できませんが、カラーが 0.0 から 1.0 の"
"範囲内であり、 :abbr:`BSDF (Bidirectional scattering distribution "
"function)` が Mix Shader ノードによってのみ合成される場合、自動的にそのよ"
"うになります。"

#: ../../manual/render/cycles/materials/introduction.rst:74
msgid ""
"It is however, possible to break this, with color values higher than 1.0 "
"or using the Add Shader node, but one must be careful when doing this to "
"keep materials behaving predictably under various lighting conditions. "
"It can result in a reflection adding light into the system at each "
"bounce, turning a :abbr:`BSDF (Bidirectional scattering distribution "
"function)` into a kind of emitter."
msgstr ""
"ただ、1.0 より高いカラー値もしくは Add Shader ノードを用いる事でこの状態"
"を破綻させる事ができますが、予想される多様な光源下でのマテリアルの振る舞"
"いを維持するため、その処理を行う場合は注意する必要があります。反射する度"
"に光量を増加させる設定によって、 :abbr:`BSDF (Bidirectional scattering "
"distribution function)` がエミッターのようになってしまうかもしれません。"
