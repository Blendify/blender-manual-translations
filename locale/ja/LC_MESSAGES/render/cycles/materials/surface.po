# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-03 22:02-0400\n"
"PO-Revision-Date: 2017-03-21 23:08+0900\n"
"Last-Translator: Takashi Sugawara <aimaimokomoko@gmail.com>\n"
"Language: ja\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../manual/render/cycles/materials/surface.rst:5
msgid "Surface"
msgstr "サーフェス"

#: ../../manual/render/cycles/materials/surface.rst:7
msgid ""
"The surface shader defines the light interaction at the surface of the "
"mesh. One or more :abbr:`BSDF (Bidirectional scattering distribution "
"function)`'s specify if incoming light is reflected back, refracted into "
"the mesh, or absorbed."
msgstr ""
"サーフェスシェーダーはメッシュの表面における光の反応を定義します。1 個以上の :abbr:`BSDF (Bidirectional "
"scattering distribution function)` "
"によって入射した光線が反射されるか、メッシュ内部に屈折して入射するか、吸収されるかが定義されます。"

#: ../../manual/render/cycles/materials/surface.rst:11
msgid ""
"Emission defines how light is emitted from the surface, allowing any "
"surface to become a light source."
msgstr "Emission はそのサーフェスからどのように光線が発射されるかを定義します、全てのサーフェスは光源になる事ができます。"

#: ../../manual/render/cycles/materials/surface.rst:16
msgid "Terminology"
msgstr "用語"

#: ../../manual/render/cycles/materials/surface.rst:19
msgid "BSDF"
msgstr "BSDF"

#: ../../manual/render/cycles/materials/surface.rst:19
msgid ""
"stands for bidirectional scattering distribution function. It defines how"
" light is reflected and refracted at a surface."
msgstr ""
"Bidirectional Scattering Distribution Function "
"(双方向性拡散分布関数)の略称です。この関数はある表面でどのように光が反射と屈折するかを表します。"

#: ../../manual/render/cycles/materials/surface.rst:22
msgid "Reflection"
msgstr "Reflection (反射)"

#: ../../manual/render/cycles/materials/surface.rst:22
#, fuzzy
msgid ""
":abbr:`BSDF (Bidirectional scattering distribution function)`\\ s reflect"
" an incoming ray on the same side of the surface."
msgstr ""
":abbr:`BSDF (Bidirectional Scattering Distribution Function)` "
"はその表面の同じ面から入射した光線を反射します。"

#: ../../manual/render/cycles/materials/surface.rst:25
msgid "Transmission"
msgstr "Transmission (透過)"

#: ../../manual/render/cycles/materials/surface.rst:25
#, fuzzy
msgid ""
":abbr:`BSDF (Bidirectional scattering distribution function)`\\ s "
"transmit an incoming ray through the surface, leaving on the other side."
msgstr ""
":abbr:`BSDF (Bidirectional scattering distribution function)` "
"はその表面を通る光線を、別の面へと透過させます。"

#: ../../manual/render/cycles/materials/surface.rst:30
msgid "Refraction"
msgstr "Refraction (屈折)"

#: ../../manual/render/cycles/materials/surface.rst:28
#, fuzzy
msgid ""
":abbr:`BSDF (Bidirectional scattering distribution function)`\\ s are a "
"type of *Transmission*, transmitting an incoming ray and changing its "
"direction as it exits on the other side of the surface."
msgstr ""
":abbr:`BSDF (Bidirectional Scattering Distribution Function)` "
"は、入射した光線の方向を他の表面から出るように変えて通過させる、 *屈折* の一種です。"

#: ../../manual/render/cycles/materials/surface.rst:33
msgid "BSDF Parameters"
msgstr "BSDF のパラメータ"

#: ../../manual/render/cycles/materials/surface.rst:35
msgid ""
"A major difference from non-physically based renderers is that direct "
"light reflection from lamps and indirect light reflection of other "
"surfaces are not decoupled, but rather handled using a single :abbr:`BSDF"
" (Bidirectional scattering distribution function)`. This limits the "
"possibilities a bit, but we believe overall it is helpful in creating "
"consistent-looking renders with fewer parameters to tune."
msgstr ""
"物理を基礎としないレンダラーとの大きな違いは、光源から直接当たる光の反射と他のサーフェスから間接的に反射された光が区別されず、一つの "
":abbr:`BSDF (Bidirectional Scattering Distribution Function)` "
"に基づいて扱われるという点です。この特徴は表現の可能性を少々制限する物ですが、我々はこの特徴が調整するパラメータを減らして一貫性の有る見た目を作り出すレンダーの助けとなる事を信じて疑いません。"

#: ../../manual/render/cycles/materials/surface.rst:57
msgid "Roughness"
msgstr "Roughness (表面粗さ)"

#: ../../manual/render/cycles/materials/surface.rst:42
#, fuzzy
msgid ""
"For the glossy :abbr:`BSDF (Bidirectional scattering distribution "
"function)`\\ s, the *roughness* parameter controls the sharpness of the "
"reflection, from 0.0 (perfectly sharp) to 1.0 (very soft). Compared to "
"*hardness* or *exponent* parameters, it has the advantage of being in the"
" range 0.0..1.0, and as a result gives more linear control and is more "
"easily textureable. The relation is roughly: *roughness* = 1 - "
"1/*hardness*"
msgstr ""
"光沢を定義する :abbr:`BSDF (Bidirectional scattering distribution function)` "
"にとって、 *Roughness* のパラメータは反射の鮮明さを調節する物であり、その設定値は 0.0 (完全に鮮明) から 1.0 "
"(とても不明瞭) までです。*hardness* と *exponent* パラメータと比較して、0.0..1.0 "
"という範囲を持っているという利点が有り、より線形的な調整とテクスチャ化しやすいという結果につながっています。関係式はおよそ以下のような物です: "
"*roughness* = 1 - 1/*hardness*"

#: ../../manual/render/cycles/materials/surface.rst:51
#, fuzzy
msgid ""
"Currently Blender is coded to use an unsquared model. So if you are using"
" a :term:`Roughness Map` chances are that the result will not be "
"accurate. To fix this, you can square the texture by connecting the "
"texture to a :doc:`Math node </render/cycles/nodes/types/converter/math>`"
" and either setting it to *Multiply* and inputing the texture in both "
"input sockets, or using the *Power* function and setting the second input"
" to 2."
msgstr ""
"現在の Blender は非二乗値のモデルを利用するように実装されています。そのため :term:`Roughness Map` "
"を利用しても恐らく正確な結果は得られないでしょう。これを修正するため、テクスチャを :doc:`Math ノード "
"</render/cycles/nodes/types/converter/math>` に接続してその入力両方にテクスチャを渡して "
"*Multiply* に設定、あるいは *Power* に設定して二番目の入力値を 2 にする事で、テクスチャを二乗値化します。"

