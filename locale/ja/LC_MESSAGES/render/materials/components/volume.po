# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 16:58+0200\n"
"PO-Revision-Date: 2017-03-22 13:55+0900\n"
"Last-Translator: Takashi Sugawara <aimaimokomoko@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../manual/render/materials/components/volume.rst:4
#, fuzzy
msgid "Volumes"
msgstr "ボリューム"

#: ../../manual/render/materials/components/volume.rst:6
msgid ""
"Volume rendering can be used to render effects like fire, smoke, mist, "
"absorption in glass, and many other effects that cannot be represented by"
" surface meshes alone."
msgstr "ボリュームのレンダリングは炎、煙、霧、ガラスによる光の吸収等、サーフェスのメッシュのみでは表現できない効果のために用いることができます。"

#: ../../manual/render/materials/components/volume.rst:9
msgid ""
"To set up a volume, you create a mesh that defines the bounds within "
"which the volume exists. In the material you typically remove the surface"
" nodes and instead connect volume nodes to define the shading inside the "
"volume. For effects such as absorption in glass you can use both a "
"surface and volume shader. The world can also use a volume shader to "
"create effects such as mist."
msgstr ""
"ボリュームを設定するため、その中にボリュームが存在するという境界を定めるメッシュを作ります。マテリアルでは通常 Surface "
"ノードを削除して代わりに Volume "
"ノードを用意してボリューム内のシェーディングを定義します。ガラスが吸収する光といった効果のためにサーフェスシェーダーとボリュームシェーダー両方を用いることもできます。ワールドに対して霧のような効果を持たせるためにボリュームシェーダーを用いることもできます。"

#: ../../manual/render/materials/components/volume.rst:17
msgid "Shading"
msgstr ""

#: ../../manual/render/materials/components/volume.rst:20
msgid "Principled Volume"
msgstr ""

#: ../../manual/render/materials/components/volume.rst:22
msgid ""
":doc:`Principled Volume </render/shader_nodes/shader/volume_principled>` "
"is a physically-based volume shader that can be used to create a wide "
"range of volume materials. It supports scattering, absorption and "
"emission in one easy to use node. Fire can be rendered with blackbody "
"emission."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:29
msgid "Smoke and fire rendered with Principled Volume shader."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:33
msgid "Volume Components"
msgstr ""

#: ../../manual/render/materials/components/volume.rst:35
msgid ""
"For more control, volume shading components can be manually combined into"
" a custom shader setup."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:37
#, fuzzy
msgid ""
":doc:`Volume Absorption </render/shader_nodes/shader/volume_absorption>` "
"will absorb part of the light as it passes through the volume. This can "
"be used to shade for example black smoke or colored glass objects, or "
"mixed with the volume scatter node. This node is similar to the "
"transparent BSDF node, it blocks part of the light and lets other light "
"pass straight through."
msgstr ""
"Volume Absorption (ボリュームによる吸収) "
"はボリュームを通過する光に対する吸収の作用を担います。このノードは例えば黒い煙や色付きのガラスオブジェクトのシェーディング、あるいは Volume"
" Scatter ノードとの併用で用いられます。このノードは Transparent BSDF "
"ノードと似ており、光線の一部を吸収して光線の一部を通過させます。"

#: ../../manual/render/materials/components/volume.rst:42
#, fuzzy
msgid ""
":doc:`Volume Scatter </render/shader_nodes/shader/volume_scatter>` lets "
"light scatter in other directions as it hits particles in the volume. The"
" anisotropy defines in which direction the light is more likely to "
"scatter. A value of 0 will let light scatter evenly in all directions "
"(similar to the diffuse BSDF node), negative values let light scatter "
"mostly backwards, and positive values let light scatter mostly forward. "
"This can be used to shade white smoke or clouds for example."
msgstr ""
"Volume Scatter (ボリュームによる拡散) はボリューム中の粒子に衝突した光を他方に拡散させます。Anisotropy (異方向性) "
"は光がどの方向に拡散しきそうであるかを定義します。この値が 0 であれば光は全ての方向に対して等しく拡散し (Diffuse BSDF "
"ノードに働きが似ています)、負の値は光線を後方に拡散させ、正の値は光線を前方に拡散させます。このノードは例えば白い煙や雲をシェードする際に利用できます。"

#: ../../manual/render/materials/components/volume.rst:48
msgid ""
":doc:`Emission </render/shader_nodes/shader/emission>` will emit light "
"from the volume, for example for fire."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:54
#, fuzzy
msgid "Volume Absorption, Scatter and Emission"
msgstr "ボリュームシェーダー: Absorption/Absorption と Scatter/Emission 。"

#: ../../manual/render/materials/components/volume.rst:58
msgid "Attributes"
msgstr ""

#: ../../manual/render/materials/components/volume.rst:60
msgid ""
"When rendering smoke and fire, volume attributes are used to define the "
"shape and shading of the volume. The Principled Volume shader will use "
"them by default, while custom volume shaders can use the Attribute node "
"to get attributes such as density, color and temperature."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:66
msgid "Density"
msgstr "Density (密度)"

#: ../../manual/render/materials/components/volume.rst:68
msgid ""
"All volume shaders have a density input. The density defines how much of "
"the light will interact with the volume, getting absorbed or scattered, "
"and how much will pass straight through. For effects such as smoke you "
"would specify a density field to indicate where in the volume there is "
"smoke and how much (density bigger than 0), and where there is no smoke "
"(density equals 0)."
msgstr ""
"全てのボリュームシェーダーは Density の入力を持ちます。Density "
"はどれだけの光がボリュームと、吸収や拡散として、反応するかを定義し、どれだけが通過するかを定義しています。煙のような効果を得るためには "
"Density の値を、煙が存在してどの程度であるか (Density は 0 より大きな値) と、煙が存在しない (Density は 0) "
"との間でどれだけの値にするかを設定することになるでしょう。"

#: ../../manual/render/materials/components/volume.rst:74
msgid ""
"Volumes in the real world consist of particles, a higher density means "
"there are more particles per unit volume. More particles means there is a"
" higher chance for light to collide with a particle and get absorbed or "
"scattered, rather than passing straight through."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:81
msgid "Mesh Volumes"
msgstr ""

#: ../../manual/render/materials/components/volume.rst:83
msgid ""
"Meshes used for volume render should be closed and :term:`manifold`. That"
" means that there should be no holes in the mesh. Each edge must be "
"connected to exactly two faces such that there are no holes or T-shaped "
"faces where three or more faces are connected to an edge."
msgstr ""
"ボリュームレンダーに用いるメッシュは閉じた状態でありかつ :term:`manifold` (多様体) "
"でなければなりません。これはそのメッシュ状に穴が無いことを意味します。辺は厳格に 2 つの面に繋がっていて穴や一つの辺に 3 "
"つ以上の面が繋がった状態で T 字型の面となっている箇所があってはいけません。"

#: ../../manual/render/materials/components/volume.rst:89
msgid ""
"Normals must point outside for correct results. The normals are used to "
"determine if a ray enters or exits a volume, and if they point in a wrong"
" direction, or there is a hole in the mesh, then the renderer is unable "
"to decide what is the inside or outside of the volume."
msgstr "正しい結果を得るため法線は外側を向いている必要が有ります。法線はボリュームに対して光が出入りする方向を決め、もしその方向が間違っていたり、メッシュ上に穴がある場合、レンダラーはボリュームの内側と外側を決定する事ができなくなります。"

#: ../../manual/render/materials/components/volume.rst:94
msgid "These rules are the same as for rendering glass refraction correctly."
msgstr "これらのルールはガラスの屈折を正しくレンダリングする際も同様です。"

#: ../../manual/render/materials/components/volume.rst:98
msgid "World Volume"
msgstr ""

#: ../../manual/render/materials/components/volume.rst:100
#, fuzzy
msgid ""
"A volume shader can also be applied to the world, filling the entire "
"space."
msgstr "ボリュームシェーダは空間全体を満たすワールドに対しても適用できます。"

#: ../../manual/render/materials/components/volume.rst:102
#, fuzzy
msgid ""
"Currently, this is most useful for night time or other dark scenes, as "
"the world surface shader or sun lights will have no effect if a volume "
"shader is used. This is because the world background is assumed to be "
"infinitely far away, which is accurate enough for the sun for example. "
"However, for modeling effects such as fog or atmospheric scattering, it "
"is not a good assumption that the volume fills the entire space, as most "
"of the distance between the sun and the earth is empty space. For such "
"effects it is be better to create a volume object surrounding the scene. "
"The size of this object will determine how much light is scattered or "
"absorbed."
msgstr ""
"現状では、ワールドに対してボリュームシェーダが用いられている場合はサーフェスシェーダーや Sun "
"光源が何の効果も持たないため、夜景やその他暗いシーンの表現に最も有用です。これはワールドの背景が、例えば日光が実際にそうであるように、無限遠に存在するとされるためです。しかし、霧や空気中の拡散の効果をモデリングする上では、太陽と地球間の空間の大半は空っぽの空間である事から分かるように、ボリュームが空間全てを等しく満たすというのは好ましくない前提です。こういった効果を表現するにはシーンの環境のためのボリュームを作成したほうが良いでしょう。そのオブジェクトの大きさによってどれだけ光を拡散もしくは吸収するのかが決まります。"

#: ../../manual/render/materials/components/volume.rst:114
msgid "Multiple Scattering"
msgstr ""

#: ../../manual/render/materials/components/volume.rst:116
#, fuzzy
msgid ""
"Real-world effects such as scattering in clouds or subsurface scattering "
"require many scattering bounces. However, unbiased rendering of such "
"effects can be noisy, so by default the number of bounces is zero in "
"Cycles, and no support is available in Eevee. The effect you get when "
"rendering with zero volume bounces is what is known as \"single "
"scattering\", the effect from more bounces is \"multiple scattering\"."
msgstr ""
"雲の拡散や表面下錯乱といった現実世界の効果は多くの拡散光のバウンスを必要とします。しかしながら、こういった効果のための指向性がないレンダリングは遅くて煩雑な物です。一般的な動画制作の場面ではレンダー時間を調節できるよう"
" 0 もしくは 1 回のバウンスのみを用います。0 の値のバウンスによって得られるレンダリングの効果は \"単一錯乱\" "
"として知られる物で、複数のバウンスによる効果は \"多重錯乱\" と呼ばれます。"

#: ../../manual/render/materials/components/volume.rst:122
msgid ""
"For rendering materials like skin or milk that require multiple "
"scattering, subsurface scattering is more efficient and easier to "
"control. Particularly the random walk method can accurately render such "
"materials."
msgstr ""

#: ../../manual/render/materials/components/volume.rst:126
msgid ""
"For materials such as clouds or smoke that do not have a well defined "
"surface, volume rendering is required. These look best with many "
"scattering bounces, but in practice one might have to limit the number of"
" bounces to keep render times acceptable."
msgstr ""
"雲や煙といったマテリアルではボリュームレンダリングが必要とする、明確なサーフェスを持っていません。こういった表現では多くの拡散光のバウンスを利用する事で最も外見的に良い結果を得られるのですが、許容できるレンダー時間を維持するために実際にはバウンスの回数を"
" 1 回とします。"

#~ msgid "Volume Shaders"
#~ msgstr "ボリュームシェーダー"

#~ msgid ""
#~ "Cycles supports three volume shader "
#~ "nodes, that model particular effects as"
#~ " light passes through the volume and"
#~ " interacts with it:"
#~ msgstr "Cycles は 3 つのボリュームシェーダーノードをサポートしており、この方式はボリュームを透過する光を操作する上で特に効果を発揮します:"

#~ msgid ""
#~ "Emission will emit light from the "
#~ "volume. This can be used to shade"
#~ " fire for example."
#~ msgstr "Emission (光の放射) はボリュームから光線を放射させます。このノードは例えば炎のシェーディングに利用できます。"

#~ msgid "Volume Material"
#~ msgstr "ボリュームマテリアル"

#~ msgid "Interaction with the Surface Shader"
#~ msgstr "サーフェスシェーダーとの関係"

#~ msgid ""
#~ "A material may have both a surface"
#~ " and a volume shader, or only "
#~ "one of either. Using both may be"
#~ " useful for materials such as glass,"
#~ " water or ice, where you want "
#~ "some of the light to be absorbed"
#~ " as it passes through the surface,"
#~ " combined with e.g. a glass or "
#~ "glossy shader at the surface."
#~ msgstr ""
#~ "一つのマテリアルはサーフェスおよびボリューム両方のシェーダー、もしくはいずれか一方のみを持ちえます。両方を持つ事はガラス、サーフェスの"
#~ " Glass や Glossy "
#~ "シェーダーと組み合わせて、水や氷等の通過する光の一部を吸収させる一方で一部はサーフェスを透過させたい場合に役立ちます。"

#~ msgid ""
#~ "When the surface shader does not "
#~ "reflect or absorb light, it enters "
#~ "into the volume. If no volume "
#~ "shader is specified, it will pass "
#~ "straight through to the other side "
#~ "of the mesh. If it is defined, "
#~ "a volume shader describes the light "
#~ "interaction as it passes through the "
#~ "volume of the mesh. Light may be"
#~ " scattered, absorbed, or emitted at "
#~ "any point in the volume."
#~ msgstr "サーフェスシェーダーとが光を反射もしくは吸収しない場合、その光はボリュームに入射します。もしボリュームが定義されていなければ、入射した光はメッシュの他の面にむけて通過していきます。もし定義されていれば、ボリュームシェーダーはメッシュのボリュームを通る光の振る舞いを表します。光はボリューム中のあらゆる場所で拡散、吸収もしくは放射される可能性が有ります。"

#~ msgid "Mesh Topology"
#~ msgstr "メッシュにおける幾何学"

#~ msgid "Volume World"
#~ msgstr "ボリュームを利用したワールド"

#~ msgid "Smoke"
#~ msgstr "煙"

#~ msgid ""
#~ "Creating a smoke material for cycles "
#~ "can be difficult however the image "
#~ "below shows a good setup on how"
#~ " to do this."
#~ msgstr "Cycles において煙のマテリアルを作るのは難しいかもしれませんが下の画像がそれを実現する上での良い手がかりになります。"

#~ msgid "Smoke and Fire Material."
#~ msgstr "煙と炎のマテリアル。"

#~ msgid "Scattering Bounces"
#~ msgstr "拡散光のバウンス"

#~ msgid ""
#~ "For rendering materials like skin or "
#~ "milk, the subsurface scattering shader "
#~ "is an approximation of such multiple "
#~ "scattering effects that is significantly "
#~ "more efficient but not as accurate."
#~ msgstr "肌や牛乳のようなマテリアルのレンダリングにおいては、表面下錯乱を行うシェーダーはこのような多重錯乱効果を近似して利用し、極めて効果的ですが正確ではありません。"

#~ msgid "Currently, the following are not supported:"
#~ msgstr "現在、以下の機能についてはサポートしていません:"

#~ msgid "Correct ray visibility for volume meshes"
#~ msgstr "ボリュームメッシュに対する正確な光の可視性"

#~ msgid "Equiangular/MIS Volume Sampling"
#~ msgstr "Equi Angular (等角) / MIS Volume Sampling (多重重点的 ボリュームサンプリング)"

#~ msgid "Volume Multi Light sampling"
#~ msgstr "ボリュームを用いた複数光源サンプリング"

#~ msgid ""
#~ ":doc:`Principled Volume "
#~ "</render/cycles/nodes/types/shaders/volume_principled>` is "
#~ "a physically based volume shader that"
#~ " can be used to create a wide"
#~ " range of volume materials. It "
#~ "supports scattering, absorption and emission"
#~ " in one easy to use node. Fire"
#~ " can be rendered with blackbody "
#~ "emission."
#~ msgstr ""

#~ msgid ""
#~ "Volumes in real life consist of "
#~ "particles, a higher density means there"
#~ " are more particles per unit volume."
#~ " More particles means there is a "
#~ "higher chance for light to collide "
#~ "with a particle and get absorbed "
#~ "or scattered, rather than passing "
#~ "straight through."
#~ msgstr "現実世界におけるボリュームは粒子から構成され、密度が高いということは単位容積あたりにより多くの粒子が存在している事を意味します。構成する粒子が多いという事は入射した光がそのまま通過するよりも、粒子と衝突して吸収もしくは拡散される事を意味します。"

#~ msgid ""
#~ ":doc:`Principled Volume "
#~ "</render/cycles/nodes/types/shaders/volume_principled>` is "
#~ "a physically-based volume shader that"
#~ " can be used to create a wide"
#~ " range of volume materials. It "
#~ "supports scattering, absorption and emission"
#~ " in one easy to use node. Fire"
#~ " can be rendered with blackbody "
#~ "emission."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Emission </render/cycles/nodes/types/shaders/emission>`"
#~ " will emit light from the volume, "
#~ "for example for fire."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Principled Volume "
#~ "</render/shaders/nodes/types/shaders/volume_principled>` is "
#~ "a physically-based volume shader that"
#~ " can be used to create a wide"
#~ " range of volume materials. It "
#~ "supports scattering, absorption and emission"
#~ " in one easy to use node. Fire"
#~ " can be rendered with blackbody "
#~ "emission."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Emission </render/shaders/nodes/types/shaders/emission>`"
#~ " will emit light from the volume, "
#~ "for example for fire."
#~ msgstr ""

#~ msgid "Limitations"
#~ msgstr "制限"

#~ msgid "Not available on GPU:"
#~ msgstr "GPU では利用できない機能:"

#~ msgid "Multiple importance sampling for efficient lights inside volumes."
#~ msgstr ""

