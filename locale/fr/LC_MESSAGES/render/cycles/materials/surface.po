#
# phan <phahoatho@gmail.com>, 2016, 2017, 2018, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-17 01:30+0200\n"
"PO-Revision-Date: 2019-04-03 20:25+0200\n"
"Last-Translator: phan <phahoatho@gmail.com>\n"
"Language-Team: français <bf-docboard@blender.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Gtranslator 2.91.7\n"

#: ../../manual/render/cycles/materials/surface.rst:4
msgid "Surfaces"
msgstr ""

#: ../../manual/render/cycles/materials/surface.rst:6
msgid ""
"The surface shader defines the light interaction at the surface of the mesh. "
"One or more :abbr:`BSDF (Bidirectional scattering distribution function)`\\ "
"'s specify if incoming light is reflected back, refracted into the mesh, or "
"absorbed."
msgstr ""
"La *surface shader* définit l'interaction de la lumière à la surface du "
"maillage. Un ou plus :abbr:`BSDF (Bidirectional scattering distribution "
"function)` spécifient si la lumière incidente est rétro-réfléchie, réfractée "
"dans le maillage ou absorbée."

#: ../../manual/render/cycles/materials/surface.rst:10
msgid ""
"Emission defines how light is emitted from the surface, allowing any surface "
"to become a light source."
msgstr ""
"L'émission définit la manière dont la lumière est émise par la surface, "
"permettant à tout surface de devenir une source de lumière."

#: ../../manual/render/cycles/materials/surface.rst:15
msgid "Terminology"
msgstr "Terminologie"

#: ../../manual/render/cycles/materials/surface.rst:18
msgid "BSDF"
msgstr ""

#: ../../manual/render/cycles/materials/surface.rst:18
msgid ""
"Stands for Bidirectional Scattering Distribution Function. It defines how "
"light is reflected and refracted at a surface."
msgstr ""
"Acronyme de *bidirectional scattering distribution function*. il définit la "
"manière dont la lumière est réfléchie et réfractée sur une surface."

#: ../../manual/render/cycles/materials/surface.rst:20
msgid "Reflection"
msgstr "Réflexion"

#: ../../manual/render/cycles/materials/surface.rst:21
msgid "BSDFs reflect an incoming ray on the same side of the surface."
msgstr ""
"Les BSDF réfléchissent un rayon incident sur le même côté de la surface."

#: ../../manual/render/cycles/materials/surface.rst:22
msgid "Transmission"
msgstr ""

#: ../../manual/render/cycles/materials/surface.rst:23
msgid ""
"BSDFs transmit an incoming ray through the surface, leaving on the other "
"side."
msgstr ""
"Les BSDF transmettent un rayon incident à travers la surface, sortant de "
"l'autre côté. "

#: ../../manual/render/cycles/materials/surface.rst:27
msgid "Refraction"
msgstr "Réfraction"

#: ../../manual/render/cycles/materials/surface.rst:25
msgid ""
"BSDFs are a type of *Transmission*, transmitting an incoming ray and "
"changing its direction as it exits on the other side of the surface."
msgstr ""
"Les BSDF sont un type de *Transmission*, transmettant un rayon incident et "
"changeant sa direction au moment où il sort de l'autre côté de la surface."

#: ../../manual/render/cycles/materials/surface.rst:30
msgid "BSDF Parameters"
msgstr "Paramètres de BSDF "

#: ../../manual/render/cycles/materials/surface.rst:32
msgid ""
"A major difference from non-physically-based renderers is that direct light "
"reflection from lamps and indirect light reflection of other surfaces are "
"not decoupled, but rather handled using a single :abbr:`BSDF (Bidirectional "
"scattering distribution function)`. This limits the possibilities a bit, but "
"we believe overall it is helpful in creating consistent-looking renders with "
"fewer parameters to tune."
msgstr ""
"Une différence majeure avec les moteurs de rendu non basés sur la physique "
"est que la réflexion de la lumière directe des lampes et la réflexion de la "
"lumière indirecte d'autres surfaces ne sont pas découplées, mais plutôt "
"gérées en utilisant un simple :abbr:`BSDF (Bidirectional scattering "
"distribution function)`. Ceci limite un peu les possibilités mais nous "
"croyons globalement que c'est utile dans la création de rendus visuellement "
"cohérents avec moins de paramètres à gérer."

#: ../../<generated>:1
msgid "Roughness"
msgstr ""

#: ../../manual/render/cycles/materials/surface.rst:39
msgid ""
"For the glossy :abbr:`BSDF (Bidirectional scattering distribution function)`"
"\\ s, the *roughness* parameter controls the sharpness of the reflection, "
"from 0.0 (perfectly sharp) to 1.0 (very soft). Compared to *hardness* or "
"*exponent* parameters, it has the advantage of being in the range 0.0 to "
"1.0, and as a result gives more linear control and is more easily "
"textureable. The relation is roughly: *roughness* = 1 - 1/*hardness*"
msgstr ""
"Pour les :abbr:`BSDF (Bidirectional scattering distribution function)` "
"*glossy*, le paramètre *roughness* contrôle la netteté de la réflexion, de "
"0.0 (parfaitement nette) à 1.0 (très douce). Comparé aux paramètres "
"*hardness* ou *exponent*, il a l'avantage d'être dans l'intervalle (0.0 à "
"1.0), et par conséquent donne un contrôle plus linéaire et est plus "
"facilement texturable. La relation est grossièrement : *roughness* = 1 - 1/"
"*hardness*"

#: ../../manual/render/cycles/materials/surface.rst:48
msgid ""
"Currently Blender is coded to use an unsquared model. So if you are using a :"
"term:`Roughness Map` chances are that the result will not be accurate. To "
"fix this, you can square the texture by connecting the texture to a :doc:"
"`Math node </render/cycles/nodes/types/converter/math>` and either setting "
"it to *Multiply* and inputing the texture in both input sockets, or using "
"the *Power* function and setting the second input to 2."
msgstr ""
"Actuellement Blender est codé pour utiliser un modèle non carré. Aussi si "
"vous utilisez un :term:`Roughness Map`, il y a des chances que le résultat "
"ne sera pas précis. Pour résoudre cela, vous pouvez élever au carré la "
"texture en connectant la texture à un :doc:`node Math </render/cycles/nodes/"
"types/converter/math>` et soit en le fixant à *Multiply*  et en entrant la "
"texture dans les deux prises d'entrée, soit en utilisant la fonction *Power* "
"(puissance) et en fixant la seconde entrée à 2."
