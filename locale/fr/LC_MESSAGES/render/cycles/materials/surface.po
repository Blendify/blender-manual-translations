#
# phan <phahoatho@gmail.com>, 2016, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-09-20 12:10-0400\n"
"PO-Revision-Date: 2017-01-17 08:47+0100\n"
"Last-Translator: phan <phahoatho@gmail.com>\n"
"Language-Team: français <bf-docboard@blender.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Gtranslator 2.91.6\n"

#: ../../manual/render/cycles/materials/surface.rst:5
msgid "Surface"
msgstr ""

#: ../../manual/render/cycles/materials/surface.rst:7
msgid ""
"The surface shader defines the light interaction at the surface of the mesh. "
"One or more :abbr:`BSDF (Bidirectional scattering distribution function)`'s "
"specify if incoming light is reflected back, refracted into the mesh, or "
"absorbed."
msgstr ""
"Le *surface shader* définit l'interaction de la lumière avec la surface du "
"maillage. Un ou plus :abbr:`BSDF (Bidirectional scattering distribution "
"function)` spécifient si le rayon incident est réfléchi, réfracté dans le "
"maillage, ou absorbé."

#: ../../manual/render/cycles/materials/surface.rst:11
msgid ""
"Emission defines how light is emitted from the surface, allowing any surface "
"to become a light source."
msgstr ""
"Émission définit comment la lumière est émise par la surface, permettant à "
"tout surface de devenir une source de lumière."

#: ../../manual/render/cycles/materials/surface.rst:16
msgid "Terminology"
msgstr "Terminologie"

#: ../../manual/render/cycles/materials/surface.rst:19
msgid "BSDF"
msgstr ""

#: ../../manual/render/cycles/materials/surface.rst:19
msgid ""
"stands for bidirectional scattering distribution function. It defines how "
"light is reflected and refracted at a surface."
msgstr ""
"Acronyme de *bidirectional scattering distribution function*. il définit la "
"manière dont la lumière est réfléchie et réfractée sur une surface."

#: ../../manual/render/cycles/materials/surface.rst:22
msgid "Reflection"
msgstr "Réflexion"

#: ../../manual/render/cycles/materials/surface.rst:22
msgid ""
":abbr:`BSDF (Bidirectional scattering distribution function)` s Reflect an "
"incoming ray on the same side of the surface."
msgstr ""
":abbr:`BSDF (Bidirectional scattering distribution function)` réfléchit un "
"rayon incident sur la même face de la surface."

#: ../../manual/render/cycles/materials/surface.rst:25
msgid "Transmission"
msgstr ""

#: ../../manual/render/cycles/materials/surface.rst:25
msgid ""
":abbr:`BSDF (Bidirectional scattering distribution function)` s Transmit an "
"incoming ray through the surface, leaving on the other side."
msgstr ""
":abbr:`BSDF (Bidirectional scattering distribution function)` transmet un "
"rayon incident à travers la surface, qui quitte sur l'autre face. "

#: ../../manual/render/cycles/materials/surface.rst:30
msgid "Refraction"
msgstr "Réfraction"

#: ../../manual/render/cycles/materials/surface.rst:28
msgid ""
":abbr:`BSDF (Bidirectional scattering distribution function)` s are a type "
"of *Transmission*, Transmitting an incoming ray and changing its direction "
"as it exits on the other side of the surface."
msgstr ""
":abbr:`BSDF (Bidirectional scattering distribution function)` sont un type "
"de *Transmission*. en transmettant un rayon incident et modifiant sa "
"direction à sa sortie sur l'autre face de la surface."

#: ../../manual/render/cycles/materials/surface.rst:33
msgid "BSDF Parameters"
msgstr "Paramètres de BSDF "

#: ../../manual/render/cycles/materials/surface.rst:35
msgid ""
"A major difference from non-physically based renderers is that direct light "
"reflection from lamps and indirect light reflection of other surfaces are "
"not decoupled, but rather handled using a single :abbr:`BSDF (Bidirectional "
"scattering distribution function)`. This limits the possibilities a bit, but "
"we believe overall it is helpful in creating consistent-looking renders with "
"fewer parameters to tune."
msgstr ""
"une différence majeure avec les moteurs de rendu non basés sur la physique "
"est que la réflexion de la lumière directe des lampes et la réflexion de la "
"lumière indirecte d'autres surfaces ne sont pas découplées, mais plutôt "
"gérées en utilisant un simple :abbr:`BSDF (Bidirectional scattering "
"distribution function)`. Ceci limite un peu les possibilités mais nous "
"croyons globalement qu'il est utile dans la création de rendus visuellement "
"cohérents avec moins de paramètres à gérer."

#: ../../manual/render/cycles/materials/surface.rst:41
msgid ""
"For glossy :abbr:`BSDF (Bidirectional scattering distribution function)` s, "
"the *roughness* parameter controls the sharpness of the reflection, from 0.0 "
"(perfectly sharp) to 1.0 (very soft). Compared to *hardness* or *exponent* "
"parameters, it has the advantage of being in the range 0.0..1.0, and as a "
"result gives more linear control and is more easily textureable. The "
"relation is roughly: *roughness* = 1 - 1/*hardness*"
msgstr ""
"Pour les *glossy :abbr:`BSDF (Bidirectional scattering distribution "
"function)`*, le paramètre *roughness* contrôle la finesse de la réflexion, "
"de 0.0 (parfaitement fin) à 1.0 (très doux). Comparé aux paramètres "
"*hardness* ou *exponent*, il a l'avantage d'être dans l'intervalle 0.0..1.0, "
"et par conséquent il donne un contrôle plus linéaire et est plus facilement "
"texturable. La relation est grossièrement : *roughness* = 1 - 1/*hardness*"

#~ msgid ""
#~ "For glossy :abbr:`BSDF (Bidirectional scattering distribution function)` "
#~ "s, *roughness* parameters control the sharpness of the reflection, from "
#~ "0.0 (perfectly sharp) to 1.0 (very soft). Compared to *hardness* or "
#~ "*exponent* parameters, it has the advantage of being in the range "
#~ "0.0..1.0, and as a result gives more linear control and is more easily "
#~ "textureable. The relation is roughly: *roughness* = 1 - 1/*hardness*For "
#~ "glossy :abbr:`BSDF (Bidirectional scattering distribution function)` s, "
#~ "*roughness* parameters control the sharpness of the reflection, from 0.0 "
#~ "(perfectly sharp) to 1.0 (very soft). Compared to *hardness* or "
#~ "*exponent* parameters, it has the advantage of being in the range "
#~ "0.0..1.0, and as a result gives more linear control and is more easily "
#~ "textureable. The relation is roughly: *roughness* = 1 - 1/*hardness*For "
#~ "glossy :abbr:`BSDF (Bidirectional scattering distribution function)` s, "
#~ "the *roughness* parameter controls the sharpness of the reflection, from "
#~ "0.0 (perfectly sharp) to 1.0 (very soft). Compared to *hardness* or "
#~ "*exponent* parameters, it has the advantage of being in the range "
#~ "0.0..1.0, and as a result gives more linear control and is more easily "
#~ "textureable. The relation is roughly: *roughness* = 1 - 1/*hardness*"
#~ msgstr ""
#~ "pour les  brillants, le paramètre *roughness* contrôle l'acuité de la "
#~ "réflexion, de 0.0 (parfaitement ) à 1.0 (très). Comparé aux paramètres "
#~ "*hardness* ou *exponent*, il a l'avantage d'être dans l'intervalle "
#~ "0.0..1.0, et donne un contrôle plus linéaire et est plus texturable. Le "
#~ "relation est approximativement : *roughness* = 1 - 1 /*hardness*"
