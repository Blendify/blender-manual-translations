#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 18:46+1000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../manual/compositing/types/distort/map_uv.rst:4
msgid "Map UV Node"
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:10
msgid "Map UV Node."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:12
msgid ""
"While you can do quite a bit of overall coloring in post-production, "
"there are limits. With this *Node* you can \"re-texture\" objects "
"**after** they have been rendered."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:15
msgid ""
"Using this node (and having saved the UV map in a multilayer OpenEXR "
"format image sequence), you can apply new flat image textures to all "
"objects (or individual objects if you used the very cool :doc:`ID Mask "
"Node </compositing/types/converter/id_mask>` to enumerate your objects) "
"in the scene."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:20
msgid ""
"Thread the new UV Texture to the Image socket, and the UV Map from the "
"rendered scene to the UV input socket. The resulting image is the input "
"image texture distorted to match the UV coordinates. That image can then "
"be overlay mixed with the original image to paint the texture on top of "
"the original. Adjust alpha and the mix factor to control how much the new"
" texture overlays the old."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:27
msgid ""
"Of course, when painting the new texture, it helps to have the UV maps "
"for the original objects in the scene, it is recommended to  keep those "
"UV texture outlines around even, when shooting is done."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:32
msgid "Examples"
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:34
msgid ""
"In the example below, we have overlaid a grid pattern on top of the two "
"\"Emo\" heads after they have been rendered. During rendering, we enabled"
" the UV layer in the RenderLayer tab (Buttons window, Render Context, "
"RenderLayer tab). Using a mix node, we mix that new UV Texture over the "
"original face. We can use this grid texture to help in any motion "
"tracking that we need to do."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:44
msgid "Adding a Grid UV Textures for Motion Tracking."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:47
msgid ""
"In the next example, we overlay a flag on top of a cubie-type thing, and "
"we ensure that we Enable the Alpha pre-multiply button on the Mix node. "
"The flag is used as additional UV Texture on top of the grid. Other "
"examples include the possibility that there was used an unauthorized "
"product box during the initial animation, and it is needed to substitute "
"in a different product sponsor after rendering."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:55
msgid ""
"Of course, due to limits of this node, it is not recommended rush pre-"
"production rendering under the guise of \"fixing it later\"."
msgstr ""

#: ../../manual/compositing/types/distort/map_uv.rst:61
msgid "Adding UV Textures in Post-Production"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Adding a Grid UV Textures for Motion Tracking"
#~ msgstr ""

#~ msgid ""
#~ "In the example below, we have "
#~ "overlaid a grid pattern on top of"
#~ " the two 'Emo' heads after they "
#~ "have been rendered. During rendering, we"
#~ " enabled the UV layer in the "
#~ "RenderLayer tab (Buttons window, Render "
#~ "Context, RenderLayer tab). Using a mix"
#~ " node, we mix that new UV "
#~ "Texture over the original face. We "
#~ "can use this grid texture to help"
#~ " in any motion tracking that we "
#~ "need to do."
#~ msgstr ""

