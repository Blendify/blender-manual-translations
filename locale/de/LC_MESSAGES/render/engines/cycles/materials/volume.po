#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-17 01:30+0200\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../manual/render/cycles/materials/volume.rst:4
msgid "Volumes"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:6
msgid ""
"Volume rendering can be used to render effects like fire, smoke, mist, "
"absorption in glass, and many other effects that cannot be represented by"
" surface meshes alone."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:9
msgid ""
"To set up a volume, you create a mesh that defines the bounds within "
"which the volume exists. In the material you typically remove the surface"
" nodes and instead connect volume nodes to define the shading inside the "
"volume. For effects such as absorption in glass you can use both a "
"surface and volume shader. The world can also use a volume shader to "
"create effects such as mist."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:17
msgid "Shading"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:20
msgid "Principled Volume"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:22
msgid ""
":doc:`Principled Volume "
"</render/cycles/nodes/types/shaders/volume_principled>` is a physically-"
"based volume shader that can be used to create a wide range of volume "
"materials. It supports scattering, absorption and emission in one easy to"
" use node. Fire can be rendered with blackbody emission."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:29
msgid "Smoke and fire rendered with Principled Volume shader."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:33
msgid "Volume Components"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:35
msgid ""
"For more control, volume shading components can be manually combined into"
" a custom shader setup."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:37
msgid ""
":doc:`Volume Absorption "
"</render/cycles/nodes/types/shaders/volume_absorption>` will absorb part "
"of the light as it passes through the volume. This can be used to shade "
"for example black smoke or colored glass objects, or mixed with the "
"volume scatter node. This node is similar to the transparent BSDF node, "
"it blocks part of the light and lets other light pass straight through."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:42
msgid ""
":doc:`Volume Scatter </render/cycles/nodes/types/shaders/volume_scatter>`"
" lets light scatter in other directions as it hits particles in the "
"volume. The anisotropy defines in which direction the light is more "
"likely to scatter. A value of 0 will let light scatter evenly in all "
"directions (similar to the diffuse BSDF node), negative values let light "
"scatter mostly backwards, and positive values let light scatter mostly "
"forward. This can be used to shade white smoke or clouds for example."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:48
msgid ""
":doc:`Emission </render/cycles/nodes/types/shaders/emission>` will emit "
"light from the volume, for example for fire."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:54
msgid "Volume Absorption, Scatter and Emission"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:58
msgid "Attributes"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:60
msgid ""
"When rendering smoke and fire, volume attributes are used to define the "
"shape and shading of the volume. The Principled Volume shader will use "
"them by default, while custom volume shaders can use the Attribute node "
"to get attributes such as density, color and temperature."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:66
msgid "Density"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:68
msgid ""
"All volume shaders have a density input. The density defines how much of "
"the light will interact with the volume, getting absorbed or scattered, "
"and how much will pass straight through. For effects such as smoke you "
"would specify a density field to indicate where in the volume there is "
"smoke and how much (density bigger than 0), and where there is no smoke "
"(density equals 0)."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:74
msgid ""
"Volumes in the real world consist of particles, a higher density means "
"there are more particles per unit volume. More particles means there is a"
" higher chance for light to collide with a particle and get absorbed or "
"scattered, rather than passing straight through."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:81
msgid "Mesh Volumes"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:83
msgid ""
"Meshes used for volume render should be closed and :term:`manifold`. That"
" means that there should be no holes in the mesh. Each edge must be "
"connected to exactly two faces such that there are no holes or T-shaped "
"faces where three or more faces are connected to an edge."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:89
msgid ""
"Normals must point outside for correct results. The normals are used to "
"determine if a ray enters or exits a volume, and if they point in a wrong"
" direction, or there is a hole in the mesh, then the renderer is unable "
"to decide what is the inside or outside of the volume."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:94
msgid "These rules are the same as for rendering glass refraction correctly."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:98
msgid "World Volume"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:100
msgid ""
"A volume shader can also be applied to the world, filling the entire "
"space."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:102
msgid ""
"Currently, this is most useful for night time or other dark scenes, as "
"the world surface shader or sun lamps will have no effect if a volume "
"shader is used. This is because the world background is assumed to be "
"infinitely far away, which is accurate enough for the sun for example. "
"However, for modeling effects such as fog or atmospheric scattering, it "
"is not a good assumption that the volume fills the entire space, as most "
"of the distance between the sun and the earth is empty space. For such "
"effects it is be better to create a volume object surrounding the scene. "
"The size of this object will determine how much light is scattered or "
"absorbed."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:114
msgid "Multiple Scattering"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:116
msgid ""
"Real-world effects such as scattering in clouds or subsurface scattering "
"require many scattering bounces. However, unbiased rendering of such "
"effects can be noisy, so by default the number of bounces is zero. The "
"effect you get when rendering with zero volume bounces is what is known "
"as \"single scattering\", the effect from more bounces is \"multiple "
"scattering\"."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:122
msgid ""
"For rendering materials like skin or milk that require multiple "
"scattering, subsurface scattering is more efficient and easier to "
"control. Particularly the random walk method can accurately render such "
"materials."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:126
msgid ""
"For materials such as clouds or smoke that do not have a well defined "
"surface, volume rendering is required. These look best with many "
"scattering bounces, but in practice one might have to limit the number of"
" bounces to keep render times acceptable."
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:132
msgid "Limitations"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:134
msgid "Not available on GPU:"
msgstr ""

#: ../../manual/render/cycles/materials/volume.rst:136
msgid "Multiple importance sampling for efficient lights inside volumes."
msgstr ""

#~ msgid "Smoke/Fire rendering"
#~ msgstr ""

#~ msgid "Volume Shader: Absorption / Absorption + Scatter / Emission"
#~ msgstr ""

#~ msgid "Smoke and Fire Material"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Volume Shader: Absorption / Absorption + Scatter / Emission."
#~ msgstr ""

#~ msgid "Equi Angular / MIS Volume Sampling"
#~ msgstr ""

#~ msgid "Currently we do not support:"
#~ msgstr ""

#~ msgid "Currently, the following are not not support:"
#~ msgstr ""

#~ msgid "Equi Angular/MIS Volume Sampling"
#~ msgstr ""

#~ msgid "Volume"
#~ msgstr ""

#~ msgid "Volume Shaders"
#~ msgstr ""

#~ msgid ""
#~ "Cycles supports three volume shader "
#~ "nodes, that model particular effects as"
#~ " light passes through the volume and"
#~ " interacts with it:"
#~ msgstr ""

#~ msgid ""
#~ "Volume Absorption will absorb part of"
#~ " the light as it passes through "
#~ "the volume. This can be used to"
#~ " shade for example black smoke or "
#~ "colored glass objects, or mixed with "
#~ "the volume scatter node. This node "
#~ "is somewhat similar to the transparent"
#~ " BSDF node, it blocks part of "
#~ "the light and lets other light "
#~ "pass straight through."
#~ msgstr ""

#~ msgid ""
#~ "Volume Scatter lets light scatter in "
#~ "other directions as it hits particles"
#~ " in the volume. The anisotropy "
#~ "defines in which direction the light "
#~ "is more likely to scatter. A value"
#~ " of 0 will let light scatter "
#~ "evenly in all directions (somewhat "
#~ "similar to the diffuse BSDF node), "
#~ "negative values let light scatter mostly"
#~ " backwards, and positive values let "
#~ "light scatter mostly forward. This can"
#~ " be used to shade white smoke "
#~ "or clouds for example."
#~ msgstr ""

#~ msgid ""
#~ "Emission will emit light from the "
#~ "volume. This can be used to shade"
#~ " fire for example."
#~ msgstr ""

#~ msgid "Volume Shader: Absorption/Absorption + Scatter/Emission."
#~ msgstr ""

#~ msgid "Volume Material"
#~ msgstr ""

#~ msgid "Interaction with the Surface Shader"
#~ msgstr ""

#~ msgid ""
#~ "A material may have both a surface"
#~ " and a volume shader, or only "
#~ "one of either. Using both may be"
#~ " useful for materials such as glass,"
#~ " water or ice, where you want "
#~ "some of the light to be absorbed"
#~ " as it passes through the surface,"
#~ " combined with e.g. a glass or "
#~ "glossy shader at the surface."
#~ msgstr ""

#~ msgid ""
#~ "When the surface shader does not "
#~ "reflect or absorb light, it enters "
#~ "into the volume. If no volume "
#~ "shader is specified, it will pass "
#~ "straight through to the other side "
#~ "of the mesh. If it is defined, "
#~ "a volume shader describes the light "
#~ "interaction as it passes through the "
#~ "volume of the mesh. Light may be"
#~ " scattered, absorbed, or emitted at "
#~ "any point in the volume."
#~ msgstr ""

#~ msgid "Mesh Topology"
#~ msgstr ""

#~ msgid "Volume World"
#~ msgstr ""

#~ msgid ""
#~ "A volume shader can also be "
#~ "applied to the entirely world, filling"
#~ " the entire space."
#~ msgstr ""

#~ msgid "Smoke"
#~ msgstr ""

#~ msgid ""
#~ "Creating a smoke material for cycles "
#~ "can be difficult however the image "
#~ "below shows a good setup on how"
#~ " to do this."
#~ msgstr ""

#~ msgid "Smoke and Fire Material."
#~ msgstr ""

#~ msgid "Scattering Bounces"
#~ msgstr ""

#~ msgid ""
#~ "Real world effects such as scattering"
#~ " in clouds or subsurface scattering "
#~ "require many scattering bounces. However, "
#~ "unbiased rendering of such effects is"
#~ " slow and noisy. In typical movie "
#~ "production scenes only 0 or 1 "
#~ "bounces might be used to keep "
#~ "render times under control. The effect"
#~ " you get when rendering with zero "
#~ "volume bounces is what is known as"
#~ " \"single scattering\", the effect from "
#~ "more bounces is \"multiple scattering\"."
#~ msgstr ""

#~ msgid ""
#~ "For rendering materials like skin or "
#~ "milk, the subsurface scattering shader "
#~ "is an approximation of such multiple "
#~ "scattering effects that is significantly "
#~ "more efficient but not as accurate."
#~ msgstr ""

#~ msgid "Currently, the following are not supported:"
#~ msgstr ""

#~ msgid "Correct ray visibility for volume meshes"
#~ msgstr ""

#~ msgid "Equiangular/MIS Volume Sampling"
#~ msgstr ""

#~ msgid "Volume Multi Light sampling"
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Principled Volume "
#~ "</render/cycles/nodes/types/shaders/volume_principled>` is "
#~ "a physically based volume shader that"
#~ " can be used to create a wide"
#~ " range of volume materials. It "
#~ "supports scattering, absorption and emission"
#~ " in one easy to use node. Fire"
#~ " can be rendered with blackbody "
#~ "emission."
#~ msgstr ""

#~ msgid ""
#~ "Volumes in real life consist of "
#~ "particles, a higher density means there"
#~ " are more particles per unit volume."
#~ " More particles means there is a "
#~ "higher chance for light to collide "
#~ "with a particle and get absorbed "
#~ "or scattered, rather than passing "
#~ "straight through."
#~ msgstr ""

#~ msgid ""
#~ "Real world effects such as scattering"
#~ " in clouds or subsurface scattering "
#~ "require many scattering bounces. However, "
#~ "unbiased rendering of such effects can"
#~ " be noisy, so by default the "
#~ "number of bounces is zero. The "
#~ "effect you get when rendering with "
#~ "zero volume bounces is what is "
#~ "known as \"single scattering\", the "
#~ "effect from more bounces is \"multiple"
#~ " scattering\"."
#~ msgstr ""

