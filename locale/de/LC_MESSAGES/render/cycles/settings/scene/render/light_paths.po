#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-28 09:34-0400\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:4
msgid "Light Paths"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:6
msgid "Reference"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst
msgid "Panel"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:9
msgid ":menuselection:`Render --> Light Path`"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:13
msgid "Ray Types"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:15
msgid "Ray types can be divided into four categories:"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:17
msgid "Camera: the ray comes straight from the camera."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:18
msgid "Reflection: the ray is generated by a reflection off a surface."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:19
msgid "Transmission: the ray is generated by a transmission through a surface."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:20
msgid "Shadow: the ray is used for (transparent) shadows."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:22
msgid "Reflection and transmission rays can further have these properties:"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:24
msgid ""
"Diffuse: the ray is generated by a diffuse reflection or transmission "
"(translucency)."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:25
msgid ""
"Glossy: the ray is generated by a glossy specular reflection or "
"transmission."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:26
msgid ""
"Singular: the ray is generated by a perfectly sharp reflection or "
"transmission."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:28
msgid ""
"The Light Path node can be used to find out the type of ray the shading "
"is being computed for."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:35
msgid "Bounce Control"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:37
msgid ""
"The maximum number of light bounces can be controlled manually. While "
"ideally this should be infinite, in practice a smaller number of bounces "
"may be sufficient, or some light interactions may be intentionally left "
"out for faster convergence. The number of diffuse reflection, glossy "
"reflection and transmission bounces can also be controlled individually."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:44
msgid ""
"Light paths are terminated probabilistically when specifying a minimum "
"number of light bounces lower than the maximum. In that case, paths "
"longer than minimum will be randomly stopped when they are expected to "
"contribute less light to the image. This will still converge to the same "
"image, but renders faster while possibly being noisier."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:49
msgid ""
"A common source of noise is caustics, which are diffuse bounces followed "
"by a glossy bounce (assuming we start from the camera). An option is "
"available to disable these entirely."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:56
msgid "Transparency"
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:58
msgid ""
"The transparent :abbr:`BSDF (Bidirectional scattering distribution "
"function)` shader is given special treatment. When a ray passes through "
"it, light passes straight on, as if there was no geometry there. The ray "
"type does not change when passing through a transparent BSDF."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:63
msgid ""
"Alpha pass output is also different for the transparent BSDF. Other "
"transmission BSDFs are considered opaque, because they change the light "
"direction. As such they cannot be used for alpha-over compositing, while "
"this is possible with the transparent BSDF."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:68
msgid ""
"The maximum number of transparent bounces is controlled separately from "
"other bounces. It is also possible to use probabilistic termination of "
"transparent bounces, which might help rendering many layers of "
"transparency."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:72
msgid ""
"Note that, while semantically the ray passes through as if no geometry "
"was hit, rendering performance is affected as each transparency step "
"requires executing the shader and tracing a ray."
msgstr ""

#: ../../manual/render/cycles/settings/scene/render/light_paths.rst:77
msgid "The object :ref:`ray visibility <cycles-ray-visibility>` settings."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Properties Editor-->Object-->Cycles Settings-->Ray visibility"
#~ msgstr ""

#~ msgid "Camera: the ray comes straight from the camera"
#~ msgstr ""

#~ msgid "Reflection: the ray is generated by a reflection off a surface"
#~ msgstr ""

#~ msgid "Transmission: the ray is generated by a transmission through a surface"
#~ msgstr ""

#~ msgid "Shadow: the ray is used for (transparent) shadows"
#~ msgstr ""

#~ msgid ""
#~ "Diffuse: the ray is generated by a"
#~ " diffuse reflection or transmission "
#~ "(translucency)"
#~ msgstr ""

#~ msgid ""
#~ "Glossy: the ray is generated by a"
#~ " glossy specular reflection or transmission"
#~ msgstr ""

#~ msgid ""
#~ "Singular: the ray is generated by "
#~ "a perfectly sharp reflection or "
#~ "transmission"
#~ msgstr ""

#~ msgid ""
#~ "Alpha pass output is also different "
#~ "for the transparent :abbr:`BSDF (Bidirectional"
#~ " scattering distribution function)`. Other "
#~ "transmission :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)` s are considered"
#~ " opaque, because they change the "
#~ "light direction. As such they cannot "
#~ "be used for alpha-over compositing, "
#~ "while this is possible with the "
#~ "transparent :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)`."
#~ msgstr ""

#~ msgid ""
#~ "Alpha pass output is also different "
#~ "for the transparent :abbr:`BSDF (Bidirectional"
#~ " scattering distribution function)`. Other "
#~ "transmission :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)`\\ s are considered"
#~ " opaque, because they change the "
#~ "light direction. As such they cannot "
#~ "be used for alpha-over compositing, "
#~ "while this is possible with the "
#~ "transparent :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)`."
#~ msgstr ""

#~ msgid "Ray Visibility"
#~ msgstr ""

#~ msgid "Objects can be set to be invisible to particular ray types:"
#~ msgstr ""

#~ msgid "Camera"
#~ msgstr ""

#~ msgid "Diffuse reflection"
#~ msgstr ""

#~ msgid "Glossy reflection"
#~ msgstr ""

#~ msgid "Transmission"
#~ msgstr ""

#~ msgid "Shadow"
#~ msgstr ""

#~ msgid ""
#~ "Properties Editor :menuselection:`Object --> "
#~ "Cycles Settings --> Ray visibility`."
#~ msgstr ""

#~ msgid ""
#~ "This can be used, for example, to"
#~ " make an emitting mesh invisible to"
#~ " camera rays. For duplicators, visibility"
#~ " is inherited; if the parent object"
#~ " is hidden for some ray types, "
#~ "the children will be hidden for "
#~ "these too."
#~ msgstr ""

#~ msgid ""
#~ "In terms of performance, using these "
#~ "options is more efficient that using "
#~ "a shader node setup that achieves "
#~ "the same effect. Objects invisible to"
#~ " a certain ray will be skipped "
#~ "in ray traversal already, leading to "
#~ "fewer rays cast and shaders executed."
#~ msgstr ""

#~ msgid "Panel:    :menuselection:`Render --> Light Path`"
#~ msgstr ""

#~ msgid ""
#~ "Light paths are terminated probabilistically"
#~ " when specifying a minimum number of"
#~ " light bounces lower than the "
#~ "maximum. In that case paths longer "
#~ "than minimum will be randomly stopped"
#~ " when they are expected to contribute"
#~ " less light to the image. This "
#~ "will still converge to the same "
#~ "image, but renders faster while possibly"
#~ " being noisier."
#~ msgstr ""

#~ msgid ""
#~ "Note that while semantically the ray "
#~ "passes through as if no geometry "
#~ "was hit, rendering performance is "
#~ "affected as each transparency step "
#~ "requires executing the shader and "
#~ "tracing a ray."
#~ msgstr ""

