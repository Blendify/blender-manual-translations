#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 16:58+0200\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../manual/render/cycles/render_settings/light_paths.rst:4
msgid "Light Paths"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:6
#: ../../manual/render/cycles/render_settings/light_paths.rst:85
msgid "Reference"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst
msgid "Panel"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:9
msgid ":menuselection:`Render --> Light Path`"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:13
msgid "Ray Types"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:15
msgid "Ray types can be divided into four categories:"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:17
msgid "Camera: the ray comes straight from the camera."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:18
msgid "Reflection: the ray is generated by a reflection off a surface."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:19
msgid "Transmission: the ray is generated by a transmission through a surface."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:20
msgid "Shadow: the ray is used for (transparent) shadows."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:22
msgid "Reflection and transmission rays can further have these properties:"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:24
msgid ""
"Diffuse: the ray is generated by a diffuse reflection or transmission "
"(translucency)."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:25
msgid ""
"Glossy: the ray is generated by a glossy specular reflection or "
"transmission."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:26
msgid ""
"Singular: the ray is generated by a perfectly sharp reflection or "
"transmission."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:28
msgid ""
"The Light Path node can be used to find out the type of ray the shading "
"is being computed for."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:35
msgid "Bounce Control"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:37
msgid ""
"The maximum number of light bounces can be controlled manually. While "
"ideally this should be infinite, in practice a smaller number of bounces "
"may be sufficient, or some light interactions may be intentionally left "
"out for faster convergence. The number of diffuse reflection, glossy "
"reflection and transmission bounces can also be controlled individually."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:44
msgid ""
"Light paths are terminated probabilistically when specifying a minimum "
"number of light bounces lower than the maximum. In that case, paths "
"longer than minimum will be randomly stopped when they are expected to "
"contribute less light to the image. This will still converge to the same "
"image, but renders faster while possibly being noisier."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:49
msgid ""
"A common source of noise is caustics, which are diffuse bounces followed "
"by a glossy bounce (assuming we start from the camera). An option is "
"available to disable these entirely."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:56
#: ../../manual/render/cycles/render_settings/light_paths.rst:111
msgid "Transparency"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:58
msgid ""
"The transparent :abbr:`BSDF (Bidirectional scattering distribution "
"function)` shader is given special treatment. When a ray passes through "
"it, light passes straight on, as if there was no geometry there. The ray "
"type does not change when passing through a transparent BSDF."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:63
msgid ""
"Alpha pass output is also different for the transparent BSDF. Other "
"transmission BSDFs are considered opaque, because they change the light "
"direction. As such they cannot be used for alpha-over compositing, while "
"this is possible with the transparent BSDF."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:68
msgid ""
"The maximum number of transparent bounces is controlled separately from "
"other bounces. It is also possible to use probabilistic termination of "
"transparent bounces, which might help rendering many layers of "
"transparency."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:72
msgid ""
"Note that, while semantically the ray passes through as if no geometry "
"was hit, rendering performance is affected as each transparency step "
"requires executing the shader and tracing a ray."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:77
msgid "The object :ref:`ray visibility <cycles-ray-visibility>` settings."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:83
msgid "Settings"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:88
msgid ":menuselection:`Render --> Light Paths`"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:94
msgid "Max Bounces"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:99
msgid "Total"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:97
msgid ""
"Maximum number of light bounces. For best quality, this should be set to "
"the maximum. However, in practice, it may be good to set it to lower "
"values for faster rendering. A value of 0 bounces results in direct "
"lighting only."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:101
msgid "Diffuse Bounces"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:102
msgid "Maximum number of diffuse bounces."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:103
msgid "Glossy Bounces"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:104
msgid "Maximum number of glossy bounces."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:105
msgid "Transmission Bounces"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:106
msgid "Maximum number of transmission bounces."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:107
msgid "Volume Bounces"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:108
msgid "Maximum number of volume scattering bounces."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:110
msgid "Maximum number of transparency bounces."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:114
msgid "Clamp"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:130
msgid "Clamp Direct"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:117
msgid ""
"This option limits the maximum intensity a sample from rays which have "
"not yet bounced can contribute to a pixel. It reduces noise at the cost "
"of accuracy. Setting this option to 0.0 disables clamping altogether. "
"Lower have a greater affect (dimmer samples) on the resulting image than "
"higher values."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:123
msgid ""
"A common issue encountered with *Path Tracing* is the occurrence of "
"\"fireflies\": improbable samples that contribute very high values to "
"pixels. This option provides a way to limit that. However, note that as "
"you clamp out such values, other bright lights/reflections will be dimmed"
" as well."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:128
msgid ""
"Care must be taken when using this setting to find a balance between "
"mitigating fireflies and losing intentionally bright parts. It is often "
"useful to clamp indirect bounces separately, as they tend to cause more "
"fireflies than direct bounces. See the *Clamp Indirect* setting."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:134
msgid "Clamp Indirect"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:133
msgid ""
"The same as *Clamp Direct*, but for rays which have bounced multiple "
"times."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:137
msgid "Caustics"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:143
msgid "Reflective Caustics"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:142
msgid ""
"While in principle path tracing supports rendering of caustics with a "
"sufficient number of samples, in practice it may be inefficient to the "
"point that there is just too much noise. This option can be unchecked, to"
" disable reflective caustics."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:147
msgid "Refractive Caustics"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:146
msgid "The same as above, but for refractive caustics."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:164
msgid "Filter Glossy"
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:152
msgid ""
"When using a value higher than 0.0, this will blur glossy reflections "
"after blurry bounces, to reduce noise at the cost of accuracy. 1.0 is a "
"good starting value to tweak."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:155
msgid ""
"Some light paths have a low probability of being found while contributing"
" much light to the pixel. As a result these light paths will be found in "
"some pixels and not in others, causing fireflies. An example of such a "
"difficult path might be a small light that is causing a small specular "
"highlight on a sharp glossy material, which we are seeing through a rough"
" glossy material. In fact in such a case we practically have a caustic."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:161
msgid ""
"With path tracing it is difficult to find the specular highlight, but if "
"we increase the roughness on the material, the highlight gets bigger and "
"softer, and so easier to find. Often this blurring will hardly be "
"noticeable, because we are seeing it through a blurry material anyway, "
"but there are also cases where this will lead to a loss of detail in "
"lighting."
msgstr ""

#: ../../manual/render/cycles/render_settings/light_paths.rst:168
msgid ""
"See :ref:`Reducing Noise <render-cycles-reducing-noise-clamp-samples>` "
"for examples of the clamp settings in use."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Properties Editor-->Object-->Cycles Settings-->Ray visibility"
#~ msgstr ""

#~ msgid "Camera: the ray comes straight from the camera"
#~ msgstr ""

#~ msgid "Reflection: the ray is generated by a reflection off a surface"
#~ msgstr ""

#~ msgid "Transmission: the ray is generated by a transmission through a surface"
#~ msgstr ""

#~ msgid "Shadow: the ray is used for (transparent) shadows"
#~ msgstr ""

#~ msgid ""
#~ "Diffuse: the ray is generated by a"
#~ " diffuse reflection or transmission "
#~ "(translucency)"
#~ msgstr ""

#~ msgid ""
#~ "Glossy: the ray is generated by a"
#~ " glossy specular reflection or transmission"
#~ msgstr ""

#~ msgid ""
#~ "Singular: the ray is generated by "
#~ "a perfectly sharp reflection or "
#~ "transmission"
#~ msgstr ""

#~ msgid ""
#~ "Alpha pass output is also different "
#~ "for the transparent :abbr:`BSDF (Bidirectional"
#~ " scattering distribution function)`. Other "
#~ "transmission :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)` s are considered"
#~ " opaque, because they change the "
#~ "light direction. As such they cannot "
#~ "be used for alpha-over compositing, "
#~ "while this is possible with the "
#~ "transparent :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)`."
#~ msgstr ""

#~ msgid ""
#~ "Alpha pass output is also different "
#~ "for the transparent :abbr:`BSDF (Bidirectional"
#~ " scattering distribution function)`. Other "
#~ "transmission :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)`\\ s are considered"
#~ " opaque, because they change the "
#~ "light direction. As such they cannot "
#~ "be used for alpha-over compositing, "
#~ "while this is possible with the "
#~ "transparent :abbr:`BSDF (Bidirectional scattering"
#~ " distribution function)`."
#~ msgstr ""

#~ msgid "Ray Visibility"
#~ msgstr ""

#~ msgid "Objects can be set to be invisible to particular ray types:"
#~ msgstr ""

#~ msgid "Camera"
#~ msgstr ""

#~ msgid "Diffuse reflection"
#~ msgstr ""

#~ msgid "Glossy reflection"
#~ msgstr ""

#~ msgid "Transmission"
#~ msgstr ""

#~ msgid "Shadow"
#~ msgstr ""

#~ msgid ""
#~ "Properties Editor :menuselection:`Object --> "
#~ "Cycles Settings --> Ray visibility`."
#~ msgstr ""

#~ msgid ""
#~ "This can be used, for example, to"
#~ " make an emitting mesh invisible to"
#~ " camera rays. For duplicators, visibility"
#~ " is inherited; if the parent object"
#~ " is hidden for some ray types, "
#~ "the children will be hidden for "
#~ "these too."
#~ msgstr ""

#~ msgid ""
#~ "In terms of performance, using these "
#~ "options is more efficient that using "
#~ "a shader node setup that achieves "
#~ "the same effect. Objects invisible to"
#~ " a certain ray will be skipped "
#~ "in ray traversal already, leading to "
#~ "fewer rays cast and shaders executed."
#~ msgstr ""

#~ msgid "Panel:    :menuselection:`Render --> Light Path`"
#~ msgstr ""

#~ msgid ""
#~ "Light paths are terminated probabilistically"
#~ " when specifying a minimum number of"
#~ " light bounces lower than the "
#~ "maximum. In that case paths longer "
#~ "than minimum will be randomly stopped"
#~ " when they are expected to contribute"
#~ " less light to the image. This "
#~ "will still converge to the same "
#~ "image, but renders faster while possibly"
#~ " being noisier."
#~ msgstr ""

#~ msgid ""
#~ "Note that while semantically the ray "
#~ "passes through as if no geometry "
#~ "was hit, rendering performance is "
#~ "affected as each transparency step "
#~ "requires executing the shader and "
#~ "tracing a ray."
#~ msgstr ""

