#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-15 16:28+1100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/game_engine/physics/object/dynamic.rst:4
msgid "Dynamic Physics Object Type"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:6
msgid ""
"Dynamic objects in the :doc:`Game Engine </game_engine/index>` give/receive "
"collisions, but when they do so they themselves do not rotate in response. "
"So, a Dynamic ball will hit a ramp and slide down, while a Rigid Body ball "
"would begin rotating."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:10
msgid ""
"If you do not need the rotational response the Dynamic type can save the "
"extra computation."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:12
msgid ""
"Note that these objects can still be rotated with :doc:`Logic Bricks "
"</game_engine/logic/index>` or Python code. Their physics meshes will update"
" when you do these rotations - so collisions will be based on the new "
"orientations."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:15
msgid ""
"For more documentation, see the :doc:`Top BGE Physics page "
"</game_engine/physics/index>`."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:19
#: ../../manual/game_engine/physics/object/dynamic.rst:231
msgid "Options"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:21
msgid "bpy Access"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:23
msgid ""
"Note that most of these properties are accessible through the non- BGE "
"scripting API via ``bpy.data.objects[\"ObjectName\"].game``, which is of "
"type ``bpy.types.GameObjectSetting``. This is useful so you can, for "
"example, set a range of objects to have gradated values via a for-loop."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:28
msgid "Actor"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:29
msgid ""
"Enables detection by Near and Radar Sensors. Python property: "
"``obj.game.use_actor``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:30
msgid "Ghost"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:31
msgid ""
"Disables collisions completely, similar to `No Collision`. ``Python "
"property: obj.game.use_ghost``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:33
msgid "Invisible"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:33
msgid ""
"Does not display, the same as setting the object to unrendered (such as "
"unchecking the \"Camera\" icon in the :doc:`Outliner </editors/outliner>`. "
"Python property: ``obj.use_render``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:38
msgid "Use Material Force Field"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:36
msgid ""
"Materials can have physics settings on them as well: Friction, Elasticity, "
"Force Field (positive or negative force), and also Dampening to other "
"materials. When you turn on this checkbox, you are enabling the Material to "
"exhibit this spring force. Python property: "
"``obj.game.use_material_physics_fh``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:40
msgid "Rotate From Normal"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:41
msgid "Todo Python property: ``obj.game.use_rotate_from_normal``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:45
msgid "No Sleeping"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:43
msgid ""
"Prevents simulation meshes from sleeping. When an object has a linear "
"velocity or angular velocity, it is in motion. It will detect collisions, "
"receive gravity, etc. Once these thresholds are close to zero, it will cease"
" these calculations---until another object interacts with it wake it up. "
"Python property: ``obj.game.use_sleep``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:50
msgid "Mass"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:48
msgid ""
"Affects the reaction due to collision between objects -- more massive "
"objects have more inertia. Will also affect material force fields. Will also"
" change behaviors if you are using the suspension and steering portions of "
"Bullet physics. Python property: ``obj.game.mass``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:57
msgid "Radius"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:53
msgid ""
"If you have the \"Collision Bounds: Sphere\" set explicitly (or implicitly "
"through having the Collision Bounds subpanel unchecked), this will multiply "
"with the Object's (unapplied) Scale. Note that none of the other bounds "
"types are affected. Also note that in the 3D View the display will show this"
" for all types, even though it is only actually used with Sphere. Python "
"property: ``obj.game.radius``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:61
msgid "**Basic**"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:63
msgid "**Radius= 1.5**"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:65
msgid "**Unapplied Scale**"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:67
msgid "**Applied Scale**"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:69
msgid "**Collision Bounds**"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:71
msgid "Rolls, radius of 1 BU"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:73
msgid "Rolls, radius of 1.5 BU (after \"popping\" upward)"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:75
msgid "Rolls, radius of 1.5 BU"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:77
msgid "Rolls, radius of 1 BU (!)"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:79
msgid "Default (which is Sphere)"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:81
#: ../../manual/game_engine/physics/object/dynamic.rst:83
#: ../../manual/game_engine/physics/object/dynamic.rst:85
#: ../../manual/game_engine/physics/object/dynamic.rst:87
msgid "Slides, extent of 1 BU"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:89
#: ../../manual/game_engine/physics/object/dynamic.rst:196
msgid "Box"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:91
#: ../../manual/game_engine/physics/object/dynamic.rst:93
#: ../../manual/game_engine/physics/object/dynamic.rst:95
#: ../../manual/game_engine/physics/object/dynamic.rst:97
msgid "\"\""
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:99
#: ../../manual/game_engine/physics/object/dynamic.rst:209
msgid "Convex Hull"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:101
#: ../../manual/game_engine/physics/object/dynamic.rst:103
msgid "Slides, extent of 1 BU (but with more friction than above)"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:105
msgid "Acts insane"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:107
msgid "Slides extent of 1.5 BU"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:109
msgid "Triangle Mesh"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:115
msgid "Form Factor"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:112
msgid ""
"For affecting the Inertia Tensor. The higher the value, the greater the "
"rotational inertia, and thus the more resistant to torque. You might think "
"this is strange, considering Dynamic types do not have torque in response to"
" collisions -- but you can still see this value's effects when you manually "
"apply Torque. Python property: ``obj.game.form_factor``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:120
msgid "Anisotropic Friction"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:118
msgid ""
"Isotropic friction is identical at all angles. Anisotropic is directionally-"
"dependant. Here you can vary the coefficients for the three axes "
"individually, or disable friction entirely. Python properties: "
"``obj.game.use_anisotropic_friction`` (boolean) and "
"``obj.game.friction_coefficients`` (a 3-element array)."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:127
msgid "Velocity- Limit the speed of an object 0 - 1000."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:125
msgid "Minimum"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:124
msgid ""
"The object is allowed to be at complete rest, but as soon as it accelerates "
"it will immediately jump to the minimum speed. Python property: "
"``obj.game.velocity_min``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:127
msgid "Maximum"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:128
msgid "Top speed of the object.  Python property: ``obj.game.velocity_max``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:134
msgid "Damping- Increase the \"sluggishness\" of the object."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:130
msgid "Translation"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:131
msgid ""
"Resist movement 0-1. At \"1\" the object is completely immobile. Python "
"property: ``obj.game.damping``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:134
msgid "Rotation"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:133
msgid ""
"Resist rotation, but not the kind of rotation that comes from a collision. "
"For example, if a Motion Controller applies Torque to an object, this "
"damping will be a factor. Python property: ``obj.game.rotation_damping``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:141
msgid "Lock Translation"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:137
msgid ""
"Seize the object in the world along one or more axes. Note that this is "
"global coordinates, not local or otherwise."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:140
msgid "X Python property: ``obj.game.lock_location_x``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:141
msgid "Y Python property: ``obj.game.lock_location_y``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:142
msgid "Z Python property: ``obj.game.lock_location_z``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:149
msgid "Lock Rotation"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:144
msgid "Same, but for rotation (also with respect to the global coordinates)."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:146
msgid "X Python property: ``obj.game.lock_rotation_x``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:147
msgid "Y Python property: ``obj.game.lock_rotation_y``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:148
msgid "Z Python property: ``obj.game.lock_rotation_z``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:154
msgid "Collision Bounds"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:156
msgid ""
"The first thing you must understand is the idea of the 3d Bounding Box. If "
"you run through all the vertices of a mesh and record the lowest and highest"
" x values, you have found the `x min/max` the complete boundary for all x "
"values within the mesh. Do this again for y and z, then make a rectangular "
"prism out of these values, and you have a `Bounding Box`. This box could be "
"oriented relative globally to the world or locally to the object's rotation."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:164
msgid ""
"Demonstration of a Local Bounding Box (left) and a Global Bounding Box "
"(right)."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:166
msgid "The `x extent`, then, is half of the distance between the x min/max."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:168
msgid ""
"Throughout all of this you must be cognizant of the Object Origin. For the "
"Game engine, the default :kbd:`Ctrl-Alt-Shift-C`, :kbd:`3` "
"(:menuselection:`Set Origin --> Origin to Geometry`) is unlikely to get the "
"desired placement of the Collision Bounds that you want. Instead, you should"
" generally set the origin by looking at the :kbd:`T`-toolshelf after you do "
"the `Set Origin`, and changing the `Center` from `Median Center` to `Bounds "
"Center`. Blender will remember this change for future :kbd:`Ctrl-Alt-"
"Shift-C` executions."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:175
msgid ""
"All Collision Bounds are centered on this origin. All boxes are oriented "
"locally, so object rotation matters."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:179
msgid "Setting the origin to Bounds Center instead of Median Center."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:181
msgid ""
"A final introductory comment: When you set the Collision Bounds on an "
"object, Blender will attempt to display a visualization of the bounds in the"
" form of a dotted outline. Currently, there is a bug: `The 3D View` does not"
" display this bounds preview where it actually will be during the game. To "
"see it, go to :menuselection:`Game --> Show Physics Visualization` and look "
"for the white (or green, if sleeping) geometry."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:188
msgid ""
"Now we can explain the various options for the `Collision Bounds` settings:"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:191
msgid "Default"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:191
msgid ""
"For Dynamic and Static objects, it is a Triangle Mesh (see below). For "
"everything else, it is a Sphere (see below)."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:194
msgid "Capsule - A cylinder with hemispherical caps, like a pill."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:194
msgid ""
"Radius of the hemispheres is the greater of the x or y extent. Height is the"
" z bounds"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:197
msgid "The x,y,z bounding box, as defined above."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:200
msgid "Sphere"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:199
msgid ""
"Radius is defined by the object's scale (visible in the N properties panel) "
"times the physics radius (can be found in Physics » Attributes » Radius. "
"Note: This is the only bounds that respects the Radius option."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:203
msgid "Cylinder"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:203
msgid "Radius is the greater of the x or y extent. Height is the z bounds."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:206
msgid "Cone"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:206
msgid ""
"Base radius is the greater of the x or y extent. Height is the z bounds."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:209
msgid "Forms a shrink-wrapped, simplified geometry around the object."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:213
msgid "A convex hull sketch"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:216
msgid "Triangle mesh"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:216
msgid ""
"Most expensive, but most precise. Collision will happen with all of "
"triangulated polygons, instead of using a virtual mesh to approximate that "
"collision."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:224
msgid "By Hand"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:219
msgid ""
"This is not an option in the Physics tab's Collision Bounds settings, but a "
"different approach, entirely. You create a second mesh, which is invisible, "
"to be the physics representation. This becomes the parent for your display "
"object. Then, your display object is set to ghost so it doesn't fight with "
"the parent object. This method allows you to strike a balance between the "
"accuracy of `Triangle Mesh` with the efficiency of some of the others. See "
"the demo of this in the dune buggy to the right."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:228
msgid "Another way to create Collision Bounds -- By hand."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:233
msgid "There are only two options in the Collision Bounds subpanel."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:242
msgid "Margin"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:236
msgid ""
"\"Add extra margin around object for collision detection, small amount "
"required for stability.\" If you find your objects are getting stuck in "
"places they shouldn't, try increasing this to, say, 0.06."
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:239
msgid ""
"Sometimes 0.06 is the default (such as on the Default Cube), but sometimes "
"it is not. You have to keep an eye on the setting, or else learn the "
"symptoms so you can respond when it gives you trouble. If you're "
"lazy/paranoid/unsure/diligent/bored, you can always run this on the Python "
"Console to bump all 0.0 margins to 0.06: for `obj` in ``bpy.data.objects``: "
"``obj.game.collision_margin = obj.game.collision_margin`` or 0.06"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:250
msgid "Compound"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:245
msgid ""
"\"Add children to form compound collision object.\" Basically, if you have a"
" child object and do not have this enabled, the child's collisions will not "
"have an effect on that object \"family\" (though it will still push other "
"objects around). If you do have it checked, the parent's physics will "
"respond to the child's collision (thus updating the whole family). Python "
"property: ``obj.game.use_collision_compound``"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:253
msgid "Create Obstacle"
msgstr ""

#: ../../manual/game_engine/physics/object/dynamic.rst:255
msgid "Todo"
msgstr ""
