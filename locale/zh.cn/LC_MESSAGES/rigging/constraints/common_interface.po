#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-05 23:58+1100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/rigging/constraints/common_interface.rst:7
msgid "Constraints Common Interface"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:12
msgid "The three parts of a constraint interface"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:15
msgid ""
"As with :doc:`modifiers </modeling/modifiers/index>`, an object (or bone, "
"see the :doc:`rigging chapter </rigging/index>` for details) can use several"
" constraints at once. Hence, these constraints are organized in a stack "
"which controls their order of evaluation (from top to bottom)."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:20
msgid ""
"All constraints share a common basic interface, packed up in a sort of sub-"
"panel, that is split into three parts:"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:23
msgid "The header, gathering most common settings."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:24
msgid "The constraint's specific settings."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:25
msgid ""
"The influence and animation controls (the *Rigid Body Joint* constraints "
"have no influence setting)."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:29
msgid "Constraints Header"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:34
msgid "A constraint header"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:37
msgid ""
"The header of a constraint \"sub-panel\" is the same for all. From left to "
"right, you have:"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:40
msgid "A small arrow"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:40
msgid "This control allows you to show/hide the constraint's settings."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:43
msgid "The constraint type"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:43
msgid "This is just static text showing you what this constraint is..."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:53
msgid "The name field"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:46
msgid ""
"Here you can give your constraint a more meaningful name than the default "
"one. This control has another *important* purpose: it turns red when the "
"constraint is not functional (as in *A constraint header*). As most "
"constraints need a second \"target\" object to work (see below), when just "
"added, they are in \"red state\", as Blender cannot guess which object or "
"bone to use as target. This can also happen when you choose an invalid set "
"of settings, e.g. with a :doc:`Track To constraint "
"</rigging/constraints/tracking/track_to>` of which the *To* and *Up* vectors"
" are both set to the same axis. As noted above, constraints in \"red state\""
" are ignored during the stack evaluation."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:56
msgid "The \"up\"/\"down\" buttons"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:56
msgid ""
"As seen above, these allow you to move a constraint up/down in the stack."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:60
msgid "The \"X\" control"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:59
msgid ""
"As seen above, this will delete (remove from the stack) the constraint."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:63
msgid "Constraints Settings"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:68
msgid ""
"The central part of a constraint's subpanel contains the constraint's "
"settings, the target, and constraint space"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:71
msgid ""
"The constraints settings area is of course specific to each constraint type."
" However, there are two points that are common to many constraints, so we "
"will detail them here."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:76
msgid "The target"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:78
msgid ""
"Most constraints need another \"target\" object or bone to \"guide\" them. "
"You select which by selecting its name in the *Target* field. Except for a "
"few cases, you can use any type of object (camera, mesh, empty...); its "
"object origin will be the target point."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:83
msgid ""
"When you type in the *OB* field a mesh or lattice name, a second *Vertex "
"Group* field appears just below. If you leave it empty, the mesh or lattice "
"will be used as a standard object target. But if you enter in this *Vertex "
"Group* field the name of one of the mesh's or lattice's vertex groups, then "
"the constraint will use the median point of this vertex group as target."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:89
msgid ""
"Similarly, if you type in the *OB* field an armature name, a second *Bone* "
"field appears just below. If you enter in it the name of one of the "
"armature's bones, then the constraint will use this bone's *root* as target."
" In some constraints, when you use a bone as target, another *Head/Tail* "
"numeric field will also appear, that allows you to select where along the "
"bone the target point will lay, from root (**0.0**) to tip (**1.0**) "
"(remember that currently, in Blender UI, bones' roots are called \"heads\", "
"and bones' tips, \"tails\"...)."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:101
msgid "The Constraint Space (Space)"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:103
msgid ""
"For many constraints you can choose in which space it is evaluated/applied. "
"In the Space drop-down lists, the right side one is the space that the owner"
" is evaluated in (Owner Space). When such a constraint uses a target, you "
"can also choose in which space the target is evaluated (Target Space). The "
"Target Space drop-down list is on the left side. Both lists have the same "
"options, depending on whether the element (owner or target) is a regular "
"object, or a bone:"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:113
msgid "Local Space"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:111
msgid ""
"The object's properties are evaluated in its own local space, i.e. based on "
"its rest position (without taking into account its parents transformations "
"in its chain, or its armature object's transformation)."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:118
msgid "Local With Parent (bones only)"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:116
msgid ""
"The bone properties are evaluated in its own local space, *including* the "
"transformations due to a possible parent relationship (i.e. due to the "
"chain's transformations above the bone)."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:124
msgid "Pose Space (bones only)"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:121
msgid ""
"The bone properties are evaluated in the armature object local space (i.e. "
"independently from the armature transformations in *Object* mode). Hence, if"
" the armature object has null transformations, *Pose Space* will have the "
"same effect as *World Space*."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:128
msgid "Local (Without Parent) Space (objects only)"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:127
msgid ""
"The object properties are evaluated in its own local space, *without* the "
"transformations due to a possible parent relationship."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:133
msgid "World Space (default setting)"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:131
msgid ""
"Here the object's or bone's properties are evaluated in the global "
"coordinate system. This is the easiest to understand and most natural "
"behavior, as it always uses the \"visual\" transform properties (i.e. as you"
" see them in the 3D views)."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:135
msgid ""
"Understanding the Constraint Space effects is not really easy (unless you "
"are a geometry genius...). The best thing to do is to experiment with their "
"different combinations, using e.g. two empties (as they materialize clearly "
"their axes), and a *Copy Rotation* constraint (as rotations are the most "
"demonstrative transformations, to visualize the various spaces "
"specificities...)."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:145
#: ../../manual/rigging/constraints/common_interface.rst:150
msgid "Influence"
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:153
msgid ""
"At the bottom of nearly all constraints, you have the *Influence* slider, "
"which controls the influence of the constraint on its owner. As you might "
"expect, **0.0** means that the constraint has no effect, and **1. 0** means "
"that the constraint has full effect. Using in-between values, you can have "
"several constraints all working together on the same owner's properties. "
"Note that if a constraint has a full influence on a given property, all "
"other constraints above in the stack working on that same property will have"
" no effect at all."
msgstr ""

#: ../../manual/rigging/constraints/common_interface.rst:161
msgid ""
"But the best thing with influence is that you can animate it with an Fcurve "
"- see :doc:`the constraints page of the animation chapter "
"</animation/constraints>` for more details about this."
msgstr ""
