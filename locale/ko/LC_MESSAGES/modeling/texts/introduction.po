# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-29 17:18-0500\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:4
msgid "Introduction"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:6
msgid "Reference"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst
msgid "Mode"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:9
msgid "Edit Mode"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst
msgid "Menu"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:10
msgid ":menuselection:`Add --> Text`"
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:12
msgid ""
"Text objects contain some text, and are in the same object type family as"
" curves and surfaces ones, as fonts are vectorial data (they are made of "
"curves)."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:15
msgid ""
"Blender uses a \"Font System\" to manage mapping letter codes to geometry"
" representing them in 3D Views. This font system has its own *built-in* "
"font, but it can use external fonts too, including *PostScript Type 1*, "
"*OpenType* and *TrueType* fonts. And moreover, it can use any objects "
"existing in the current blend-file as letters."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:23
msgid "An example of an extruded text."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:25
msgid ""
"Text objects allow you to create and render 2D or 3D text, with various "
"advanced layout options, like justifying and frames. By default, letters "
"are just flat filled surfaces, exactly like any closed 2D curve. But, "
"just like curves, you can extrude them, and apply :doc:`modifiers "
"</modeling/modifiers/introduction>` to them (e.g. to make them "
":doc:`follow a curve </modeling/modifiers/deform/curve>`)."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:34
msgid ""
"You can convert a text object, either to a curve, or directly to a mesh, "
"using :ref:`object-convert-to` in Object Mode."
msgstr ""

#: C:/Users/Aaron/Documents/Projects/Blender_Foundation/blender_docs/manual/modeling/texts/introduction.rst:39
msgid ""
"A maximum of 50,000 characters is allowed per text object. However, be "
"forewarned that the more characters a single text object has, the slower "
"the object will respond interactively."
msgstr ""

#~ msgid "Shape"
#~ msgstr ""

#~ msgid "Mode:     Object or Edit Mode"
#~ msgstr ""

#~ msgid "Panel:    Curve and Surface"
#~ msgstr ""

#~ msgid ""
#~ "As you can see in the *Curve "
#~ "and Surface* panel, texts have most "
#~ "of the same options as curves."
#~ msgstr ""

#~ msgid "Resolution"
#~ msgstr ""

#~ msgid ""
#~ "Preview, Render resolution. See :ref:`curve"
#~ " resolution <curve-resolution>`."
#~ msgstr ""

#~ msgid "the shape settings."
#~ msgstr ""

#~ msgid "Fast Editing"
#~ msgstr ""

#~ msgid "disables curve filling while in edit mode."
#~ msgstr ""

#~ msgid "Fill"
#~ msgstr ""

#~ msgid ""
#~ "The fill options control how the "
#~ "text curves are filled in when "
#~ "text is *Extruded* or *Beveled* in "
#~ "the *Geometry* Panel."
#~ msgstr ""

#~ msgid "Front"
#~ msgstr ""

#~ msgid "Fills in the front side of the surface."
#~ msgstr ""

#~ msgid "Back"
#~ msgstr ""

#~ msgid "Fills in the back side of the surface."
#~ msgstr ""

#~ msgid "Fill Deformed"
#~ msgstr ""

#~ msgid "Fills the curves after applying shape keys and modifiers."
#~ msgstr ""

#~ msgid "Textures"
#~ msgstr ""

#~ msgid "Texture Settings."
#~ msgstr ""

#~ msgid "Use UV for Mapping"
#~ msgstr ""

#~ msgid "Use UV values as generated texture coordinates."
#~ msgstr ""

#~ msgid "Auto Texture Space"
#~ msgstr ""

#~ msgid ""
#~ "Adjusts the active object's texture "
#~ "space automatically when transforming object."
#~ msgstr ""

#~ msgid "Geometry"
#~ msgstr ""

#~ msgid ""
#~ "Text objects have all the :doc:`curves"
#~ " extrusion features "
#~ "</modeling/curves/editing/extrude>`."
#~ msgstr ""

#~ msgid "Panel:    Curve and Surface, Font and Char"
#~ msgstr ""

#~ msgid ""
#~ "Panel:    :menuselection:`Tool shelf --> "
#~ "Create -->Add Primitive --> Other: Text`"
#~ msgstr ""

#~ msgid ""
#~ "Texts in Bender allow you to "
#~ "create/render 2D or 3D text, shaded "
#~ "as you want, with various advanced "
#~ "layout options (like justifying and "
#~ "frames), as we will see below. By"
#~ " default, letters are just flat "
#~ "filled surfaces, exactly like any closed"
#~ " 2D curve. But you can of "
#~ "course extrude them... And texts can "
#~ "follow other curves."
#~ msgstr ""

#~ msgid "Mode:     Edit Mode"
#~ msgstr ""

#~ msgid ""
#~ "Panel:    :menuselection:`Tool shelf --> "
#~ "Create --> Add Primitive --> Other: "
#~ "Text`"
#~ msgstr ""

#~ msgid "Menu:     :menuselection:`Add --> Text`"
#~ msgstr ""

#~ msgid "Text Examples."
#~ msgstr ""

#~ msgid "Text examples."
#~ msgstr ""

#~ msgid ""
#~ "*Text* objects are exactly what they "
#~ "sound like: they contain some text. "
#~ "They share the same object type as"
#~ " curves and surfaces, as modern fonts"
#~ " (OpenType, TrueType, etc.) are vectorial,"
#~ " made of curves (generally BÃ©ziers)."
#~ msgstr ""

#~ msgid ""
#~ "Blender uses a \"Font System\" to "
#~ "manage mapping \"letter codes --> "
#~ "objects representing them in 3D views\"."
#~ " This implies that not only does "
#~ "the font system have its own "
#~ "*built-in* font, but it can use "
#~ "external fonts too, including *PostScript "
#~ "Type 1*, *OpenType* and *TrueType* "
#~ "fonts. And last but not least, it"
#~ " can use any objects existing in "
#~ "the current blend-file as letters..."
#~ msgstr ""

#~ msgid ""
#~ "Texts in Blender allow you to "
#~ "create/render 2D or 3D text, shaded "
#~ "as you want, with various advanced "
#~ "layout options (like justifying and "
#~ "frames), as we will see below. By"
#~ " default, letters are just flat "
#~ "filled surfaces, exactly like any closed"
#~ " 2D curve. But you can of "
#~ "course extrude them... And texts can "
#~ "follow other curves."
#~ msgstr ""

#~ msgid ""
#~ "Of course, once you are happy with"
#~ " the shape of your text, you "
#~ "can convert it (with :kbd:`Alt-C`, in"
#~ " *Object Mode*), either to a curve,"
#~ " or directly to a mesh, allowing "
#~ "you to use all the powerful "
#~ "features of these types of objects "
#~ "on it..."
#~ msgstr ""

#~ msgid ""
#~ "Fig. :ref:`fig-texts-intro-example` "
#~ "shows some examples of various fonts "
#~ "in action, including the \"blue\" font"
#~ " that has been applied to a "
#~ "curve path."
#~ msgstr ""

#~ msgid ""
#~ "As you can see when you switch "
#~ "between *Object Mode* and *Edit Mode*,"
#~ " the *Font* panel remains the same."
#~ " This means that its settings can "
#~ "be applied equally in both modes "
#~ "... and this implies that you "
#~ "cannot apply them to just a part"
#~ " of the mesh. So font, size, "
#~ "and so on, are common to all "
#~ "letters in a *Text* object. There "
#~ "is just one exception: the *Bold* "
#~ "or *Italic* buttons control properties "
#~ "specific to each letter (this is a"
#~ " way to use up to four "
#~ "different fonts in a text)."
#~ msgstr ""

#~ msgid ""
#~ "For optimum resource usage, only "
#~ "characters that are being used consume"
#~ " memory (rather than the entire "
#~ "character set)."
#~ msgstr ""

#~ msgid ""
#~ "You can convert *Text*, either to "
#~ "a curve, or directly to a mesh,"
#~ " with :kbd:`Alt-C` in *Object Mode*."
#~ msgstr ""

#~ msgid "Panel"
#~ msgstr ""

#~ msgid ""
#~ ":menuselection:`Tool shelf --> Create --> "
#~ "Add Primitive --> Other: Text`"
#~ msgstr ""

#~ msgid ""
#~ "*Text* objects contain some text, and"
#~ " share the same object type as "
#~ "*Curves* and *Surfaces*, as modern fonts"
#~ " are vectorial, made of curves."
#~ msgstr ""

#~ msgid ""
#~ "When you switch between *Object Mode*"
#~ " and *Edit Mode*, the *Font* panel"
#~ " remains the same. This means that"
#~ " its settings can be applied equally"
#~ " in both modes, and this implies "
#~ "that you cannot apply them to just"
#~ " a part of the text. So font,"
#~ " size, and so on, are common to"
#~ " all letters in a *Text* object. "
#~ "There is just one exception: the "
#~ "*Bold* or *Italic* buttons control "
#~ "properties specific to each letter (this"
#~ " is a way to use up to "
#~ "four different fonts in a text)."
#~ msgstr ""

#~ msgid ""
#~ "Blender uses a \"Font System\" to "
#~ "manage mapping letter codes to objects"
#~ " representing them in 3D views. This"
#~ " font system has its own *built-"
#~ "in* font, but it can use external"
#~ " fonts too, including *PostScript Type "
#~ "1*, *OpenType* and *TrueType* fonts. And"
#~ " moreover, it can use any objects "
#~ "existing in the current blend-file "
#~ "as letters."
#~ msgstr ""

#~ msgid ""
#~ "*Text* objects contain some text, and"
#~ " share the same object type as "
#~ "*Curves* and *Surfaces*, as fonts are"
#~ " vectorial, made of curves."
#~ msgstr ""

#~ msgid ""
#~ "Blender uses a \"Font System\" to "
#~ "manage mapping letter codes to objects"
#~ " representing them in 3D Views. This"
#~ " font system has its own *built-"
#~ "in* font, but it can use external"
#~ " fonts too, including *PostScript Type "
#~ "1*, *OpenType* and *TrueType* fonts. And"
#~ " moreover, it can use any objects "
#~ "existing in the current blend-file "
#~ "as letters."
#~ msgstr ""

#~ msgid ""
#~ "*Text* objects allow you to create "
#~ "and render 2D or 3D text, with "
#~ "various advanced layout options, like "
#~ "justifying and frames. By default, "
#~ "letters are just flat filled surfaces,"
#~ " exactly like any closed 2D curve."
#~ " But, just like *Curves*, you can "
#~ "extrude them. And texts can follow "
#~ "other curves."
#~ msgstr ""

#~ msgid ""
#~ "You can convert *Text*, either to "
#~ "a curve, or directly to a mesh,"
#~ " using :ref:`object-convert-to` in "
#~ "*Object Mode*."
#~ msgstr ""

#~ msgid ""
#~ "A maximum of 50000 characters is "
#~ "allowed per text object; however, be "
#~ "forewarned that the more characters a"
#~ " single text object has, the slower"
#~ " the object will respond interactively."
#~ msgstr ""

#~ msgid ""
#~ "*Text* objects contain some text, and"
#~ " are in the same object type "
#~ "family as *Curves* and *Surfaces* ones,"
#~ " as fonts are vectorial data (they"
#~ " are made of curves)."
#~ msgstr ""

#~ msgid ""
#~ "*Text* objects allow you to create "
#~ "and render 2D or 3D text, with "
#~ "various advanced layout options, like "
#~ "justifying and frames. By default, "
#~ "letters are just flat filled surfaces,"
#~ " exactly like any closed 2D curve."
#~ " But, just like *Curves*, you can "
#~ "extrude them, and apply :doc:`modifiers "
#~ "</modeling/modifiers/introduction>` to them (e.g."
#~ " to make them :doc:`follow a curve"
#~ " </modeling/modifiers/deform/curve>`)."
#~ msgstr ""

#~ msgid ""
#~ "You can convert a *Text* object, "
#~ "either to a curve, or directly to"
#~ " a mesh, using :ref:`object-convert-"
#~ "to` in Object Mode."
#~ msgstr ""

