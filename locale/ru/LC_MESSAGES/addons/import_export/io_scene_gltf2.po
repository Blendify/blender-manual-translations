# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.81 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.81 Manual 2.81\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-12 16:43-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/addons/import_export/io_scene_gltf2.rst:4
msgid "glTF 2.0"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:6
msgid "Reference"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst
msgid "Category"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:9
msgid "Import-Export"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst
msgid "Menu"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:10
msgid ":menuselection:`File --> Import/Export --> glTF 2.0 (.glb, .gltf)`"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:14
msgid "Usage"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:16
msgid ""
"glTFâ„¢ (GL Transmission Format) is used for transmission and loading of 3D"
" models in web and native applications. glTF reduces the size of 3D "
"models and the runtime processing needed to unpack and render those "
"models. This format is commonly used on the web, and has support in "
"various 3D engines such as Unity3D, Unreal Engine 4, and Godot."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:22
msgid "This importer/exporter supports the following glTF 2.0 features:"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:24
#: ../../manual/addons/import_export/io_scene_gltf2.rst:33
msgid "Meshes"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:25
msgid "Materials (Principled BSDF) and Shadeless (Unlit)"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:26
#: ../../manual/addons/import_export/io_scene_gltf2.rst:457
msgid "Textures"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:27
#: ../../manual/addons/import_export/io_scene_gltf2.rst:473
msgid "Cameras"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:28
msgid "Punctual lights (point, spot, and directional)"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:29
msgid "Animation (keyframe, shape key, and skinning)"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:35
msgid ""
"glTF's internal structure mimics the memory buffers commonly used by "
"graphics chips when rendering in real-time, such that assets can be "
"delivered to desktop, web, or mobile clients and be promptly displayed "
"with minimal processing. As a result, quads and n-gons are automatically "
"converted to triangles when exporting to glTF. Discontinuous UVs and "
"flat-shaded edges may result in moderately higher vertex counts in glTF "
"compared to Blender, as such vertices are separated for export. Likewise,"
" curves and other non-mesh data are not preserved, and must be converted "
"to meshes prior to export."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:46
#: ../../manual/addons/import_export/io_scene_gltf2.rst:499
msgid "Materials"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:48
msgid ""
"The core material system in glTF supports a metal/rough :abbr:`PBR "
"(Physically Based Rendering)` workflow with the following channels of "
"information:"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:51
#: ../../manual/addons/import_export/io_scene_gltf2.rst:98
msgid "Base Color"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:52
msgid "Metallic"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:53
msgid "Roughness"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:54
#: ../../manual/addons/import_export/io_scene_gltf2.rst:143
msgid "Baked Ambient Occlusion"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:55
#: ../../manual/addons/import_export/io_scene_gltf2.rst:183
msgid "Normal Map"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:56
#: ../../manual/addons/import_export/io_scene_gltf2.rst:214
msgid "Emissive"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:60
msgid ""
"An example of the various image maps available in the glTF 2.0 core "
"format. This is the `water bottle sample model "
"<https://github.com/KhronosGroup/glTF-Sample-"
"Models/tree/master/2.0/WaterBottle>`__ shown alongside slices of its "
"various image maps."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:66
msgid "Imported Materials"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:68
msgid ""
"The glTF material system is different from Blender's own materials. When "
"a glTF file is imported, the add-on will construct a set of Blender nodes"
" to replicate each glTF material as closely as possible."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:71
msgid ""
"The importer supports Metal/Rough PBR (core glTF), Spec/Gloss PBR "
"(``KHR_materials_pbrSpecularGlossiness``) and Shadeless "
"(``KHR_materials_unlit``) materials."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:76
msgid ""
"Examining the result of the material import process is a good way to see "
"examples of the types of material nodes and settings that can be exported"
" to glTF."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:81
msgid "Exported Materials"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:83
msgid ""
"The exporter supports Metal/Rough PBR (core glTF) and Shadeless "
"(``KHR_materials_unlit``) materials. It will construct a glTF material "
"based on the nodes it recognizes in the Blender material. The material "
"export process handles the settings described below."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:89
msgid ""
"When image textures are used by materials, glTF requires that images be "
"in PNG or JPEG format. The add-on will automatically convert images from "
"other formats, increasing export time."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:94
msgid "To create Shadeless (Unlit) materials, use the Background material type."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:100
msgid ""
"The glTF base color is determined by looking for a Base Color input on a "
"Principled BSDF node. If the input is unconnected, the input's default "
"color (the color field next to the unconnected socket) is used as the "
"Base Color for the glTF material."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:106
msgid "A solid base color can be specified directly on the node."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:108
msgid ""
"If an Image Texture node is found to be connected to the Base Color "
"input, that image will be used as the glTF base color."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:113
msgid "An image is used as the glTF base color."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:117
msgid "Metallic and Roughness"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:119
msgid ""
"These values are read from the Principled BSDF node. If both of these "
"inputs are unconnected, the node will display sliders to control their "
"respective values between 0.0 and 1.0, and these values will be copied "
"into the glTF."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:123
msgid ""
"When using an image, glTF expects the metallic values to be encoded in "
"the blue (``B``) channel, and roughness to be encoded in the green "
"(``G``) channel of the same image. If images are connected to the Blender"
" node in a manner that does not follow this convention, the add-on may "
"attempt to adapt the image to the correct form during exporting (with an "
"increased export time)."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:128
msgid ""
"In the Blender node tree, it is recommended to use a Separate RGB node to"
" separate the channels from an Image Texture node, and connect the green "
"(``G``) channel to Roughness, and blue (``B``) to Metallic. The glTF "
"exporter will recognize this arrangement as matching the glTF standard, "
"and that will allow it to simply copy the image texture into the glTF "
"file during export."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:134
msgid ""
"The Image Texture node for this should have its *Color Space* set to Non-"
"Color."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:138
msgid ""
"A metallic/roughness image connected in a manner consistent with the glTF"
" standard, allowing it to be used verbatim inside an exported glTF file."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:145
msgid ""
"glTF is capable of storing a baked ambient occlusion map. Currently there"
" is no arrangement of nodes that causes Blender to use such a map in "
"exactly the same way as intended in glTF. However, if the exporter finds "
"a custom node group by the name of ``glTF Settings``, and finds an input "
"named ``Occlusion`` on that node group, it will look for an Image Texture"
" attached there to use as the occlusion map in glTF. The effect need not "
"be shown in Blender, as Blender has other ways of showing ambient "
"occlusion, but this method will allow the exporter to write an occlusion "
"image to the glTF. This can be useful to real-time glTF viewers, "
"particularly on platforms where there may not be spare power for "
"computing such things at render time."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:158
msgid ""
"A pre-baked ambient occlusion map, connected to a node that doesn't "
"render but will export to glTF."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:162
msgid ""
"The easiest way to create the custom node group is to import an existing "
"glTF model that contains an occlusion map, such as the `water bottle "
"<https://github.com/KhronosGroup/glTF-Sample-"
"Models/tree/master/2.0/WaterBottle>`__ or another existing model. A "
"manually created custom node group can also be used."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:167
msgid ""
"glTF stores occlusion in the red (``R``) channel, allowing it to "
"optionally share the same image with the roughness and metallic channels."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:172
msgid ""
"This combination of nodes mimics the way glTF packs occlusion, roughness,"
" and metallic values into a single image."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:177
msgid ""
"The Cycles render engine has a Bake panel that can be used to bake "
"ambient occlusion maps. The resulting image can be saved and connected "
"directly to the ``glTF Settings`` node."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:185
msgid ""
"To use a normal map in glTF, connect an Image Texture node's color output"
" to a Normal Map node's color input, and then connect the Normal Map "
"normal output to the Principled BSDF node's normal input. The Image "
"Texture node for this should have its *Color Space* property set to Non-"
"Color."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:190
msgid ""
"The Normal Map node must remain on its default property of Tangent Space "
"as this is the only type of normal map currently supported by glTF. The "
"strength of the normal map can be adjusted on this node. The exporter is "
"not exporting these nodes directly, but will use them to locate the "
"correct image and will copy the strength setting into the glTF."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:198
msgid ""
"A normal map image connected such that the exporter will find it and copy"
" it to the glTF file."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:203
msgid ""
"The Cycles render engine has a Bake panel that can be used to bake "
"tangent-space normal maps from almost any other arrangement of normal "
"vector nodes. Switch the Bake type to Normal. Keep the default space "
"settings (space: Tangent, R: +X, G: +Y, B: +Z) when using this bake panel"
" for glTF. The resulting baked image can be saved and plugged into to a "
"new material using the Normal Map node as described above, allowing it to"
" export correctly."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:210
msgid "See: :doc:`Cycles Render Baking </render/cycles/baking>`"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:216
msgid ""
"An Image Texture node can be connected to the Emission input on the "
"Principled BSDF node to include an emissive map with the glTF material. "
"Alternatively, the Image Texture node can be connected to an Emission "
"shader node, and optionally combined with properties from a Principled "
"BSDF node by way of an Add Shader node."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:221
msgid ""
"If the emissive map is alone in the material, it is best to set the Base "
"Color default to black, and the Roughness default to 1.0. This minimizes "
"the influence of the other channels if they are not needed."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:227
msgid ""
"This arrangement is supported for backwards compatibility. It is simpler "
"to use the Principled BSDF node directly."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:232
msgid "Double-Sided / Backface Culling"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:234
msgid ""
"For materials where only the front faces will be visible, turn on "
"*Backface Culling* in the *Settings* panel of an Eevee material. When "
"using other engines (Cycles, Workbench) you can temporarily switch to "
"Eevee to configure this setting, then switch back."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:238
msgid "Leave this box un-checked for double-sided materials."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:242
msgid "The inverse of this setting controls glTF's ``DoubleSided`` flag."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:246
msgid "Blend Modes"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:248
msgid ""
"The Base Color input can optionally supply alpha values. How these values"
" are treated by glTF depends on the selected blend mode."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:251
msgid ""
"With the Eevee render engine selected, each material has a Blend Mode on "
"the material settings panel. Use this setting to define how alpha values "
"from the Base Color channel are treated in glTF. Three settings are "
"supported by glTF:"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:255
msgid "Opaque"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:256
msgid "Alpha values are ignored."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:257
msgid "Alpha Blend"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:258
msgid "Lower alpha values cause blending with background objects."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:261
msgid "Alpha Clip"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:260
msgid ""
"Alpha values below the *Clip Threshold* setting will cause portions of "
"the material to not be rendered at all. Everything else is rendered as "
"opaque."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:265
msgid "With the Eevee engine selected, a material's blend modes are configurable."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:269
msgid ""
"Be aware that transparency (or *Alpha Blend* mode) is complex for real-"
"time engines to render, and may behave in unexpected ways after export. "
"Where possible, use *Alpha Clip* mode instead, or place *Opaque* polygons"
" behind only a single layer of *Alpha Blend* polygons."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:276
msgid "UV Mapping"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:278
msgid ""
"Control over UV map selection and transformations is available by "
"connecting a UV Map node and a Mapping node to any Image Texture node."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:281
msgid ""
"Settings from the Mapping node are exported using a glTF extension named "
"``KHR_texture_transform``. There is a mapping type selector across the "
"top. *Point* is the recommended type for export. *Texture* and *Vector* "
"are also supported. The supported offsets are:"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:285
msgid "*Location* - X and Y"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:286
msgid "*Rotation* - Z only"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:287
msgid "*Scale* - X and Y"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:289
msgid "For the *Texture* type, *Scale* X and Y must be equal (uniform scaling)."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:293
msgid "A deliberate choice of UV mapping."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:297
msgid ""
"These nodes are optional. Not all glTF readers support multiple UV maps "
"or texture transforms."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:301
msgid "Factors"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:303
msgid ""
"Any Image Texture nodes may optionally be multiplied with a constant "
"color or scalar. These will be written as factors in the glTF file, which"
" are numbers that are multiplied with the specified image textures. These"
" are not common."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:309
msgid "Example"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:311
msgid ""
"A single material may use all of the above at the same time, if desired. "
"This figure shows a typical node structure when several of the above "
"options are applied at once:"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:316
msgid "A Principled BSDF material with an emissive texture."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:320
msgid "Extensions"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:322
msgid ""
"The core glTF 2.0 format can be extended with extra information, using "
"glTF extensions. This allows the file format to hold details that were "
"not considered universal at the time of first publication. Not all glTF "
"readers support all extensions, but some are fairly common."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:326
msgid ""
"Certain Blender features can only be exported to glTF via these "
"extensions. The following `glTF 2.0 extensions "
"<https://github.com/KhronosGroup/glTF/tree/master/extensions>`__ are "
"supported directly by this add-on:"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:332
#: ../../manual/addons/import_export/io_scene_gltf2.rst:444
msgid "Import"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:333
msgid "``KHR_materials_pbrSpecularGlossiness``"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:334
#: ../../manual/addons/import_export/io_scene_gltf2.rst:342
msgid "``KHR_lights_punctual``"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:335
#: ../../manual/addons/import_export/io_scene_gltf2.rst:343
msgid "``KHR_materials_unlit``"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:336
#: ../../manual/addons/import_export/io_scene_gltf2.rst:344
msgid "``KHR_texture_transform``"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:340
#: ../../manual/addons/import_export/io_scene_gltf2.rst:453
msgid "Export"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:341
msgid "``KHR_draco_mesh_compression``"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:348
#: ../../manual/addons/import_export/io_scene_gltf2.rst:524
#: ../../manual/addons/import_export/io_scene_gltf2.rst:531
msgid "Animation"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:350
msgid ""
"glTF allows multiple animations per file, with animations targeted to "
"particular objects at time of export. To ensure that an animation is "
"included, either (a) make it the active Action on the object, (b) create "
"a single-strip NLA track, or (c) stash the action."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:357
msgid "Supported"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:358
msgid "Only certain types of animation are supported:"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:360
msgid "Keyframe (translation, rotation, scale)"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:361
msgid "Shape keys"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:362
msgid "Armatures / skinning"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:364
msgid "Animation of other properties, like lights or materials, will be ignored."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:366
msgid ""
"An *NLA Strip animation* consists of multiple actions on multiple objects"
" that should play together. To create an NLA strip animation with the "
"name \"My Animation\", push the action that should play each object onto "
"an NLA track for that object with the name \"My Animation\"."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:373
msgid ""
"Will be exported as an animation called \"My Animation\" with ConeAction "
"playing on the Cone and CubeAction playing on the Cube."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:376
msgid ""
"NLA Strip animations will be exported if the :menuselection:`Animation "
"--> NLA Strips` option is selected (on by default). All glTF animations "
"are imported as NLA Strip animations."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:379
msgid ""
"If option is disabled, Blender NLA strip actions will be ignored. Only "
"active action of each objects will be taken into account, and merged into"
" a single glTF animation."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:384
#: ../../manual/addons/import_export/io_scene_gltf2.rst:471
msgid "Custom Properties"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:386
msgid ""
"Custom properties on most objects are preserved in glTF export/import, "
"and may be used for user-specific purposes."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:391
msgid "File Format Variations"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:393
msgid ""
"The glTF specification identifies different ways the data can be stored. "
"The importer handles all of these ways. The exporter will ask the user to"
" select one of the following forms:"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:399
msgid "glTF Binary (``.glb``)"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:401
msgid ""
"This produces a single ``.glb`` file with all mesh data, image textures, "
"and related information packed into a single binary file."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:406
msgid ""
"Using a single file makes it easy to share or copy the model to other "
"systems and services."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:410
msgid "glTF Separate (``.gltf`` + ``.bin`` + textures)"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:412
msgid ""
"This produces a JSON text-based ``.gltf`` file describing the overall "
"structure, along with a ``.bin`` file containing mesh and vector data, "
"and optionally a number of ``.png`` or ``.jpg`` files containing image "
"textures referenced by the ``.gltf`` file."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:419
msgid ""
"Having an assortment of separate files makes it much easier for a user to"
" go back and edit any JSON or images after the export has completed."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:424
msgid ""
"Be aware that sharing this format requires sharing all of these separate "
"files together as a group."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:429
msgid "glTF Embedded (``.gltf``)"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:431
msgid ""
"This produces a JSON text-based ``.gltf`` file, with all mesh data and "
"image data encoded (using Base64) within the file. This form is useful if"
" the asset must be shared over a plain-text-only connection."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:437
msgid ""
"This is the least efficient of the available forms, and should only be "
"used when required."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:441
msgid "Properties"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:446
msgid "Pack Images"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:447
msgid "Pack all images into the blend-file."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:450
msgid "Shading"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:449
msgid "How normals are computed during import."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:455
msgid "Format"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:456
msgid "See: `File Format Variations`_."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:458
msgid "Folder to place texture files in. Relative to the gltf-file."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:459
msgid "Copyright"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:460
msgid "Legal rights and conditions for the model."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:464
msgid "Remember Export Settings"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:462
msgid ""
"Store export settings in the blend-file, so they will be recalled next "
"time the file is opened."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:467
msgid "Include"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:469
msgid "Selected Objects"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:470
msgid "Export selected objects only."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:472
msgid "Export custom properties as glTF extras."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:474
msgid "Export cameras."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:477
msgid "Punctual Lights"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:476
msgid ""
"Export directional, point, and spot lights. Uses the "
"``KHR_lights_punctual`` glTF extension."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:480
msgid "Transform"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:484
msgid "Y Up"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:483
msgid "Export using glTF convention, +Y up."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:487
msgid "Geometry"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:489
msgid "Apply Modifiers"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:490
msgid "Apply modifiers (excluding armatures) to mesh objects."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:491
msgid "UVs"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:492
msgid "Export UVs (texture coordinates) with meshes."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:493
msgid "Normals"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:494
msgid "Export vertex normals with meshes."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:495
msgid "Tangents"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:496
msgid "Export vertex tangents with meshes."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:497
msgid "Vertex Colors"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:498
msgid "Export vertex colors with meshes."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:500
msgid "Export materials."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:504
msgid "Images"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:502
msgid ""
"Output format for images. PNG is lossless and generally preferred, but "
"JPEG might be preferable for web applications due to the smaller file "
"size."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:507
msgid "Compression"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:509
msgid "Compress meshes using Google Draco."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:511
msgid "Compression Level"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:512
msgid "Higher compression results in slower encoding and decoding."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:513
msgid "Quantization Position"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:514
#: ../../manual/addons/import_export/io_scene_gltf2.rst:516
#: ../../manual/addons/import_export/io_scene_gltf2.rst:518
#: ../../manual/addons/import_export/io_scene_gltf2.rst:520
msgid "Higher values result in better compression rates."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:515
msgid "Normal"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:517
msgid "Texture Coordinates"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:521
msgid "Generic"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:528
msgid "Use Current Frame"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:527
msgid "Export the scene in the current animation frame."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:533
msgid "Exports active actions and NLA tracks as glTF animations."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:536
msgid "Limit to Playback Range"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:537
msgid "Clips animations to selected playback range."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:538
msgid "Sampling Rate"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:539
msgid "How often to evaluate animated values (in frames)."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:540
msgid "Always Sample Animations"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:541
msgid "Apply sampling to all animations."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:542
msgid "NLA Strips"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:543
msgid "Whether to export NLA strip animations."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:546
msgid "Export Deformation Bones Only"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:545
msgid "Export deformation bones only (and needed bones for hierarchy)."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:549
msgid "Shape Keys"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:551
msgid "Export shape keys (morph targets)."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:553
msgid "Shape Key Normals"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:554
msgid "Export vertex normals with shape keys (morph targets)."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:557
msgid "Shape Key Tangents"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:556
msgid "Export vertex tangents with shape keys (morph targets)."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:560
msgid "Skinning"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:562
msgid "Export skinning (armature) data."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:566
msgid "Include All Bone Influences"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:565
msgid ""
"Allow >4 joint vertex influences. Models may appear incorrectly in many "
"viewers."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:569
msgid "Contributing"
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:571
msgid ""
"This importer/exporter is developed through the `glTF-Blender-IO "
"repository <https://github.com/KhronosGroup/glTF-Blender-IO>`__, where "
"you can file bug reports, submit feature requests, or contribute code."
msgstr ""

#: ../../manual/addons/import_export/io_scene_gltf2.rst:575
msgid ""
"Discussion and development of the glTF 2.0 format itself takes place on "
"the Khronos Group `glTF GitHub repository "
"<https://github.com/KhronosGroup/glTF>`__, and feedback there is welcome."
msgstr ""

#~ msgid ""
#~ "An Image Texture node can be "
#~ "connected to an Emission shader node,"
#~ " and optionally combined with properties"
#~ " from a Principled BSDF node by "
#~ "way of an Add shader node."
#~ msgstr ""

#~ msgid "General Tab"
#~ msgstr ""

#~ msgid "Meshes Tab"
#~ msgstr ""

#~ msgid "Draco mesh compression"
#~ msgstr ""

#~ msgid "Position quantization bits"
#~ msgstr ""

#~ msgid "Normal quantization bits"
#~ msgstr ""

#~ msgid "Texcoord quantization bits"
#~ msgstr ""

#~ msgid "Objects Tab"
#~ msgstr ""

#~ msgid "Animation Tab"
#~ msgstr ""

#~ msgid "Animations"
#~ msgstr ""

#~ msgid "Bake Skinning Constraints"
#~ msgstr ""

#~ msgid "Apply skinning constraints to armatures."
#~ msgstr ""

#~ msgid ""
#~ "An Image Texture node can be "
#~ "connected to an Emission shader node,"
#~ " and optionally combined with properties"
#~ " from a Principled BSDF node by "
#~ "way of an Add Shader node."
#~ msgstr ""

#~ msgid ""
#~ "If the glTF exporter finds an "
#~ "image connected to the Emission shader"
#~ " node, it will export that image "
#~ "as the glTF material's emissive texture."
#~ msgstr ""

#~ msgid "An Emission node can be added to existing nodes."
#~ msgstr ""

#~ msgid ""
#~ "The *Emission* input of the Principled"
#~ " BSDF node is not yet supported "
#~ "by this exporter. This may change "
#~ "in a future version."
#~ msgstr ""

#~ msgid "Double Sided / Backface Culling"
#~ msgstr ""

#~ msgid "Alpha values are ignored (the default)."
#~ msgstr ""

#~ msgid "See: `File Format Variations`_"
#~ msgstr ""

#~ msgid ""
#~ "Store export settings in the Blender "
#~ "file, so they will be recalled "
#~ "next time the file is opened."
#~ msgstr ""

#~ msgid "Todo."
#~ msgstr ""

#~ msgid "Compression level"
#~ msgstr ""

#~ msgid "Texcoord"
#~ msgstr ""

#~ msgid "Export Deformation bones only"
#~ msgstr ""

