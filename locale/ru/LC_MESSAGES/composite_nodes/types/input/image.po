#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-12 01:27+1100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/composite_nodes/types/input/image.rst:4
#: ../../manual/composite_nodes/types/input/image.rst:10
msgid "Image Node"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:13
msgid ""
"The *Image* node injects any image :doc:`format that is supported by Blender"
" </render/output/output>`. Besides inputting the actual image, this node can"
" also input *Alpha* and depth (*Z*) values if the image has them. If the "
"image is a MultiLayer format, all saved render passes are input. Use this "
"node to input:"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:18
msgid "A single image from a file (such as a JPG picture)"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:19
msgid "Part or all of an animation sequence (such as the 30th to 60th frame)"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:20
msgid "Part or all of a movie clip (such as an AVI file)"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:21
msgid ""
"the image that is currently in the UV/Image Editor (and possibly being "
"painted)"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:22
msgid "an image that was loaded in the UV/Image Editor"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:24
msgid ""
"Animated image sequences or video files can also be used. See `Animations`_ "
"below."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:27
msgid ""
"To select an image file or generated image from the UV/Image Editor, click "
"on the small arrow selector button to the left of the name and pick an "
"existing image (e.g. loaded in the UV editor or elsewhere) or click on *LOAD"
" NEW* to select a file from your hard disk via a file-browser. These images "
"can be e.g. previously rendered images, matte paintings, a picture of your "
"cat, whatever. Blender really doesn't care."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:34
msgid ""
"If the image is part of a sequence, manually click the Image Type selector "
"to the right of the name, and select *Sequence*. Additional controls will "
"allow you to define how much of the sequence to pull in (see Animations "
"below). If the file is a video file, these controls will automatically "
"appear."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:41
msgid "Image Channels"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:43
msgid ""
"When the image is loaded, the available channels will be shown as sockets on"
" the node. As a minimum, the Image, Alpha, and Z channels are made "
"available. The picture may or may not have an alpha (transparency) and/or Z "
"(depth) channel, depending on the format. If the image format does not "
"support A and/or Z, default values are supplied (1.0 for A, 0.0 for Z)."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:53
msgid "Alpha/Transparency Channel"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:50
msgid ""
"If a transparency channel is detected, the *Alpha* output socket will supply"
" it."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:51
msgid ""
"If it does not have an Alpha channel (e.g. JPG images), Blender will supply "
"one, setting the whole image to completely opaque (an Alpha of 1.00, which "
"will show in a *Viewer* node as white - if connected to the *Image* input "
"socket)."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:60
msgid "Z/depth Channel"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:56
msgid ""
"If a Z (depth) channel is detected, the *Z* output socket will supply it."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:57
msgid ""
"If it does not have a Z channel (e.g. JPG or PNG images), Blender will "
"supply one, setting the whole image to be at the camera (a depth of 0.00). "
"To view the Z-depth channel, use the Map Value to ColorRamp noodle given "
"above in the Render Layer input node (see :ref:`render_layers-"
"z_socket_usage` )."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:62
msgid "Formats"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:64
msgid ""
"Blender supports many image formats. Currently only the OpenEXR image format"
" stores RGB (color), A (alpha), and Z (depth) buffer information in a single"
" file, if enabled."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:70
msgid "Saving/Retrieving Render Passes"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:74
msgid ""
"Blender can save the individual Render Layers and specific passes in a "
"MultiLayer file format, which is an extension of the OpenEXR format. In this"
" example, we are reading in frames 50 to 100 of a RenderLayer that were "
"generated some time ago. The passes that were saved were the Image, Alpha, "
"Z, Specular and AO passes."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:79
msgid ""
"To create a MultiLayer image set when initially rendering, simply disable Do"
" Composite, set your Format to MultiLayer, enable the Render Layer passes "
"you wish to save over the desired frame range, and Animate. Then, in "
"Blender, enable Compositing Nodes and Do Composite, and use the Image input "
"node to read in the EXR file. When you do, you will see each of the saved "
"passes available as sockets for you to use in your compositing noodle."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:88
msgid "Image Size"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:90
msgid ""
"Size matters - Pay attention to image resolution and color depth when mixing"
" and matching images. Aliasing (rough edges), color *flatness*, or distorted"
" images can all be traced to mixing inappropriate resolutions and color "
"depths."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:94
msgid ""
"The compositor can mix images with any size, and will only perform "
"operations on pixels where images have an overlap. When nodes receive inputs"
" with differently sized Images, these rules apply:"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:98
msgid "The first/top Image input socket defines the output size."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:99
msgid ""
"The composite is centered by default, unless a translation has been assigned"
" to a buffer using a *Translate* node."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:102
msgid ""
"So each node in a composite can operate on different sized images, as "
"defined by its inputs. Only the *Composite* output node has a fixed size, as"
" defined by the *Scene buttons* (Format Panel). The *Viewer* node always "
"shows the size from its input, but when not linked (or linked to a value) it"
" shows a small 320x256 pixel image."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:110
msgid "Animations"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:114
msgid ""
"To use image sequences or movies within your composition, press the face or "
"little film strip button located to the right of the selector. As you click,"
" a pop-up will offer you four choices:"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:118
msgid ""
"Generated - a image generated from the :doc:`UV Editor "
"</editors/uv_image/index>`"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:119
msgid "Sequence - a sequence of frames, each frame in a separate file."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:120
msgid ""
"Movie - a sequence of frames packed into a single ``.avi`` or ``.mov`` file"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:121
msgid "Image - a single frame or still image in a file"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:123
msgid ""
"A Movie or Image can be named anything, but a Sequence must have a digit "
"sequence somewhere in its filename, for example fire0001set.jpg, "
"fire0002set.jpg, fire0003set.jpg and so on. The number indicates the frame."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:128
msgid ""
"If a Sequence or Movie is selected, an additional set of controls will "
"appear that allows you to select part or all of the sequence. Use these "
"controls to specify which frames, out of the original sequence, that you "
"want to introduce into the animation you are about to render. You can start "
"at the beginning and only use the beginning, or even pick out a set of "
"frames from the middle of an existing animation."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:135
msgid ""
"The *Frs* number button is the number of frames in the sequence that you "
"want to show. For example, if you want to show 2 seconds of the animation, "
"and are running 30 fps, you would put 60 here."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:138
msgid ""
"The *SFra* number button sets the start frame of the animation; namely, at "
"what point in the animation that you *are going to render* do you want this "
"sequence to start playing. For example, if you want to introduce this clip "
"ten seconds into the composite output, you would put 300 here (at 30 fps)."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:144
msgid ""
"The *First* number button sets the first number in the animated sequence "
"name. For example, if your images were called \"credits-0001.png\", "
"\"credits-0002.png\" through \"credits-0300.png\" and you wanted to start "
"picking up with frame 20, you'd put 20 here."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:148
msgid ""
"To have the movie/sequence start over and repeat when it is done, press the "
"*Cycl* ic button. For example, if you were compositing a fan into a room, "
"and the fan animation lasted 30 frames, the animation would start over at "
"frame 31, 61, 91, and so on, continuously looping. As you scrub from frame "
"to frame, to see the actual video frame used for the current frame of "
"animation, press the auto button to the right of the *Cycl* ic button."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:157
msgid "Generated Images"
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:159
msgid ""
"`Using the Nodes to modify a painting in progress in the UV/Image window "
"<http://wiki.blender.org/index.php/File:Manual-Compositing-Node-Image-"
"Generagedjpg>`__ Blender features :ref:`painting_texture-index` which works "
"in the UV/Image Editor, that allows you to paint on the fly, and the image "
"is kept in memory or saved. If sync lock is enabled (the lock icon in the "
"header), changes are broadcast throughout Blender as soon as you lift the "
"mouse button. One of the places that the image can go is to the Image Input "
"node. The example shows a painting session going on in the right-hand "
"UV/Image Editor window for the painting \"Untitled\". Create this image via "
"Image?New in the UV/Image Editor. Refer to the texture paint section of the "
"user maual for more info on using Texture Paint."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:171
msgid ""
"In the left-hand window, the Image input node was used to select that "
"\"Untitled\" image. Notice that the Image type icon is blank, indicating "
"that it is pulling in a Generated image. That image is colorized by the "
"noodle, with the result used as a backdrop in the Node Editor Window."
msgstr ""

#: ../../manual/composite_nodes/types/input/image.rst:176
msgid ""
"Using this setup and the Generated Image type is like painting and post-"
"processing as you continue painting. Changes to either the painting or the "
"post-pro noodle are dynamic and real-time."
msgstr ""

#~ msgid "Image node"
#~ msgstr ""
