# Этот файл является частью перевода руководства к Blender'у.
# Соответствующая страница руководства может быть получена по адресу
#
#
# https://docs.blender.org/manual/ru/dev/animation/drivers/workflow_examples.html
# Этот файл распространяется под всемирной лицензией CC-BY-SA 4.0
# https://creativecommons.org/licenses/by-sa/4.0/deed.ru
msgid ""
msgstr ""
"Project-Id-Version: Руководство по Blender 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-25 16:56+1000\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/animation/drivers/workflow_examples.rst:4
msgid "Workflow & Examples"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:6
msgid ""
"Simple Drivers can be configured from the pop-over that appears when "
"adding a new Driver."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:8
msgid ""
"When adding multiple Drivers or for more advanced configurations, it is "
"useful to have open the *Drivers Editor*."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:12
msgid "Examples"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:15
msgid "Transform Driver"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:17
msgid "Starting from a simple setup with two objects:"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:19
msgid ""
"Add a Driver to the *Rotation Y* property of the second object with the "
"context menu or with :kbd:`Ctrl-D`."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:23
msgid "Open the *Drivers Editor* (:kbd:`Shift-F6`)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:24
msgid "In the channels region, select the *Y Euler Rotation* property."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:25
msgid "Press :kbd:`N` to open the Sidebar region and select the *Drivers* tab."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:26
msgid ""
"Configure the driver to be the *Averaged Value* of a *Transform Channel* "
"of the first object."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:30
msgid ""
"Experiment with moving the first object and notice how it affects the Y "
"rotation of the second object."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:35
msgid "Driver Expression"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:37
msgid ""
"Here are some examples using the scripted expression Expr to set the "
"Driver Value."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:43
msgid "Object rotation example."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:47
msgid "Orbit a Point"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:49
msgid "Here two drivers have been added to the Cube, X Location and Y Location."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:51
msgid "The scripted expressions are being used to set the object location."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:57
msgid "X Location Expr"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:57
msgid "``0 + (sin(frame / 8) * 4)``"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:55
msgid ""
"``(frame/8)`` : is the current frame of the animation, divided by 8 to "
"slow the orbit down. ``(sin( )*4)`` : This returns the sine of (frame/8),"
" then multiplies by 4 for a bigger circle. ``0 +`` : is used to control "
"the X Location offset of the orbit."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:63
msgid "Y Location Expr"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:63
msgid "``0 + (cos(frame / 8) * 4)``"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:61
msgid ""
"``(frame / 8)`` : is the current frame of the animation, divided by 8 to "
"slow the orbit down. ``(cos( ) * 4)`` : This returns the cosine of "
"(frame/8), then multiplies by 4 for a bigger circle. ``0 +`` : is used to"
" control the Y Location offset of the orbit."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:65
msgid "``frame`` is the same as bpy.context.scene.frame_current."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:69
msgid "Driver Namespace"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:71
msgid ""
"There is a list of built-in driver functions and properties. These can be"
" displayed via the Python Console:"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:96
msgid ""
"This script will add a function to the driver namespace, which can then "
"be used in the expression ``driver_func(frame)``"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:111
msgid "Shape Key Driver"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:113
msgid ""
"This example is a shape key driver. The driver was added to the shape key"
" Value."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:120
msgid "Shape key driver example."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:122
msgid ""
"This example uses the Armature Bone \"b\" 's Z Rotation to control the "
"Value of a Shape Key. The bone rotation mode is set to XYZ Euler."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:125
msgid "The Driver F-Curve is mapped like so:"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:127
msgid "Bone Z Rotation 0.0 (0.0): Shape Key value 0.0"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:128
msgid "Bone Z Rotation -2.09 (-120.0): Shape Key value 1.0"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:130
msgid ""
"This kind of driver can also be setup with the Variable Type Rotational "
"Difference."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:132
msgid "See :doc:`Shape Keys </animation/shape_keys/index>` for more info."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:136
msgid "Drivers and Multiple Relative Shape Keys"
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:138
msgid ""
"The following screenshots illustrate combining shape keys, bones, and "
"drivers to make multiple chained relative shape keys sharing a single "
"root. While it lacks the convenience of the single Evaluation Time of an "
"absolute shape key, it allows you to have more complex relationships "
"between your shape keys."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:150
msgid "Basis shape key."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:155
msgid "Key1 shape key."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:160
msgid "Key2A shape key."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:165
msgid "Key2B shape key."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:167
msgid ""
"The Basis shape key has the stacks fully retracted. Key1 has the base "
"fully extended. Key2A has the left stack fully extended. Key2B has the "
"right stack fully extended. Key2A and Key2B are both relative to Key1 (as"
" you can see in the field in the bottom right of the Shape Keys panel)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:179
msgid "Key1 must handle conflicting values from the two bones."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:184
msgid ""
"Key2A has different generator coefficients so it is activated in a "
"different range of the bone's position."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:189
msgid "Key2B is the same as Key2A, but is controlled by the second bone."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:191
msgid ""
"The value of Key1 is bound to the position of bones by a driver with two "
"variables. Each variable uses the world Z coordinate of a bone and uses "
"the maximum value to determine how much the base should be extended. The "
"generator polynomial is crafted such that the top of the dominant stack "
"should line up with the bone for that stack."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:197
msgid ""
"The value of Key2A is bound to the position of \"Bone.L\". Its generator "
"parameters are crafted such that when Key1's value reaches 1, the value "
"of Key2A starts increasing beyond zero. In this way, the top of the left "
"stack will move with bone.L (mostly)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:202
msgid ""
"The value of Key2B is bound to the position of \"Bone.R\". Its generator "
"parameters are similar to Key2A so that the top of the right stack will "
"move with bone.R (mostly)."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:213
msgid ""
"When both bones are low, Key2B and Key2A are deactivated and Key1 is at "
"low influence."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:218
msgid "Extended."
msgstr ""

#: ../../manual/animation/drivers/workflow_examples.rst:220
msgid ""
"Since it is quite easy for bone.L and bone.R to be in positions that "
"indicate conflicting values for Key1 there will be times when the bones "
"do not line up with the tops of their respective stacks. If the driver "
"for Key1 was to use Average or Minimum instead of Maximum to determine "
"the value of the shape key then \"conflicts\" between bone.L and bone.R "
"would be resolved differently. You will choose according to the needs of "
"your animation."
msgstr ""

#~ msgid "Some examples."
#~ msgstr ""

#~ msgid "Modify the driver variable settings."
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "UI"
#~ msgstr ""

#~ msgid "Add Drivers"
#~ msgstr ""

#~ msgid "Add Single Driver"
#~ msgstr ""

#~ msgid "This will add a single driver to the selected property."
#~ msgstr ""

#~ msgid "Expression"
#~ msgstr ""

#~ msgid "Some examples:"
#~ msgstr ""

#~ msgid "``#frame``"
#~ msgstr ""

#~ msgid "``#frame / 20.0``"
#~ msgstr ""

#~ msgid "``#sin(frame)``"
#~ msgstr ""

#~ msgid "``#cos(frame)``"
#~ msgstr ""

#~ msgid "Copy Paste"
#~ msgstr ""

#~ msgid ""
#~ "There is a list of built-in "
#~ "driver functions and properties. These "
#~ "can be displayed via the Python "
#~ "Console::"
#~ msgstr ""

#~ msgid ""
#~ "This script will add a function to"
#~ " the driver namespace, which can then"
#~ " be used in the expression "
#~ "``driver_func(frame)``::"
#~ msgstr ""

#~ msgid "Shape Key Driver. Click to enlarge."
#~ msgstr ""

#~ msgid "Drivers And Multiple Relative Shape Keys"
#~ msgstr ""

#~ msgid ""
#~ "There is a list of built-in "
#~ "driver functions and properties. These "
#~ "can be displayed via the Python "
#~ "Console"
#~ msgstr ""

#~ msgid ""
#~ "The Basis shape key has the stacks"
#~ " fully retracted. Key1 has the base"
#~ " fully extended. Key2A has the left"
#~ " stack fully extended. Key2B has the"
#~ " right stack fully extended. Key2A "
#~ "and Key2B are both relative to "
#~ "Key1 (as you can see in the "
#~ "field in the bottom right of the"
#~ " Shape Keys panel."
#~ msgstr ""

#~ msgid "Object Rotation."
#~ msgstr ""

#~ msgid ""
#~ "This example is a Shape Key "
#~ "Driver. The driver was added to "
#~ "the shape key Value."
#~ msgstr ""

#~ msgid "Shape Key Driver."
#~ msgstr ""

#~ msgid "Key2a shape key."
#~ msgstr ""

#~ msgid "Key2b shape key."
#~ msgstr ""

#~ msgid ""
#~ "Press :kbd:`N` to open the properties"
#~ " region, scroll down to Drivers "
#~ "panel."
#~ msgstr ""

#~ msgid "These are some driver examples and workflow."
#~ msgstr ""

#~ msgid "Workflow"
#~ msgstr ""

#~ msgid ""
#~ "This example shows you how setup a"
#~ " transform driver. First make sure "
#~ "you are in the Front Ortho view."
#~ " :kbd:`Numpad5`, :kbd:`Numpad1`."
#~ msgstr ""

#~ msgid ""
#~ "In object mode, select then duplicate"
#~ " the default Cube. :kbd:`Shift-D`. Move "
#~ "\"Cube.001\" to a new location."
#~ msgstr ""

#~ msgid ""
#~ "With \"Cube.001\" selected, add a single"
#~ " driver to the *Rotation Y* property."
#~ msgstr ""

#~ msgid "Open the *Graph Editor*, set the Mode to *Drivers*."
#~ msgstr ""

#~ msgid ""
#~ "*Show Only Selected* is useful disabled"
#~ " for drivers, marked green in the "
#~ "picture."
#~ msgstr ""

#~ msgid ""
#~ "Press :kbd:`N` to open the Sidebar "
#~ "region, scroll down to Drivers panel."
#~ msgstr ""

#~ msgid ""
#~ "Change the *Type* to *Averaged Value*,"
#~ " this will return the averaged value"
#~ " of the driver variables."
#~ msgstr ""

#~ msgid "Modify the driver variable settings:"
#~ msgstr ""

#~ msgid "Type -- Transform Channel"
#~ msgstr ""

#~ msgid "Ob/Bone -- Cube"
#~ msgstr ""

#~ msgid "Transform Type -- X Location"
#~ msgstr ""

#~ msgid "Transform Space -- World Space"
#~ msgstr ""

#~ msgid ""
#~ "When finished, \"Cube.001\" should rotate "
#~ "on the Y axis when moving \"Cube\""
#~ " left to right."
#~ msgstr ""

