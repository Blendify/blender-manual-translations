# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.79 Manual 2.79\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-01 18:11-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../manual/modeling/metas/editing.rst:5
msgid "Editing"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:7
msgid ""
"In addition to having several meta objects in a same family, you can also"
" have several meta primitives in a single object (just add some more "
"while in Edit Mode). Each will be an element, with its own shape, editing"
" rings (in the viewport), and settings."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:13
msgid "Active Element"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:15
#: ../../manual/modeling/metas/editing.rst:97
msgid "Reference"
msgstr ""

#: ../../manual/modeling/metas/editing.rst
msgid "Mode"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:18
msgid "Edit Mode"
msgstr ""

#: ../../manual/modeling/metas/editing.rst
msgid "Panel"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:19
msgid ":menuselection:`Properties editor --> Metaball --> Active Element`"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:24
msgid "Active Element panel."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:26
msgid "These settings apply only to the selected meta element."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:29
msgid "Type"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:29
msgid ""
"Changes the :doc:`primitive shape </modeling/metas/primitives>` of the "
"meta object."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:48
msgid "Stiffness"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:32
msgid ""
"Controls the influence range for individual meta elements, unlike "
"*Influence Threshold* which controls the influence for the entire "
":ref:`meta family <meta-ball-object-families>`. This essentially defines "
"how sensitive a meta is to being affected by other metas. With a low "
"stiffness, the meta will begin to deform from further away. A higher "
"value means the meta needs to be close to another one to begin merging. "
"The *Stiffness* is visualized by the *green ring* and can be selected and"
" :ref:`scaled <bpy.ops.transform.resize>` to also changes the *Stiffness*"
" value."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:40
msgid ""
"To be visible, the *Stiffness* must be slightly larger than the "
"*Threshold* value."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:48
msgid "The left meta ball, has a smaller *Stiffness* value than the right one."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:54
msgid "Radius"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:51
msgid ""
"Controls the physical size of the metaball. This works the same as "
"scaling the metaball in object mode. The *Radius* is visualized by the "
"*white ring* and can be selected and :ref:`scaled "
"<bpy.ops.transform.resize>` to also changes the *Radius* value."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:79
msgid "Negative"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:59
msgid "Controls whether the influence is *positive* or *negative*."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:61
msgid ""
"A *positive* influence is defined as an attraction, meaning that the "
"meshes will stretch towards each other as the *rings of influence* "
"intersect. The opposite effect would be a *negative* influence where the "
"objects repel each other."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:67
msgid ""
"If a metaball has *Negative* influence the meta is not visible in the 3D "
"Viewport, only the surrounding circles are shown."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:74
msgid "Positive influence of three metaballs."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:78
msgid ""
"Negative influence of a metaball; the first is negative and the second "
"positive."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:92
msgid "Hide"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:82
msgid ""
"As in :ref:`object-show-hide` in Object Mode, you can hide the selected "
"meta(s), and then reveal what was hidden. This is very handy for cleaning"
" your views up a bit."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:87
msgid ""
"Hiding a meta does not *only* hide it, but also disables it from the meta"
" computation, which will affect the final geometry."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:90
msgid ""
"The two red and green rings always remain visible in Edit Mode, as well "
"as the select circle in Object Mode."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:95
msgid "Deleting Elements"
msgstr ""

#: ../../manual/modeling/metas/editing.rst
msgid "Hotkey"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:100
msgid ":kbd:`X`, :kbd:`Delete`"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:102
msgid "You can only delete the active element, no fancy options here."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:106
msgid "Conversion"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:108
msgid ""
"To convert the meta to a real mesh, use :ref:`object-convert-to` in "
"Object Mode."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:114
msgid "Object Families"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:116
msgid ""
"A \"family\" is a way to regroup several meta objects, producing "
"something very similar to having several metas inside the same object."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:119
msgid ""
"It is defined by the left part of an object's name (the one before the "
"first dot). Remember, an object's name is the one in the *Object Name* "
"field, in most panels, **not** the *Metaball Name* field, which is the "
"meta data-block's name... For example, the *family* part of "
"\"MetaPlane.001\" is ``MetaPlane``. Each meta object in the same "
"\"family\" is associated with one another as discussed below."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:129
msgid "Metaball family."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:131
msgid ""
"Families of metas are controlled by a *base* meta object which is "
"identified by an object name **without** a dot in it. For example, if we "
"have three metas called ``MetaThing``, ``MetaThing.001``, "
"``MetaThing.round``, the *base* meta object would be ``MetaThing``."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:136
msgid ""
"The *base* meta object determines the basis, the resolution, the "
"threshold, *and* the transformations. It also has the material and "
"texture area. In a way, the *base* meta is the \"owner\" of the other "
"metas in the family (i.e. it is as if the other metas were \"included\" "
"or joined into the base one)."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:143
msgid ""
"When working with multiple scenes, take care naming your meta objects so "
"the *base* is always in the same scene as other metas."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:146
msgid ""
"Failing to do so will give confusing behaviors (like invisible meta "
"objects)."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:150
msgid "Examples"
msgstr ""

#: ../../manual/modeling/metas/editing.rst:152
msgid ""
"Fig. :ref:`fig-meta-ball-base` shows the *base* meta labeled \"B\". The "
"other two *Meta* objects are *children*. Children's selection rings are "
"always black, while the group's mesh is orange. Because the metas are "
"grouped, they form a unified mesh which can always be selected by "
"selecting the mesh of any meta in the group."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:163
msgid "Meta ball base."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:165
msgid ""
"For example, in Fig. :ref:`fig-meta-ball-base`, only the lower sphere "
"(the parent) has been selected, and you see that both the parent's mesh "
"*and* all of the children's meshes are now highlighted."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:174
msgid "Scaling the \"base\"."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:176
msgid ""
"The *base* meta object controls the *polygonalization* (mesh structure) "
"for the group, and as such, also controls the polygonalization for the "
"children (non-base) metas. If we transform the *base* meta, the "
"children's polygonalization changes. However, if we transform the "
"children, the polygonalization remains unchanged."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:183
msgid ""
"This discussion of \"polygonization\" does *not* mean that the various "
"meshes do not deform towards or away from each other (meta objects always"
" influence one another in the usual way, within a same family)."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:187
msgid ""
"Rather, it means that the underlying mesh structure changes only when the"
" *base* object transforms. For example, if you scale the *base*, the "
"children's mesh structure changes."
msgstr ""

#: ../../manual/modeling/metas/editing.rst:190
msgid ""
"In Fig. :ref:`fig-meta-ball-scale`, the *base* has been scaled down, "
"which has the effect of scaling the mesh structure of each of the "
"children. As you can see, the children's mesh resolution has increased, "
"while the *base* decreased. The children did *not* change size!"
msgstr ""

#~ msgid "Mode:     Object or Edit Modes"
#~ msgstr ""

#~ msgid "Panel:    :menuselection:`Properties editor --> Active Element`"
#~ msgstr ""

#~ msgid "Convert Menu."
#~ msgstr ""

#~ msgid ""
#~ "To convert the meta, press :kbd:`Alt-C`"
#~ " in *Object Mode*, and select "
#~ "*Mesh/Text*."
#~ msgstr ""

#~ msgid "Object or Edit Modes"
#~ msgstr ""

#~ msgid ":menuselection:`Properties editor --> Active Element`"
#~ msgstr ""

#~ msgid ""
#~ "When in *Edit Mode*, the *Active "
#~ "Element* panel appears. These settings "
#~ "apply only to the selected meta "
#~ "element."
#~ msgstr ""

#~ msgid "Active element panel."
#~ msgstr ""

#~ msgid "The *Type* menu lets you change the shape of the meta object."
#~ msgstr ""

#~ msgid ""
#~ "Together with *Threshold*, *Stiffness* "
#~ "controls the influencing range. While "
#~ "the threshold is common to all "
#~ "metas in the same object (or even"
#~ " the same `Object Families`_), the "
#~ "stiffness is specific to each meta."
#~ msgstr ""

#~ msgid ""
#~ "Scaling the inner green circle changes"
#~ " the *Stiffness* value. Stiffness defines"
#~ " how much the meta object is "
#~ "filled. This essentially defines how "
#~ "sensitive a meta is to being "
#~ "affected by other metas. With a "
#~ "low stiffness, the meta will begin "
#~ "to deform from further away. A "
#~ "higher value means the meta needs "
#~ "to be close to another one to "
#~ "begin merging."
#~ msgstr ""

#~ msgid ""
#~ "When a *Meta* object comes within "
#~ "\"range\" of another meta, the two "
#~ "will begin to interact with each "
#~ "other. They do not necessarily need "
#~ "to intersect, and depending on the "
#~ "*Threshold* and *Stiffness* settings, they "
#~ "most likely will not need to. "
#~ "*Stiffness* is materialized by the "
#~ "*green ring*."
#~ msgstr ""

#~ msgid ""
#~ "The range is from (0.0 to 10.0)."
#~ " But to be visible, the *Stiffness*"
#~ " must be slightly larger than the "
#~ "*Threshold* value. You can also visually"
#~ " adjust the *Stiffness* ring by using"
#~ " the :kbd:`RMB` to select it and "
#~ "activate *Scale* mode with :kbd:`S`."
#~ msgstr ""

#~ msgid "Stiffness."
#~ msgstr ""

#~ msgid ""
#~ "In Fig. :ref:`fig-meta-edit-stiffness`,"
#~ " the left meta ball, has a "
#~ "smaller *Stiffness* value than the right"
#~ " one. As you can see, the "
#~ "radius (green ring) is different for "
#~ "each of them."
#~ msgstr ""

#~ msgid "Negative Influence"
#~ msgstr ""

#~ msgid "Negative."
#~ msgstr ""

#~ msgid ""
#~ "The opposite effect of a *positive* "
#~ "influence would be a *negative* "
#~ "influence: the objects repel each other."
#~ " Fig. :ref:`fig-meta-ball-negative` "
#~ "shows a meta ball and a meta "
#~ "plane where the first is negative "
#~ "and the second, positive. Notice how "
#~ "the negative meta is not visible: "
#~ "only the surrounding circles appear. "
#~ "This is how Blender indicates that "
#~ "the object is negative."
#~ msgstr ""

#~ msgid ""
#~ "Moving the sphere to the plane "
#~ "causes the plane's mesh to \"cave "
#~ "in\" or collapse inward. If you "
#~ "move the plane away from the "
#~ "sphere, the plane's mesh will restore"
#~ " itself."
#~ msgstr ""

#~ msgid ""
#~ "To make a meta *negative*, just "
#~ "select the meta in edit mode, and"
#~ " check *negative* in the *Active "
#~ "element* panel."
#~ msgstr ""

#~ msgid "Hiding Elements"
#~ msgstr ""

#~ msgid ""
#~ "As in :ref:`object-show-hide` in "
#~ "*Object Mode*, you can hide the "
#~ "selected meta(s), and then reveal what"
#~ " was hidden. This is very handy "
#~ "for cleaning your views up a "
#~ "bit... Note that the two red and"
#~ " green rings always remain visible in"
#~ " *Edit Mode*, as well as the "
#~ "select circle (in *Object Mode*...)."
#~ msgstr ""

#~ msgid ""
#~ "There is no *Erase* menu for "
#~ "metas, just a confirmation pop-up "
#~ "asking you if you want to delete"
#~ " the selected metas. Clear and "
#~ "simple!"
#~ msgstr ""

#~ msgid "Convert menu."
#~ msgstr ""

#~ msgid ""
#~ "You can only convert metas to "
#~ "meshes, but here you have the "
#~ "option to keep the original *Meta* "
#~ "object (i.e. create a new *Mesh* "
#~ "one, instead of a \"real\" "
#~ "conversion...). Note that the resolution "
#~ "used for the new mesh is the "
#~ "*Wiresize* one, not the *Rendersize* "
#~ "one."
#~ msgstr ""

#~ msgid "To convert the meta, using :ref:`object-convert-to` in Object Mode."
#~ msgstr ""

#~ msgid ""
#~ "*Meta* objects have different behavior "
#~ "in *Object Mode* than other object "
#~ "types. They can be \"regrouped\" into"
#~ " so-called \"families\"."
#~ msgstr ""

#~ msgid ""
#~ "A family is defined by the left"
#~ " part of an object's name (the "
#~ "one before the dot). Remember, an "
#~ "object's name is the one in the"
#~ " *Object name* field, in most panels,"
#~ " **not** the *Metaball name* field, "
#~ "which is the meta data-block's "
#~ "name... For example, the *family* part"
#~ " of \"MetaPlane.001\" is ``MetaPlane``. "
#~ "Each meta object in the same "
#~ "\"family\" is associated with one "
#~ "another as discussed below."
#~ msgstr ""

#~ msgid "Meta ball family."
#~ msgstr ""

#~ msgid ""
#~ "Families of metas are controlled by "
#~ "a *base* meta object which is "
#~ "identified by an object name **without**"
#~ " a right number part. For example,"
#~ " if we have five metas called "
#~ "\"MetaThing\", \"MetaThing.001\", \"MetaThing.002\", "
#~ "\"MetaThing.003\" and \"MetaThing.004\", the "
#~ "*base* meta object would be "
#~ "\"MetaThing\"."
#~ msgstr ""

#~ msgid ""
#~ "The *base* meta object determines the"
#~ " basis, the resolution, the threshold, "
#~ "*and* the transformations. It also has"
#~ " the material and texture area. The"
#~ " *base* meta is effectively the "
#~ "parent of (or perhaps a better "
#~ "word to use is \"the owner of\")"
#~ " the other metas in the group "
#~ "(i.e. it is as if the other "
#~ "metas were \"included\" or joined into"
#~ " the base one)."
#~ msgstr ""

#~ msgid ""
#~ "Failing to do this will give "
#~ "confusing behavior (invisible meta objects)."
#~ msgstr ""

#~ msgid ""
#~ "Fig. :ref:`fig-meta-ball-base` shows "
#~ "the *base* meta labeled \"B\". The "
#~ "other two *Meta* objects are *children*."
#~ " Children's selection rings are always "
#~ "black, while the group's mesh is "
#~ "orange. Because the metas are grouped,"
#~ " they form a unified mesh which "
#~ "can always be selected by selecting "
#~ "the mesh of any meta in the "
#~ "group. For example, in Fig. :ref"
#~ ":`fig-meta-ball-base`, only the lower"
#~ " sphere (the parent) has been "
#~ "selected, and you see that both "
#~ "the parent's mesh *and* all of the"
#~ " children's meshes are now highlighted."
#~ msgstr ""

#~ msgid ""
#~ "This discussion of \"polygonization\" does "
#~ "*not* mean that the various meshes "
#~ "do not deform towards or away from"
#~ " each other (meta objects always "
#~ "influence one another in the usual "
#~ "way, whether or not they are "
#~ "members of the same family). Rather, "
#~ "it means that the underlying mesh "
#~ "structure changes only when the *base*"
#~ " object transforms. For example, if "
#~ "you scale the *base*, the children's "
#~ "mesh structure changes. In Fig. :ref"
#~ ":`fig-meta-ball-scale`, the *base* "
#~ "has been scaled down, which has "
#~ "the effect of scaling the mesh "
#~ "structure of each of the children. "
#~ "As you can see, the children's "
#~ "mesh resolution has increased, while the"
#~ " *base* decreased. The children did "
#~ "*not* change size!"
#~ msgstr ""

#~ msgid "Controls the whether the influence is *positive* or *negative*."
#~ msgstr ""

#~ msgid "Positive influence of three meta balls."
#~ msgstr ""

#~ msgid ""
#~ "Negative influence of a meta ball; "
#~ "the first is negative and the "
#~ "second positive."
#~ msgstr ""

