# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-22 18:54-0400\n"
"PO-Revision-Date: 1971-01-02 00:00+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../manual/physics/soft_body/forces/exterior.rst:4
msgid "Exterior"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:6
msgid ""
"Exterior forces are applied to the vertices (and nearly exclusively to "
"the vertices) of soft body objects. This is done using Newton's Laws of "
"Physics:"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:9
msgid ""
"If there is no force on a vertex, it stays either unmoved or moves with "
"constant speed in a straight line."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:10
msgid ""
"The acceleration of a vertex depends on its mass and the force. The "
"heavier the mass of a vertex the slower the acceleration. The larger the "
"force the greater the acceleration."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:12
msgid "For every action there is an equal and opposite reaction."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:14
msgid ""
"Well, this is done only in the range of computing accurateness, there is "
"always a little damping to avoid overshoot of the calculation."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:19
msgid "Example"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:21
msgid "We will begin with a very simple example: the default cube."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:23
msgid ""
"To judge the effect of the external forces you should at first turn off "
"the *Goal*, so that the vertices are not retracted to their original "
"position."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:25
msgid "Press :kbd:`Alt-A` to run the simulation."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:27
msgid ""
"What happens? The cube moves in negative Z direction. Each of its eight "
"vertices is affected by a global, constant force -- the gravitation. "
"Gravitation without friction is independent from the weight of an object,"
" so each object you would use as a soft body here would fall with the "
"same acceleration. The object does not deform, because every vertex moves"
" with the same speed in the same direction."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:35
msgid "Force Fields"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:37
msgid ""
"Soft body vertices interact with all the :doc:`Force Fields "
"</physics/force_fields/index>` applied (usually to particles) in the "
"layer, such as wind, force fields, and what ever physics field effect is "
"on a common layer."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:43
msgid "Soft Body Field Weights"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:45
msgid "Reference"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst
msgid "Panel"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:48
msgid ":menuselection:`Physics --> Soft Body Field Weights`"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:50
msgid ""
"The *Soft Body Field Weights* panel allows you to control how much "
"influence each type of external force field, has on the soft body system."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:53
msgid "Effector Group"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:54
msgid ""
"Limit effectors to a specified group. Only effectors in this group will "
"have an effect on the current system."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:55
msgid "Gravity"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:56
msgid "Control how much the Global Gravity has an effect on the system."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:59
msgid "All"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:58
msgid "Scale all of the effector weights."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:64
msgid "Aerodynamics"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:66
msgid ""
"Edges can be affected by wind as they move, and sail or flutter in a "
"breeze. A simple aerodynamic model of a flag sailing in the wind."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:69
msgid ""
"This special exterior force is not applied to the vertices but to the "
"connecting edges. Technically, a force perpendicular to the edge is "
"applied. The force scales with the projection of the relative speed on "
"the edge (dot product). Note that the force is the same if wind is "
"blowing or if you drag the edge through the air with the same speed. That"
" means that an edge moving in its own direction feels no force, and an "
"edge moving perpendicular to its own direction feels maximum force."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:76
msgid ""
"The angle and the relative speed between medium and edge is used to "
"calculate the force on the edge. This force results that vertices with "
"few connecting edges (front of a plane) fall faster than vertices with "
"more connecting edges (middle of a plane). If all vertices have the same "
"amount of edges in a direction they fall with equal speed."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:81
msgid ""
"The *Aerodynamics* settings are set in the :ref:`Soft Body Edges "
"<physics-softbody-settings-aerodynamics>` panel."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:87
msgid "Goal"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:89
msgid ""
"A \"goal\" is a shape that a soft body object tries to conform to. It "
"acts like a pin on a chosen set of vertices, controlling how much of an "
"effect soft body has on them."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:92
msgid ""
"Enabling *Soft Body Goal* tells Blender to use the position (or animated "
"position) of a vertex in the simulation. Animating the vertices can be "
"done in all the usual ways (F-curves, armatures, parents, lattices, etc.)"
" before the soft body simulation is applied. The \"goal\" is the desired "
"end position for vertices. How a soft body tries to achieve this goal can"
" be defined using stiffness forces and damping."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:97
msgid ""
"See the :ref:`Soft Body Goal settings <physics-softbody-settings-goal>` "
"for details."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:101
msgid "Goal Strength"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:103
msgid ""
"The *Goal Strength* defines how much motion from an animation system gets"
" applied."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:105
msgid ""
"A *Goal* value of 1.0 means no soft body simulation, the object act like "
"any regular animated object, (the vertex keeps at its original position)."
" When setting *Goal* to 0.0 (or no goal), the vertex is only influenced "
"by physical laws according to soft body simulation."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:110
msgid ""
"By setting goal values between 0.0 and 1.0, you can blend between having "
"the object affected only by the animation system, and having the object "
"affected only by the soft body effect."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:114
msgid ""
"Goal also serves as a memory, to make sure soft objects don't deform too "
"much, ending up in the non-soft animated shape. Using the *Vertex Group* "
"weight system, you can define a *Goal* weight per vertex. To make this "
"look more natural, spring forces can be defined to control how far "
"vertices can move from their original position."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:119
msgid ""
"Often :ref:`painting-weight-index` is used to adjust the weight "
"comfortably. For non-mesh objects the *Weight* parameter of their "
"vertices/control points is used instead; *Specials* menu :kbd:`W` in "
"*Edit Mode* or use the *Transform* panel in the Properties region. The "
"weight of *Hair* particles can also be painted in :doc:`Particle Edit "
"Mode </physics/particles/mode>`."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:126
msgid "Technical Details"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:128
msgid ""
"In the Soft Body world vertices of meshes are treated as particles having"
" a mass. Their movement is determined by the forces affecting them. "
"Beside other forces the individual particles can interact with another "
"along edges using a physical model which is very close to shock absorbers"
" used in cars. The working parts are:"
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:133
msgid ""
"A spring trying to keep the particles at a certain distance. How hard the"
" spring tries to do that is controlled by the soft body parameter "
"*Stiffness*."
msgstr ""

#: ../../manual/physics/soft_body/forces/exterior.rst:135
msgid ""
"A damping element to calm the movement down. The resistance the element "
"builds up against motion is controlled by the soft body parameter "
"*Damping*."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Image 2b: Shock absorber description."
#~ msgstr ""

#~ msgid "We will begin with a very simple example - the default cube."
#~ msgstr ""

#~ msgid ""
#~ "You can control the internal timing "
#~ "of the Softbody system with this "
#~ "value. It sets the correlation between"
#~ " frame rate and tempo of the "
#~ "simulation. A free falling body should"
#~ " cover a distance of about five "
#~ "meters after one second. You can "
#~ "adjust the scale of your scene and"
#~ " your simulation with this correlation. "
#~ "If you render with 25 frames per"
#~ " second and 1 meter shall be 1"
#~ " BU, you have to set *Speed* to"
#~ " 1.3."
#~ msgstr ""

#~ msgid ""
#~ "Often :ref:`painting-weight-index` is "
#~ "used to adjust the weight comfortably."
#~ " For non-mesh objects the *Weight*"
#~ " parameter of their vertices/controlpoints "
#~ "is used instead (:kbd:`W` in *Edit "
#~ "Mode*) or use the *Transform* panel. "
#~ "The weight of *Hair* particles can "
#~ "also be painted in :doc:`Particle Edit"
#~ " Mode </physics/particles/mode>`."
#~ msgstr ""

#~ msgid "Dampimg"
#~ msgstr ""

#~ msgid ""
#~ "You can paint weight values for an"
#~ " mesh's mass, and select that vertex"
#~ " group here."
#~ msgstr ""

#~ msgid ""
#~ "This parameter defines how strong the"
#~ " influence of this spring is. A "
#~ "strength of 1 means, that the "
#~ "vertex will not move as Soft Body"
#~ " at all, instead keep its original"
#~ " position. 0 *Goal* (or no *Goal*)"
#~ " means, that the vertex moves only"
#~ " according to Soft Body simulation. "
#~ "If no vertex group is used/assigned, "
#~ "this number button is the default "
#~ "goal weight for all vertices. If a"
#~ " vertex group is present and "
#~ "assigned, this button instead shows an"
#~ " list field, that allows you to "
#~ "choose the name of the goal vertex"
#~ " group. If you use a vertex "
#~ "group the weight of a vertex "
#~ "defines its goal."
#~ msgstr ""

#~ msgid ""
#~ "Exterior forces are applied to the "
#~ "vertices (and nearly exclusively to the"
#~ " vertices) of Soft Body objects. This"
#~ " is done using Newtons Laws of "
#~ "Physics:"
#~ msgstr ""

#~ msgid ""
#~ "See the section :doc:`Force Fields "
#~ "</physics/force_fields/index>` for details. The "
#~ "force fields are quite strong, a "
#~ "*Spherical* field with a strength of "
#~ "-1.0 has the same effect that "
#~ "gravity has -- approximately -- a "
#~ "force of 10 Newton."
#~ msgstr ""

#~ msgid ""
#~ "When you paint the values in "
#~ "vertex-groups (using *WeightPaint Mode*), "
#~ "you can use the *G Min* and "
#~ "*G Max* to fine-tune (clamp) the"
#~ " weight values. The lowest vertex-"
#~ "weight (blue) will become *G Min*, "
#~ "the highest value (red) becomes *G "
#~ "Max* (please note that the blue-"
#~ "red color scale may be altered by"
#~ " User Preferences)."
#~ msgstr ""

#~ msgid "Edges receive a drag force from surrounding media"
#~ msgstr ""

#~ msgid "Using a Goal"
#~ msgstr ""

#~ msgid "Mass Vertex Group"
#~ msgstr ""

#~ msgid ""
#~ "Exterior forces are applied to the "
#~ "vertices (and nearly exclusively to the"
#~ " vertices) of Soft Body objects. This"
#~ " is done using Newton's Laws of "
#~ "Physics:"
#~ msgstr ""

#~ msgid ""
#~ "What happens? The cube moves in "
#~ "negative Z-direction. Each of its eight"
#~ " vertices is affected by a global,"
#~ " constant force -- the gravitation. "
#~ "Gravitation without friction is independent"
#~ " from the weight of an object, "
#~ "so each object you would use as"
#~ " a Soft Body here would fall "
#~ "with the same acceleration. The object"
#~ " does not deform, because every "
#~ "vertex moves with the same speed "
#~ "in the same direction."
#~ msgstr ""

#~ msgid "Panel:    :menuselection:`Physics --> Soft Body`"
#~ msgstr ""

#~ msgid ""
#~ "Mass value for vertices. Larger mass "
#~ "slows down acceleration, except for "
#~ "gravity where the motion is constant "
#~ "regardless of mass. Larger mass means"
#~ " larger inertia, so also braking a"
#~ " Soft Body is more difficult."
#~ msgstr ""

#~ msgid ""
#~ "You can control the internal timing "
#~ "of the softbody system with this "
#~ "value. It sets the correlation between"
#~ " frame rate and tempo of the "
#~ "simulation. A free falling body should"
#~ " cover a distance of about five "
#~ "meters after one second. You can "
#~ "adjust the scale of your scene and"
#~ " your simulation with this correlation. "
#~ "If you render with 25 frames per"
#~ " second and 1 meter shall be 1"
#~ " BU, you have to set *Speed* to"
#~ " 1.3."
#~ msgstr ""

#~ msgid "Panel:    :menuselection:`Physics --> Soft Body Field Weights`"
#~ msgstr ""

#~ msgid ""
#~ "To create other forces you have to"
#~ " use another object, often *Empty* "
#~ "objects are used for that. You can"
#~ " use some of the forces on Soft"
#~ " Body vertices as on *Particles*. "
#~ "Soft Bodies react only to:"
#~ msgstr ""

#~ msgid ""
#~ "Soft bodies do react on *Harmonic* "
#~ "fields, but not in a useful way."
#~ " So if you use a *Harmonic* "
#~ "field for particles move the Soft "
#~ "body to another layer."
#~ msgstr ""

#~ msgid "Panel:    :menuselection:`Physics --> Soft Body Edges`"
#~ msgstr ""

#~ msgid "Panel:    :menuselection:`Physics --> Soft Body Goal`"
#~ msgstr ""

#~ msgid ""
#~ "You have to confine the movement "
#~ "of vertices in certain parts of "
#~ "the mesh, e.g. to attach a Soft"
#~ " Body object at other objects. This"
#~ " is done with the *Vertex Group* "
#~ "(target). The target position is the "
#~ "original position of the vertex, like"
#~ " it would result from the \"normal\""
#~ " animation of an object including "
#~ "*Shape Keys*, *Hooks* and *Armatures*. "
#~ "The vertex tries to reach its "
#~ "target position with a certain, "
#~ "adjustable intensity."
#~ msgstr ""

#~ msgid ""
#~ "This parameter defines how strong the"
#~ " influence of this spring is. A "
#~ "strength of 1 means, that the "
#~ "vertex will not move as Soft Body"
#~ " at all, instead keep its original"
#~ " position. 0 *Goal* (or no *Goal*)"
#~ " means, that the vertex moves only"
#~ " according to Soft Body simulation. "
#~ "If no vertex group is used/assigned, "
#~ "this number button is the default "
#~ "goal weight for all vertices. If a"
#~ " vertex group is present and "
#~ "assigned, this button instead shows a"
#~ " list field, that allows you to "
#~ "choose the name of the goal vertex"
#~ " group. If you use a vertex "
#~ "group the weight of a vertex "
#~ "defines its goal."
#~ msgstr ""

#~ msgid ""
#~ "When you paint the values in "
#~ "vertex-groups (using *Weight Paint Mode*),"
#~ " you can use the *G Min* and"
#~ " *G Max* to fine-tune (clamp) "
#~ "the weight values. The lowest vertex-"
#~ "weight (blue) will become *G Min*, "
#~ "the highest value (red) becomes *G "
#~ "Max* (please note that the blue-"
#~ "red color scale may be altered by"
#~ " User Preferences)."
#~ msgstr ""

#~ msgid ""
#~ "For now we have discussed vertex "
#~ "movement independent of each other, "
#~ "similar to particles. Every object "
#~ "without *Goal* would collapse completely "
#~ "if a non uniform force is applied."
#~ " Now we will move to the next"
#~ " step, the forces that keep the "
#~ "structure of the object and make "
#~ "the Soft Body to a real Body."
#~ msgstr ""

#~ msgid "Press :kbd:`Alt-A`."
#~ msgstr ""

#~ msgid "Settings"
#~ msgstr ""

#~ msgid "Soft Body Panel"
#~ msgstr ""

#~ msgid ":menuselection:`Physics --> Soft Body`"
#~ msgstr ""

#~ msgid "Object"
#~ msgstr ""

#~ msgid "Friction"
#~ msgstr ""

#~ msgid ""
#~ "The friction of the surrounding medium."
#~ " The larger the friction, the more"
#~ " viscous is the medium. Friction "
#~ "always appears when a vertex moves "
#~ "relative to its surround medium."
#~ msgstr ""

#~ msgid "Mass"
#~ msgstr ""

#~ msgid ""
#~ "Mass value for vertices. Larger mass "
#~ "slows down acceleration, except for "
#~ "gravity where the motion is constant "
#~ "regardless of mass. Larger mass means"
#~ " larger inertia, so also braking a"
#~ " soft body is more difficult."
#~ msgstr ""

#~ msgid "Mass: Vertex Group"
#~ msgstr ""

#~ msgid ""
#~ "You can paint weight values for a"
#~ " mesh's mass, and select that vertex"
#~ " group here."
#~ msgstr ""

#~ msgid "Simulation"
#~ msgstr ""

#~ msgid "Speed"
#~ msgstr ""

#~ msgid ""
#~ "You can control the internal timing "
#~ "of the soft body system with this"
#~ " value. It sets the correlation "
#~ "between frame rate and tempo of "
#~ "the simulation. A free falling body "
#~ "should cover a distance of about "
#~ "five meters after one second. You "
#~ "can adjust the scale of your scene"
#~ " and your simulation with this "
#~ "correlation. If you render with 25 "
#~ "frames per second and 1 meter "
#~ "shall be 1 BU, you have to "
#~ "set *Speed* to 1.3."
#~ msgstr ""

#~ msgid ""
#~ "To create other forces you have to"
#~ " use another object, often *Empty* "
#~ "objects are used for that. You can"
#~ " use some of the forces on soft"
#~ " body vertices as on *Particles*. "
#~ "Soft bodies react only to:"
#~ msgstr ""

#~ msgid "Spherical"
#~ msgstr ""

#~ msgid "Wind"
#~ msgstr ""

#~ msgid "Vortex"
#~ msgstr ""

#~ msgid ""
#~ "Soft bodies do react on *Harmonic* "
#~ "fields, but not in a useful way."
#~ " So if you use a *Harmonic* "
#~ "field for particles move the soft "
#~ "body to another layer."
#~ msgstr ""

#~ msgid ""
#~ "See the section :doc:`Force Fields "
#~ "</physics/force_fields/index>` for details. The "
#~ "force fields are quite strong, a "
#~ "*Spherical* field with a strength of "
#~ "-1.0 has the same effect that "
#~ "gravity has -- approximately -- a "
#~ "force of 10 Newtons."
#~ msgstr ""

#~ msgid ":menuselection:`Physics --> Soft Body Edges`"
#~ msgstr ""

#~ msgid "Type"
#~ msgstr ""

#~ msgid "Simple"
#~ msgstr ""

#~ msgid "Edges receive a drag force from surrounding media."
#~ msgstr ""

#~ msgid "Lift Force"
#~ msgstr ""

#~ msgid "Edges receive a lift force when passing through surrounding media."
#~ msgstr ""

#~ msgid "Factor"
#~ msgstr ""

#~ msgid "How much aerodynamic force to use. Try a value of 30 at first."
#~ msgstr ""

#~ msgid ":menuselection:`Physics --> Soft Body Goal`"
#~ msgstr ""

#~ msgid "A goal is a shape that a soft body object tries to conform to."
#~ msgstr ""

#~ msgid ""
#~ "You have to confine the movement "
#~ "of vertices in certain parts of "
#~ "the mesh, e.g. to attach a soft"
#~ " body object at other objects. This"
#~ " is done with the *vertex group* "
#~ "(target). The target position is the "
#~ "original position of the vertex, like"
#~ " it would result from the \"normal\""
#~ " animation of an object including "
#~ "*shape keys*, *hooks* and *armatures*. "
#~ "The vertex tries to reach its "
#~ "target position with a certain, "
#~ "adjustable intensity."
#~ msgstr ""

#~ msgid "Shock absorber description."
#~ msgstr ""

#~ msgid ""
#~ "Imagine the vertex is connected with "
#~ "its target through a spring Fig. "
#~ ":ref:`fig-softbody-force-exterior-shock`."
#~ msgstr ""

#~ msgid "Default"
#~ msgstr ""

#~ msgid ""
#~ "This parameter defines how strong the"
#~ " influence of this spring is. A "
#~ "strength of 1 means, that the "
#~ "vertex will not move as soft body"
#~ " at all, instead keep its original"
#~ " position. 0 *Goal* (or no *Goal*)"
#~ " means, that the vertex moves only"
#~ " according to soft body simulation. "
#~ "If no vertex group is used/assigned, "
#~ "this number button is the default "
#~ "goal weight for all vertices. If a"
#~ " vertex group is present and "
#~ "assigned, this button instead shows a"
#~ " list field, that allows you to "
#~ "choose the name of the goal vertex"
#~ " group. If you use a vertex "
#~ "group the weight of a vertex "
#~ "defines its goal."
#~ msgstr ""

#~ msgid ""
#~ "Often :ref:`painting-weight-index` is "
#~ "used to adjust the weight comfortably."
#~ " For non-mesh objects the *Weight*"
#~ " parameter of their vertices/control points"
#~ " is used instead (:kbd:`W` in *Edit"
#~ " Mode*) or use the *Transform* panel."
#~ " The weight of *Hair* particles can"
#~ " also be painted in :doc:`Particle "
#~ "Edit Mode </physics/particles/mode>`."
#~ msgstr ""

#~ msgid "Minimum / Maximum"
#~ msgstr ""

#~ msgid ""
#~ "When you paint the values in "
#~ "vertex groups (using *Weight Paint "
#~ "Mode*), you can use the *G Min*"
#~ " and *G Max* to fine-tune "
#~ "(clamp) the weight values. The lowest"
#~ " vertex weight (blue) will become *G"
#~ " Min*, the highest value (red) "
#~ "becomes *G Max* (please note that "
#~ "the blue-red color scale may be"
#~ " altered by User Preferences)."
#~ msgstr ""

#~ msgid "For now all is applied to single vertices"
#~ msgstr ""

#~ msgid ""
#~ "For now we have discussed vertex "
#~ "movement independent of each other, "
#~ "similar to particles. Every object "
#~ "without *Goal* would collapse completely "
#~ "if a non-uniform force is applied."
#~ " Now we will move to the next"
#~ " step, the forces that keep the "
#~ "structure of the object and make "
#~ "the soft body to a real body."
#~ msgstr ""

#~ msgid "Goal Settings"
#~ msgstr ""

#~ msgid "Stiffness"
#~ msgstr ""

#~ msgid ""
#~ "The spring stiffness for Goal. A "
#~ "low value creates very weak springs "
#~ "(more flexible \"attachment\" to the "
#~ "goal), a high value creates a "
#~ "strong spring (a stiffer \"attachment\" "
#~ "to the goal)."
#~ msgstr ""

#~ msgid "Damping"
#~ msgstr ""

#~ msgid ""
#~ "The friction of the spring. With a"
#~ " high value the movement will soon"
#~ " come to an end (little jiggle)."
#~ msgstr ""

