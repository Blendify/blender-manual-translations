# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-07-20 14:18+0300\n"
"PO-Revision-Date: 2017-09-28 05:24+0300\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.4\n"
"Language: uk\n"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:3
msgid "Overview"
msgstr "Короткий огляд -- Overview"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:6
msgid "The most flexible way of mapping a 2D texture over a 3D object is a process called \"UV mapping\". In this process, you take your three-dimensional (X, Y & Z) mesh and unwrap it to a flat two-dimensional (X & Y ... or rather, as we shall soon see, \"U & V\") image. Colors in the image are thus mapped to your mesh, and show up as the color of the faces of the mesh. Use UV texturing to provide realism to your objects that procedural materials and textures cannot do, and better details than Vertex Painting can provide."
msgstr "Більш гнучким способом розкладки 2D текстури на 3D об'єкт є процес, що називається «розкладання по UV» або просто «UV розкладання» -- \"UV mapping\". У цьому процесі ви берете вашу тривимірну (X, Y та Z) сіть та розгортаєте її у плоске двовимірне (X та Y ... або, якщо скоро ми побачимо, «U та V») зображення. Кольори у цьому зображенні, таким чином, розкладаються на вашу сіть, та показуються як забарвлення граней сіті. Використовуйте текстурування на основі UV для надання реалізму вашим об'єктам у випадках, де процедурні матеріали та текстури не можуть цього зробити та де воно дає кращу детальність, ніж може забезпечити Малювання Вершин -- Vertex Painting."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:13
msgid "UVs Explained"
msgstr "Пояснення UV-т -- UVs Explained"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:16
msgid "The best analogy to understanding UV mapping is cutting up a cardboard box. The box is a three-dimensional (3D) object, just like the mesh cube you add to your scene."
msgstr "Найкращою аналогією розуміння UV розкладання є розрізання картонної коробки. Коробка -- це тривимірний (3D) об'єкт, так само, як і сітьовий куб, що ви додаєте у вашу сцену."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:19
msgid "If you were to take a pair of scissors and cut a seam or fold of the box, you would be able to lay it flat on a tabletop. As you are looking down at the box on the table, we could say that U is the left-right direction, is V is the up-down direction. This image is thus in two dimensions (2D). We use U and V to refer to these \"texture-space coordinates\" instead of the normal X and Y, which are always used (along with Z) to refer to the three dimensional space (3D)."
msgstr "Якщо ви би взяли пару ножиць та розрізали шви або складки коробки, ви б змогли її розкласти плоско на стільниці. Якщо дивитися зверху вниз на розкладену поверхню коробки на столі, то можна сказати, що U -- це напрямок зліва-направо, а V -- це напрямок зверху-вниз. Звідси, таке розкладене зображення є двовимірним (2D). Ми використовуємо U та V для позначення цих «координат простору текстур» замість звичайних X та ігрек, які завжди вживаються (разом із Z) для позначення тривимірного простору (3D)."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:26
msgid "When the box is reassembled, a certain UV location on the paper is transferred to an (X, Y, Z) location on the box. This is what the computer does with a 2D image in wrapping it around a 3D object."
msgstr "Коли коробка знову збирається, то певна локація за UV на папері переноситься у локацію (X, Y, Z) на зібраній коробці. Це те, що комп'ютер робить при обгортанні 2D зображення навколо 3D об'єкта."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:33
msgid "Box being inspected."
msgstr "Розглядувана коробка."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:37
msgid "Box mapped flat."
msgstr "Плоско розкладена поверхня коробки."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:40
msgid "During the UV unwrapping process, you tell Blender exactly how to map the faces of your object (in this case, a box) to a flat image in the UV/Image Editor. You have complete freedom in how to do this. (Continuing our previous example, imagine that, having initially laid the box flat on the tabletop, you now cut it into smaller pieces, somehow stretch and/or shrink those pieces, and then arrange them in some way upon a photograph that is also lying on that tabletop)."
msgstr "У ході процесу розгортання UV ви кажете Blender'у, як точно розкласти грані вашого об'єкта (у цьому випадку, коробки) у плоске зображення у Редакторі UV/Зображень -- UV/Image Editor. Ви маєте повну свободу у тому, як це робити. (Продовжуючи наш попередній приклад, уявіть, що, початково розклавши поверхню коробки плоско на стільниці, ви тепер розрізаєте її на менші шматки, якось розтягуєте та/або стискаєте ці шматки, а потім впорядковуєте їх певним чином по фотографії, що також лежить на цій стільниці)."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:47
msgid "Cartography Example"
msgstr "Приклад Картографії -- Cartography Example"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:50
msgid "Cartographers (map makers) have been dealing with this problem for millennia. A cartography (map-making) example is creating a projection map of the whole world. In cartography, we take the surface of the earth (a sphere) and make a flat map that can be folded up into the glove compartment aboard the space shuttle. We \"fill in\" spaces toward the poles, or change the outline of the map in any of several ways:"
msgstr "Картографи (укладачі карт) мають справу з цією проблемою впродовж тисячоліть. Картографія (укладання карт), як приклад -- це створення карти проекції усього світу. У картографії ми беремо поверхню Землі (сферу) та робимо плоску карту, що може згортатися у бардачок на борту космічного корабля. Ми «заповнюємо» пробіли у напрямку полюсів або змінюємо контур карти одним з таких способів:"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:61
msgid "Mercator Projection."
msgstr "Проекція Меркатора -- Mercator Projection."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:66
msgid "Mollweide Projection."
msgstr "Проекція Мольвейде -- Mollweide Projection."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:71
msgid "Albers-equal Projection."
msgstr "Проекція Альберса -- Albers-equal Projection."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:74
msgid "Each of these is an example of a way to UV map a sphere. Each of the hundred or so commonly accepted projections has its advantages and disadvantages. Blender allows the same thing anyway we want to, on the computer."
msgstr "Кожен з цих випадків є прикладом способу розкладки сфери по UV. Кожна із сотень або із загально прийнятих проекцій має свої переваги та недоліки. Blender дозволяє робити це ж, як ми хочемо, на комп'ютері."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:78
msgid "On more complex models (like seen in the earth map above) there pops up an issue where the faces cannot be cut, but instead they are stretched in order to make them flat. This helps making easier UV maps, but sometimes adds distortion to the final mapped texture. (Countries and states that are closer to the North or the South Pole look smaller on a flat map than do ones which are close to the Equator.)"
msgstr "На більш складних моделях (як видно на карті Землі вище) з'являється проблема, де грані не можуть бути розрізані, а натомість вони мають бути розтягнуті, щоб зробити їх плоскими. Це допомагає легше робити UV карти, але інколи додає спотворення у фінально розкладену текстуру. (Країни та держави, що є ближчими до Північного або Південного Полюсів виглядають меншими на плоскій карті, ніж ті, що є ближчими до Екватора.)"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:86
msgid "Half-Sphere Example"
msgstr "Приклад Пів-Сфери -- Half-Sphere Example"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:92
msgid "3D Space (XYZ) versus UV Space (click to enlarge)."
msgstr "3D Простір (XYZ) проти UV простору (клацніть для збільшення)."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:95
msgid "In this image you can easily see that the shape and size of the marked face in 3D space is different in UV space."
msgstr "У цьому зображенні ми можемо легко бачити, що форма та розмір поміченої грані у 3D просторі є відмінними в UV просторі."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:98
msgid "This difference is caused by the \"stretching\" (technically called mapping) of the 3D part (XYZ) onto a 2D plane (i.e the UV map)."
msgstr "Ця відмінність спричиняється «розтягуванням» (технічно названим розкладанням) 3D частини (XYZ) на 2D площині (тобто, UV карті)."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:101
msgid "If a 3D object has a UV map, then, in addition to the 3D-coordinates X, Y, and Z, each point on the object will have corresponding U and V coordinates. (*P* in the image above is an example of how a point on a 3D object might be mapped onto a 2D image.)"
msgstr "Якщо 3D об'єкт має UV карту, то, додатково до 3D-координат X, Y та Z, кожна точка на об'єкті буде мати відповідні їй U та V координати. (*P* на зображенні вище є прикладом того, як точка на 3D об'єкті може бути розкладена на 2D зображення.)"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:106
msgid "Advantages of UVs"
msgstr "Переваги UV-т -- Advantages of UVs"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:109
msgid "While procedural textures (described in the previous chapters) are useful-they never repeat themselves and always \"fit\" 3D objects-they are not sufficient for more complex or natural objects. For instance, the skin on a human head will never look quite right when procedurally generated. Wrinkles on a human head, or scratches on a car do not occur in random places, but depend on the shape of the model and its usage. Manually-painted images, or images captured from the real world gives more control and realism. For details such as book covers, tapestry, rugs, stains, and detailed props, artists are able to control every pixel on the surface using a UV Texture."
msgstr "Хоча процедурні текстури (описані в інших відповідних главах) є корисними -- вони ніколи не повторюються та завжди «підганяються» під 3D об'єкти -- однак, вони є підхожими для більш складних або природних об'єктів. Наприклад, шкірний покрив людської голови ніколи не виглядає досить правдоподібним при процедурному його генеруванні. Зморшки на людській голові або подряпини на автівці не трапляються у випадкових місцях, а це залежить від форми моделі та випадків її використання. Вручну намальовані зображення або зображення, відзняті з реального світу, дають більше контролю та реалізму. Для таких деталей, як обкладинки книг, тканина ручної роботи, килими, плями та деталізовані реквізити, митці у змозі керувати кожним пікселем на поверхні, використовуючи UV Текстуру."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:118
msgid "A UV map describes what part of the texture should be attached to each polygon in the model. Each polygon's vertex gets assigned to 2D coordinates that define which part of the image gets mapped. These 2D coordinates are called UVs (compare this to the XYZ coordinates in 3D). The operation of generating these UV maps is also called \"unwrap\", since it is as if the mesh were unfolded onto a 2D plane."
msgstr "UV карта описує, яка частина цієї текстури повинна бути прикріплена до якого полігону моделі. Кожна вершина полігону отримує призначені 2D координати, що визначають, яка частина зображення розкладається. Ці 2D координати називаються UV-ти (у порівнянні з XYZ координатами у 3D). Операція генерування цих UV карт також називається «розгортання» -- \"unwrap\", оскільки це, як ніби сіть була розгорнута на 2D площині."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:124
msgid "For most simple 3D models, Blender has an automatic set of unwrapping algorithms that you can easily apply. For more complex 3D models, regular Cubic, Cylindrical or Spherical mapping, is usually not sufficient. For even and accurate projection, use seams to guide the UV mapping. This can be used to apply textures to arbitrary and complex shapes, like human heads or animals. Often these textures are painted images, created in applications like the Gimp, Photoshop, or your favorite painting application."
msgstr "Для найбільш простих 3D моделей Blender має автоматичний набір алгоритмів розгортання, які ви можете легко застосовувати. Для більш складних 3D моделей, звичайне Кубічне -- Cubic, Циліндричне -- Cylindrical або Сферичне -- Spherical розкладання, зазвичай, не є достатнім. Для рівномірної та точної проекції використовуйте шви для направлення UV розкладання. Це може бути використано для застосування текстур на довільні та складні форми, як людські голови або шкури тварин. Часто такими текстурами є намальовані зображення, створенні у застосунках, як Gimp, Photoshop або у вашій улюбленій програмі для малювання."

#: ../../manual/editors/uv_image/uv_editing/overview.rst:131
msgid "Games"
msgstr "Ігри -- Games"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:133
msgid "UV mapping is also essential in the :doc:`Game Engine </game_engine/index>`, or any other game. It is the de facto standard for applying textures to models; almost any model you find in a game is UV mapped."
msgstr "UV розкладання також має важливе значення для ігрового рушія -- :doc:`Game Engine </game_engine/index>` або у будь-яких інших іграх. Це де-факто стандарт застосування текстур на моделях; майже будь-яка модель, яку ви виявите в комп'ютерній грі, є UV розкладеною."
