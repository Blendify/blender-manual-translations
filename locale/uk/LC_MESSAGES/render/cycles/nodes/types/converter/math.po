# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender Reference
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-07-05 13:47-0400\n"
"PO-Revision-Date: 2018-07-06 15:37+0300\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Language: uk\n"
"X-Generator: Poedit 2.0.8\n"

#: ../../manual/compositing/types/converter/math.rst:10
msgid "Math Node"
msgstr "Вузол «Математика» -- Math Node"

#: ../../manual/compositing/types/converter/math.rst:16
msgid "Math node."
msgstr "Вузол «Математика» -- Math node."

#: ../../manual/compositing/types/converter/math.rst:18
msgid "The *Math Node* performs math operations."
msgstr "Вузол «Математика» -- *Math Node* здійснює математичні операції."

#: ../../manual/compositing/types/converter/math.rst:21
msgid "Inputs"
msgstr "Уводи -- Inputs"

#: ../../manual/compositing/types/converter/math.rst:24
#: ../../manual/compositing/types/converter/math.rst:27
#: ../../manual/compositing/types/converter/math.rst:46
msgid "Value"
msgstr "Значення -- Value"

#: ../../manual/compositing/types/converter/math.rst:25
msgid ""
"First numerical value. The trigonometric functions accept values in "
"radians."
msgstr ""
"Перше числове значення. Тригонометричні функції приймають значення у "
"радіанах."

#: ../../manual/compositing/types/converter/math.rst:28
msgid ""
"Second numerical value. This value is **not** used in functions that "
"accept only one parameter like the trigonometric functions, Round and "
"Absolute."
msgstr ""
"Друге числове значення. Це значення **не** використовується у функціях, "
"що приймають тільки один параметр, на кшалт, тригонометричних функцій, "
"Округлення -- Round та Абсолют -- Absolute."

#: ../../manual/compositing/types/converter/math.rst:33
msgid "Properties"
msgstr "Властивості"

#: ../../manual/compositing/types/converter/math.rst:36
msgid "Operation"
msgstr "Операція -- Operation"

#: ../../manual/compositing/types/converter/math.rst:37
msgid ""
"Add, Subtract, Multiply, Divide, Sine, Cosine, Tangent, Arcsine, "
"Arccosine, Arctangent, Power, Logarithm, Minimum, Maximum, Round, Less "
"Than, Greater Than, Modulo, Absolute."
msgstr ""
"Додання -- Add, Відняття -- Subtract, Множення -- Multiply, Ділення -- "
"Divide, Синус -- Sine, Косинус -- Cosine, Тангенс -- Tangent, Арксинус -- "
"Arcsine, Арккосинус -- Arccosine, Арктангенс -- Arctangent, Степінь -- "
"Power, Логарифм -- Logarithm, Мінімум -- Minimum, Максимум -- Maximum, "
"Округлення -- Round, Менше Ніж -- Less Than, Більше Ніж -- Greater Than, "
"Модуль -- Modulo, Абсолют -- Absolute."

#: ../../manual/compositing/types/converter/math.rst:39
msgid "Clamp"
msgstr "Затиск -- Clamp"

#: ../../manual/compositing/types/converter/math.rst:40
msgid "Limits the output to the range (0 to 1). See :term:`clamp`."
msgstr "Лімітує вивід діапазоном (від 0 до 1). Дивіться :term:`clamp`."

#: ../../manual/compositing/types/converter/math.rst:43
msgid "Outputs"
msgstr "Виводи -- Outputs"

#: ../../manual/compositing/types/converter/math.rst:47
msgid "Numerical value output."
msgstr "Вивід числового значення."

#: ../../manual/compositing/types/converter/math.rst:50
msgid "Examples"
msgstr "Приклади"

#: ../../manual/compositing/types/converter/math.rst:53
msgid "Manual Z-Mask"
msgstr "Ручна Z-Маска"

#: ../../manual/compositing/types/converter/math.rst:58
msgid "Minimum and maximum function example."
msgstr "Приклад функції мінімуму та максимуму."

#: ../../manual/compositing/types/converter/math.rst:60
msgid ""
"This example has one scene input by the top *Render Layers* node, which "
"has a cube that is about 10 BU from the camera. The bottom *Render "
"Layers* node inputs a scene with a plane that covers the left half of the "
"view and is 7 BU from the camera. Both are fed through their respective "
"*Map Value* nodes to divide the Z-buffer by 20 (multiply by 0.05, as "
"shown in the Size field) and clamped to be a min/max of 0.0/1.0 "
"respectively."
msgstr ""
"Цей приклад має один увід зі сцени, поданий вузлом «Шари Рендера» -- "
"*Render Layers*, який має куб, що знаходиться близько 10 одиниць "
"Blender'а від камери. Нижній увід у карту вузлів -- другий вузол Render "
"Layers зі сценою, що має площину, яка покриває ліву частину огляду та "
"знаходиться на 7 BU від камери. Обидва подаються через відповідні їм "
"вузли «Розкладка Значень» -- Map Value, що ділять їх значення Z-буферу "
"глибини на 20 (або множать на 0.05, як показано у полі устави «Розмір» -- "
"Size) та затискають ці значення мінімумом/максимумом як 0.0/1.0 "
"відповідно."

#: ../../manual/compositing/types/converter/math.rst:68
msgid ""
"For the minimum function, the node selects those Z values where the "
"corresponding pixel is closer to the camera; so it chooses the Z values "
"for the plane and part of the cube. The background has an infinite Z "
"value, so it is clamped to 1.0 (shown as white). In the maximum example, "
"the Z values of the cube are greater than the plane, so they are chosen "
"for the left side, but the plane *Render Layers* Z are infinite (mapped "
"to 1.0) for the right side, so they are chosen."
msgstr ""
"Для функції мінімуму цей вузол вибирає ті значення Z, де відповідний "
"піксель є ближчим до камери; тому, він обирає значення Z для площини та "
"частини куба. Задньоплан має безкінечне значення глибини Z, а тому він "
"затискається значенням 1.0 (показується білим кольором). У прикладі з "
"максимумом значення Z куба є більшим, ніж для площини, а тому вони "
"обираються з лівого боку, але Z вузла *Render Layers* із площиною є "
"безкінечним (розкладеним в 1.0) для правого боку, і тому вони обоє є "
"вибраними."

#: ../../manual/compositing/types/converter/math.rst:77
msgid "Using Sine Function to Pulsate"
msgstr "Використання Функції Синуса для отримання ефекту Пульсації"

#: ../../manual/compositing/types/converter/math.rst:82
msgid "Using sine function example."
msgstr "Приклад використання функції синуса."

#: ../../manual/compositing/types/converter/math.rst:84
msgid ""
"This example has a *Time* node putting out a linear sequence from 0 to 1 "
"over the course of 101 frames. At frame 25, the output value is 0.25. "
"That value is multiplied by 2 × pi (6.28) and converted to 1.0 by the "
"Sine function, since we all know that :math:`sin(2 × pi/ 4) = sin(pi/ 2) "
"= +1.0`."
msgstr ""
"Цей приклад має вузол *Time* -- «Час», який розкладає лінеарну "
"послідовність від 0 до 1 на діапазон 101 кадрів. У кадрі 25 вивідне "
"значення є 0.25. Це значення множиться на 2 × pi (6.28) та конвертується "
"в 1.0 функцією Синуса, оскільки ми всі знаємо, що :math:`sin(2 × pi/ 4) = "
"sin(pi/ 2) = +1.0`."

#: ../../manual/compositing/types/converter/math.rst:89
msgid ""
"Since the sine function can put out values between (-1.0 to 1.0), the "
"*Map Value* node scales that to 0.0 to 1.0 by taking the input (-1 to 1), "
"adding 1 (making 0 to 2), and multiplying the result by one-half (thus "
"scaling the output between 0 to 1). The default *Color Ramp* converts "
"those values to a gray-scale. Thus, medium gray corresponds to a 0.0 "
"output by the sine, black to -1.0, and white to 1.0. As you can see, :"
"math:`sin(pi/ 2) = 1.0`. Like having your own visual color calculator! "
"Animating this node setup provides a smooth cyclic sequence through the "
"range of grays."
msgstr ""
"Оскільки функція синуса може викладати значення між (-1.0 to 1.0), то "
"вузол *Map Value* масштабує це у від 0.0 до 1.0, беручи увід (-1 to 1), "
"додаючи 1 (роблячи від 0 до 2) та множачи результат на одну-другу (звідси "
"масштабується вивід між 0 та 1). Стандартно *Color Ramp* конвертує ці "
"значення у шкалу-сірих. Тому, середній сірий відповідає за синусом виводу "
"0.0, чорний як -1.0, а білий як 1.0. Як ви можете бачити, :math:`sin(pi/ "
"2) = 1.0`. Ніби маєте власний візуальний калькулятор кольорів! Анімування "
"цього укладу вузлів надає плавну циклічну послідовність через діапазон "
"сірих."

#: ../../manual/compositing/types/converter/math.rst:97
msgid ""
"Use this function to vary, for example, the alpha channel of an image to "
"produce a fading in/out effect. Alter the Z channel to move a scene in/"
"out of focus. Alter a color channel value to make a color \"pulse\"."
msgstr ""
"Використовуйте цю функцію для варіювання, наприклад, альфа-каналу "
"зображення для отримання ефекту появи/щезання. Змінюйте значення цього Z-"
"каналу для переміщування сцени у/поза фокус. Змінюйте значення колірного "
"каналу для зроблення «пульсації» кольору."

#: ../../manual/compositing/types/converter/math.rst:103
msgid "Brightening (Scaling) a Channel"
msgstr "Збільшення яскравості (Масштабування) Каналу"

#: ../../manual/compositing/types/converter/math.rst:108
msgid "Scaling a channel example."
msgstr "Приклад масштабування каналу."

#: ../../manual/compositing/types/converter/math.rst:110
msgid ""
"This example has a *Math (Multiply)* node increasing the luminance "
"channel (Y) of the image to make it brighter. Note that you should use a "
"*Map Value node* with min() and max() enabled to clamp the output to "
"valid values. With this approach, you could use a logarithmic function to "
"make a high dynamic range image. For this particular example, there is "
"also a *Bright/Contrast node* that might give simpler control over "
"brightness."
msgstr ""
"Цей приклад має вузол «Математика (Множення)» -- *Math (Multiply)*, що "
"збільшує значення каналу світності (Y) зображення для зроблення його "
"яскравішим. Зауважте, що ви повинні використати вузол «Розкладка Значень» "
"-- *Map Value node* з увімкненими опціями мінімуму min() та максимуму "
"max() для затиску виводу у дійсні значення. За допомогою такого підходу "
"ви можете використати логарифмічну функцію для зроблення зображення з "
"високим динамічним діапазоном. Для цього конкретного прикладу існує також "
"вузол «Яскравість/Контраст» -- *Brighten/Contrast node*, що може давати "
"простіший контроль за яскравістю."

#: ../../manual/compositing/types/converter/math.rst:118
msgid "Restrict Color Selection (Posterization)"
msgstr "Обмеження Вибору Кольору (Постеризація)"

#: ../../manual/compositing/types/converter/math.rst:123
msgid "Posterization example."
msgstr "Приклад постеризації."

#: ../../manual/compositing/types/converter/math.rst:125
msgid ""
"In this example, we restrict the color values to be one of the six "
"values: 0, 0.2, 0.4, 0.6, 0.8, 1."
msgstr ""
"У цьому прикладі, ми обмежили значення кольору одним із шести значень: 0, "
"0.2, 0.4, 0.6, 0.8, 1."

#: ../../manual/compositing/types/converter/math.rst:127
msgid ""
"To split up a continuous range of values between 0 and 1 to certain set "
"of values, the following function is used: :math:`round(x × n - 0.5) / (n "
"- 1)`, where \"n\" is the number of possible output values, and \"x\" is "
"the input pixel color. `Read more about this function <https://en.blender."
"org/index.php/Doc:2.4/Manual/Composite_Nodes/Types/"
"Convertor#Quantize.2FRestrict_Color_Selection>`__."
msgstr ""
"Для розділення продовжуваного діапазону значень між 0 та 1 у певний набір "
"значень використовується наступна функція: :math:`round(x × n - 0.5) / (n "
"- 1)`, де \"n\" є кількість можливих значень виводу, і \"x\" є увідним "
"кольором пікселя. Детальніше -- `Read more about this function <https://"
"en.blender.org/index.php/Doc:2.4/Manual/Composite_Nodes/Types/"
"Convertor#Quantize.2FRestrict_Color_Selection>`__."

#: ../../manual/compositing/types/converter/math.rst:133
msgid ""
"To implement this function in Blender, consider the node setup above. We "
"string the math nodes into a function that takes each color (values from "
"0 to 1), multiplies it up by six, the desired number of divisions (values "
"becomes from 0 to 6), offsets it by 0.5 (-0.5 to 5.5), rounds the value "
"to the nearest whole number (produces 0, 1, 2, 3, 4, 5), and then divides "
"the image pixel color by five (0.0, 0.2, 0.4, 0.6, 0.8, 1.0)."
msgstr ""
"Для імплементації цієї функції у Blender'і розглянемо уклад вузлів вище. "
"Ми подали вузли Math у функцію, що бере кожен колір (значення від 0 до "
"1), множить це на шість, бажану кількість поділів (значення стають від  0 "
"до 6), зсуває це на 0.5 (-0.5 до 5.5), округлює значення до найближчого "
"цілого числа (продукує 0, 1, 2, 3, 4, 5), і потім ділить  колір пікселя "
"зображення на п'ять (0.0, 0.2, 0.4, 0.6, 0.8, 1.0)."

#: ../../manual/compositing/types/converter/math.rst:140
msgid ""
"In the case of a color image, you need split it into separate RGB "
"channels using *Separate/Combine RGBA* nodes and perform this operation "
"on each channel independently."
msgstr ""
"У випадку кольорового зображення вам необхідно розділити його на окремі "
"канали RGB, використавши вузли *Separate/Combine RGBA* та здійснити цю "
"операцію на кожному каналі незалежно."
