# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-24 14:49+1000\n"
"PO-Revision-Date: 2019-07-25 07:13+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: BlenderCN Translation Team\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"X-Generator: Poedit 2.2.3\n"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:5
msgid "Introduction"
msgstr "简介"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:7
msgid ""
"The 2D video stabilization is a feature built on top of Blender's image feature tracking abilities: You can use some tracking points to remove "
"shakiness, bumps and jerks from video footage. Typically, image stabilization is part of a 2D workflow to prepare and improve footage prior to "
"further processing or modeling steps. This page helps to understand how it works, introduces related terms and concepts, describes the available "
"interface controls in detail and finally gives some hints about usage in practice."
msgstr ""
"二维视频稳定是建立在blender图像特征跟踪能力之上的一项功能：您可以使用一些跟踪点来消除视频片段中的抖动、颠簸和抖动。通常，图像稳定是二维工作流程的一"
"部分，用于在进一步处理或建模步骤之前的准备和改进影片的稳定性。本页有助于理解它的工作原理，介绍相关术语和概念，详细描述可用的接口控件，最后给出一些"
"在实践中使用的提示。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:14
msgid "Typical usage scenarios of the stabilizer:"
msgstr "稳定器的典型使用场景："

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:16
msgid "Fix minor deficiencies (shaky tripod, jerk in camera movement)."
msgstr "修复小的缺陷(抖动三脚架，相机移动混乱)。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:17
msgid "\"Poor man's steadycam\" (when a real steadycam was not available, affordable or applicable)."
msgstr "“穷人的稳定摄像机软件”(当真正的稳定摄像机不可用时，这个可以负担得起或适用的)。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:18
msgid "As a preparation for masking, matching and rotoscoping."
msgstr "作为遮罩准备，匹配和对位。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:20
msgid "It is not uncommon for 2D stabilization to have to deal with somewhat imperfect and flawed footage."
msgstr "2D稳定必须处理一些不完美和有缺陷的镜头。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:24
msgid "How It Works"
msgstr "如何工作"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:26
msgid ""
"To detect spurious movement in a given shot, we'll assume a simplified model about this movement. We then try to fit the movement of tracked "
"features with this simplified model to derive a compensation. Of course, this works only to the degree our model is adequate -- yet in practice, "
"this simplified approach works surprisingly well even with rather complicated shots, where our basic assumption was just an approximation of much "
"more elaborate movements."
msgstr ""
"为了检测特定镜头中的虚假运动，我们将假设一个关于这个运动的简化模型。然后，我们尝试用这个简化的模型来拟合跟踪特征的运动，以获得补偿。当然，这只适用"
"于我们的模型已经足够的程度 - 但实际上，即使是相当复杂的镜头，这种简化方法的效果也令人惊讶，其中我们的基本假设只是更近似的精细运动。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:32
msgid "This simplified model underlying the 2D stabilization as implemented here assumes movement by an affine-linear transform:"
msgstr "此处实现的二维稳定的简化模型假设通过仿射线性变换移动："

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:35
msgid "The camera is pushed up/down/sideways by some translation component."
msgstr "相机由某个平移组件向上/向下/侧推。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:36
msgid "The image is then tilted and scaled around a pivot point (rotation center)."
msgstr "然后图像围绕一个轴点(旋转中心)倾斜和缩放。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:38
msgid ""
"To compensate movement according to this simplified model, the 2D stabilizer proceeds in two steps. First we try to detect the translation offset "
"from the weighted average of all *translation* tracking points. After compensating this translation component, we then use additional *rotation/"
"scale* tracking points to detect rotation around a given pivot point. Again, we detect rotation and scale changes through a weighted average of "
"all the rotation/scale tracking points given."
msgstr ""
"为了根据这个简化模型补偿运动，二维稳定器分两步进行。首先，我们尝试从所有 *变换* 跟踪点的加权平均值中检测平移偏移。在补偿了这个平移组件之后，我们使"
"用附加的 *旋转/缩放* 跟踪点来检测围绕给定轴点的旋转。再次，我们通过给定的所有旋转/缩放跟踪点的加权平均值检测旋转和缩放变化。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:44
msgid ""
"In the current version, the pivot point is anchored to the weight center of the translation tracking points. So effectively the detected "
"translation is already factored out. In some cases this is not optimal, especially when tracks have gaps or do not cover the whole duration of the "
"footage -- we plan further options to better control the pivot point in future releases."
msgstr ""
"在当前版本中，轴点锚定到平移跟踪点的权重中心。因此，有效地检测到的变换已经被解算出来了。在某些情况下，这不是最佳的，特别是当跟踪路径有间隙或不覆盖"
"整个视频时——我们计划进一步的选项来更好地控制未来版本中的轴心点。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:51
msgid "Stabilization Tracks"
msgstr "稳定跟踪"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:53
msgid ""
"Thus, as foundation for any image stabilization, we need tracked image features to derive the movements. These tracking points or \"tracks\" can "
"be established with Blender's :doc:`image feature tracking component </movie_clip/tracking/clip/introduction>` The right choice of points to track "
"is somewhat tricky, yet crucial for successful image stabilization. Often, we're here because we'll have to deal with imperfect footage. In such "
"cases, the averaging of tracks helps to work around image or tracking errors at some point. Moreover, when the footage contains perspective "
"induced movements, symmetrically placed tracking points above and below the horizon can be used to cancel out spurious movement and get "
"stabilization to the focal area in between."
msgstr ""
"因此，作为任何图像稳定的基础，我们需要跟踪图像特征来导出运动。这些跟踪点或“轨迹”可以使用Blender的 :doc:`Image Feature Tracking Component</"
"movie_clip/tracking/clip/introduction>` 来建立，正确选择要跟踪的点有些困难，但对于成功的图像稳定至关重要。通常，我们来这里是因为我们必须处理不完美"
"的镜头。在这种情况下，跟踪的平均值有助于在某一点上处理图像或跟踪错误。此外，当影像包含透视视差运动时，可利用对称放置在视界上下的跟踪点来消除伪运"
"动，并使视界之间的焦区稳定。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:66
msgid "Diverging movements caused by perspective."
msgstr "透视造成的偏离运动。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:68
msgid "Tracks can be added in two groups:"
msgstr "跟踪可以分为两组添加："

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:70
msgid ""
"First of all is the list of tracks to be used to compensate for jumps in the camera location. From all the tracking points added to this group, we "
"calculate a weighted average. We then try to keep this average location constant during the whole shot. Thus it is a good idea to use tracking "
"markers close to and centered around the most important subject."
msgstr ""
"首先是用于补偿相机位置跳跃的轨迹列表。从添加到该组的所有跟踪点中，我们计算加权平均值。然后我们尝试在整个拍摄过程中保持这个平均位置不变。因此，最好"
"在最重要的主题附近和中心使用跟踪标记。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:74
msgid ""
"A second selection of tracks is used to keep the rotation and scale of the image constant. You may use the same tracks for both selections. But "
"usually it is best to use tracking points with large distance from the image center, and symmetrically, on both sides, to capture the angular "
"movements more precisely. Similar to the \"location\" case, we calculate an average angular contribution and then try to keep this value constant "
"during the whole shot."
msgstr ""
"第二个轨迹选择用于保持图像的旋转和比例恒定。两种选择可以使用相同的跟踪路径。但通常情况下，最好使用距图像中心较远且两侧对称的跟踪点来更精确地捕捉角"
"运动。与“位置”情况类似，我们计算平均角度贡献，然后在整个拍摄过程中保持该值不变。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:82
msgid "Footage, Image and Canvas"
msgstr "镜头，图像和画布"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:84
msgid ""
"When talking about the movement stabilization of video, we have to distinguish several frames of reference. The image elements featured by the "
"footage move around irregularly within the footage's original image boundaries -- this is the very reason why we are using the stabilizer. When "
"our attempt at stabilization was successful, the image elements can be considered stable now, while in exchange the footage's image boundaries "
"have taken on irregular movement and jump around in the opposite way. This is the immediate consequence of the stabilizer's activity."
msgstr ""
"在谈到视频的运动稳定性时，我们必须区分几个参照系。影片中的图像元素在影片的原始图像边界内不规则地移动——这就是我们使用稳定器的原因。当我们的稳定尝试"
"成功时，图像元素现在可以被认为是稳定的，而作为交换，镜头的图像边界发生了不规则的移动，并以相反的方式跳跃。这是稳定启用的直接后果。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:91
msgid ""
"Since the actual image elements, i.e. the subject of our footage can be considered stable now, we may use these as a new frame of reference: we "
"consider them attached to a fixed backdrop, which we call the canvas. Introducing this concept of a \"canvas\" helps to deal with deliberate "
"movements of the camera. And beyond that, it yields an additional benefit: It is very frequent for the pixels of video footage to be non-square. "
"So we have to stretch and expand those pixels, before we're able to perform any sensible rotation stabilization. Thus the canvas becomes, by "
"definition, the reference for an undistorted display of the image contents."
msgstr ""
"由于实际的图像元素，即我们镜头的主题现在可以被认为是稳定的，我们可以将它们作为一个新的参照系：我们认为它们附着在一个固定的背景上，我们称之为画布。"
"引入“画布”的概念有助于处理相机的故意移动。除此之外，它还带来了一个额外的好处：视频片段的像素常常是非方形的。所以我们必须拉伸和扩展这些像素，然后才"
"能执行任何合理的旋转稳定。因此，根据定义，画布成为图像内容未失真显示的参考。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:98
msgid ""
"But when the camera was moved intentionally, we have to consider yet another frame of reference beyond the canvas: namely the frame (or \"cadre\") "
"of the final image we want to create. To understand this distinction, let's consider a hand-held, panning shot to the right: Since our camera was "
"turned towards the right side, the actual image contents move towards the left side *within* the original image frame. But let's assume the "
"stabilizer was successful with \"fixing\" any image contents relative to the canvas -- which in turn means, that the original image boundaries "
"start to move irregularly towards the right side, and the contents of the image will begin to disappear gradually behind the left boundary of the "
"original image. After some amount of panning, we'll have lost all of our original contents and just see an empty black image backdrop. The only "
"solution to deal with that problem is to move the final image frame along to the right, thus following the originally intended panning movement. "
"Of course, this time, we do want to perform this newly added panning movement in a smooth and clean way."
msgstr ""
"但是当相机被有意移动时，我们必须考虑画布之外的另一个参照系：即我们想要创建的最终图像的框架(或“cadre”)。为了理解这一区别，让我们考虑一个手持的、向"
"右平移的镜头：由于我们的相机转向了右侧，实际图像内容在*原始图像帧内*向左侧移动。但是假设稳定器成功地“修复”了与画布相关的任何图像内容——这反过来意味"
"着原始图像边界开始不规则地向右侧移动，图像内容将开始逐渐消失在左侧边界之后。原始图像的Y。经过一定量的平移，我们将丢失所有原始内容，只需看到一个空的"
"黑色图像背景。解决这个问题的唯一方法是将最终的图像帧向右移动，从而跟随最初计划的平移移动。当然，这一次，我们希望以一种平滑和干净的方式执行这个新添"
"加的平移操作。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:115
msgid "Stabilizing a panning shot."
msgstr "稳定平移镜头。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:121
msgid "Restoring the expected camera movement."
msgstr "恢复预期的相机移动。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:123
msgid ""
"To allow for such a compensation and to reintroduce deliberate panning, or tilting and zoom of the resulting image, the stabilizer offers a "
"dedicated set of controls: *Expected position*, *Expected rotation* and *Expected scale*. These act like the controls of a virtual camera filming "
"the contents we have fixed onto the canvas. By animating those parameters, we're able to perform all kinds of deliberate camera movements in a "
"smooth fashion."
msgstr ""
"为了进行补偿并重新引入有意的平移或倾斜和缩放结果图像，稳定器提供一套专用的控制装置：*预期位置* 、 *预期旋转* 和 *预期比例*。这些功能就像是一个虚拟"
"摄像机的控制，拍摄我们固定在画布上的内容。通过设置这些参数的动画，我们能够以一种平滑的方式执行各种有意识的相机动作。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:134
msgid "The \"Dancing\" Black Borders"
msgstr "“舞动的”黑色边框"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:136
msgid ""
"As explained above, when we succeed with stabilizing the image contents, the boundaries of the original footage start to jump around in the "
"opposite direction of the movements compensated. This is inevitable -- yet very annoying, since due to the irregular nature of these movements, "
"these \"dancing black borders\" tend to distract attention from the actual subject and introduce an annoying restlessness. Thus our goal must be "
"to hide those dancing borders as good as possible. A simple solution is to add a small amount of zoom. Sometimes we'll also need to animate the "
"parameter *Expected* position in order to keep the image centered as good as we can -- this helps to reduce the amount of zoom necessary to remove "
"those annoying borders."
msgstr ""
"如上所述，当我们成功地稳定图像内容时，原始胶片的边界开始向补偿运动的相反方向跳跃。这是不可避免的——但非常烦人，因为由于这些动作的不规则性质，这些“舞"
"动的黑色边界”往往会分散实际主题的注意力，并引入烦人的不安。因此，我们的目标必须是尽可能地隐藏那些跳舞的边界。一个简单的解决方案是添加少量的缩放。有"
"时我们还需要设置参数 *预期* 位置的动画，以便尽可能地保持图像居中--这有助于减少删除这些烦人边界所需的缩放量。"

#: ../../manual/movie_clip/tracking/clip/properties/stabilization/introduction.rst:144
msgid ""
"The *Autoscale* function can be used to find the minimal amount of zoom just sufficient to remove those black borders completely. However, if the "
"camera jumps a lot, the autoscale function often zooms in too much, especially since this calculation aims at finding a single, static zoom factor "
"for the whole duration of the footage. When this happens, you'll typically get overall better results with animating both the zoom factor and the "
"expected position manually."
msgstr ""
"*自动缩放* 功能可用于查找最小的缩放量，以完全消除这些黑色边框。但是，如果相机跳跃过多，自动缩放功能通常会放大过多，特别是因为该计算旨在在整个镜头持"
"续时间内找到单个静态缩放系数。当发生这种情况时，您通常会通过手动设置缩放系数和预期位置的动画来获得总体更好的结果。"

#~ msgid ""
#~ "To compensate movement according to this simplified model, the 2D stabilizer proceeds in two steps. First we try to detect the translation "
#~ "offset from the weighted average of all *translation tracking points*. After compensating this translation component, we then use additional "
#~ "*rotation/scale tracking points* to detect rotation around a given pivot point. Again, we detect rotation and scale changes through a weighted "
#~ "average of all the rotation/scale tracking points given."
#~ msgstr ""
#~ "为了根据这个简化模型对运动进行补偿，2D稳定器分两步进行。首先，我们试图从所有 *平移跟踪点* 的加权平均值中检测平移偏移量。在补偿这个平移组件之后，"
#~ "我们使用额外的 *旋转/缩放跟踪点* 来检测围绕给定支点的旋转。同样，我们通过给定的所有旋转/缩放跟踪点的加权平均来检测旋转和缩放变化。"

#~ msgid ""
#~ "But when the camera was *moved intentionally*, we have to consider yet another frame of reference beyond the canvas: namely the frame (or *"
#~ "\"cadre\"*) of the **final image** we want to create. To understand this distinction, let's consider a hand-held, panning shot to the right: "
#~ "Since our camera was turned towards the right side, the actual image contents move towards the left side *within* the original image frame. But "
#~ "let's assume the stabilizer was successful with \"fixing\" any image contents relative to the *canvas* -- which in turn means, that the "
#~ "original image boundaries start to move irregularly towards the right side, and the *contents* of the image will begin to disappear gradually "
#~ "behind the left boundary of the original image. After some amount of panning, we'll have lost all of our original contents and just see an "
#~ "empty black image backdrop. The only solution to deal with that problem is to *move the final image frame along to the right*, thus following "
#~ "the originally intended panning movement. Of course, this time, we do want to perform this newly added panning movement in a smooth and clean "
#~ "way."
#~ msgstr ""
#~ "但是当相机被 *有意移动* 时，我们必须考虑画布之外的另一个参考帧：即我们想要创建的 **最终图像** 的帧(或 *“核心”* )。为了理解这个区别，让我们考虑"
#~ "一个手持的，向右平移的镜头：因为我们的相机朝向右侧，实际图像内容向左移动到原来的图像框 *内*。但是让我们假设稳定器是成功的，“修复”了任何与 *画布"
#~ "* 相关的图像内容， - 这又意味着原始图像边界开始向右侧不规则地移动，并且图像的 *内容* 将会开始在原始图像的左边界后逐渐消失。经过一定程度的平移"
#~ "后，我们将丢失所有原始内容，并只看到空白的黑色图像背景。解决这个问题的唯一解决方案是 *将最终图像帧向右移动*，从而遵循最初的平移运动。当然，这一"
#~ "次，我们确实希望以平滑和干净的方式执行这个新增加的平移运动。"
