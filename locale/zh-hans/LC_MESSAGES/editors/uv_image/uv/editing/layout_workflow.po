# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Intl. License
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-17 01:30+0200\n"
"PO-Revision-Date: 2018-04-29 12:11+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"X-Generator: Poedit 2.0.7\n"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:4
msgid "Layout Workflow"
msgstr "布局工作流"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:7
msgid "Optimizing the UV Layout"
msgstr "优化UV布局"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:9
msgid ""
"When you have unwrapped, possibly using seams, your UV layout may be quite disorganized and chaotic. You may need to proceed with the following tasks: Orientation of the UV mapping, arranging the UV maps, stitching several maps "
"together."
msgstr "也许你用的是缝合线展开，展开完成后，UV布局可能相当杂乱无章。那么你接下来的任务就是：UV映射的排列、整理UV映射、将几个UV映射缝合到一起。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:13
msgid ""
"The next step is to work with the UV layouts that you have created through the unwrap process. If you do add faces or subdivide existing faces when a model is already unwrapped, Blender will add those new faces for you. In this "
"fashion, you can use the UV texture image to guide additional geometry changes."
msgstr "下一步是在通过展开流程创建UV布局后继续创作。如果对已经展开的模型添加面或细分现有面，Blender会自动在UV映射中添加面。这种情况下，可以使用UV贴图图像指导对几何体的修改。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:18
msgid ""
"When arranging, keep in mind that the entire view is your workspace, but only the UV coordinates within the grid are mapped to the image. So, you can put pieces off to the side while you arrange them. Also, each UV unwrap is its own "
"linked set of coordinates."
msgstr "在整理时，要记得虽然整个视图都是你的创作空间，但是只有位于栅格中的UV坐标才能映射到图像。所以整理过程中，可以将一些部分移到一旁。另外，每一组UV映射的关联坐标集合都是独立的。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:23
msgid ""
"You can lay them on top of one another, and they will onionskin (the bottom one will show through the top one). To grab only one though, :kbd:`RMB` select one of the UV coordinates, and use :menuselection:`Select --> Linked UVs`, :kbd:"
"`Ctrl-L` to select connected UVs, not border select because UVs from both will be selected."
msgstr "UV可以叠加放置，且以洋葱皮方式显示(透过最上层可以看到下层UV)。要仅选中一层UV，可以先选择一个UV坐标，然后使用 :menuselection:`选择 --> 选择相连元素`, :kbd:`Ctrl-L` 选择相连UV，而不能使用框选，因为这样会选中所有UV。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:31
msgid "Combining UV Maps"
msgstr "组合UV映射"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:35
msgid "Bad unwrap, note ear and neck."
msgstr "糟糕的展开，注意耳朵和颈部。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:37
msgid ""
"Very often you will unwrap an object, such as the face example we have been using, and get it \"mostly right\" but with parts of the mesh that did not unwrap properly, or are horribly confusing. The picture to the right shows an "
"initial unwrap of the face using the Unwrap from sphere option. The issues are with the ear; it is just a mush of UVs, and the neck, it is stretched and folded under. Too much work to clean up."
msgstr "在展开物体时，常常会出现 “多数正确”但部分网格展开不当的问题，就像上面的例子。上面的图片展示了使用球面方式展开脸部的原始结果。问题出在耳朵上，它的UV变成了一坨，还有颈部，拉伸和收缩都很明显。这需要很多工夫来整理。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:45
msgid "Unwrap face only, without ear or neck."
msgstr "耳朵和颈部先放一边，仅展开脸部。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:47
msgid ""
"We can tell that the ear would unwrap nicely with just a straightforward projection from the side view, and the neck with a tubular unwrap. So, our general approach will be to unwrap different parts of the object (face, ears, and so "
"on) using different unwrap calculations, selecting each calculation according to whatever works best for that piece. So let us begin: We select only the \"face\" faces, unwrap them using the *Sphere* calculation, and scale and rotate "
"them somewhat to fit logically within the image area of the UV/Image Editor."
msgstr ""
"不难发现，从侧视图直接投影就可以很好地展开耳朵了，而颈部使用柱面展开即可。所以，常规的方法是对物体的不同部分使用不同的展开算法，根据不同情况选择最恰当的展开算法。所以，我们重新展开：首先仅选择脸部的面，使用 *球面* 算法展开，然后缩放并"
"旋转至匹配UV/图像编辑器的图像区域。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:57
msgid "Unwrap ear only, using the *Project From View*."
msgstr "仅展开耳朵，使用 *从视角投影*。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:59
msgid ""
"Once we are satisfied with the face, it is time to turn our attention to the ear. First, unselect the faces you were working with. Their UVs will disappear from the UV/Image Editor, but they are still there, just not shown. (To verify "
"this, you can select a few faces in 3D View and it will show up in the UV/Image Editor)."
msgstr "脸部UV调整好之后，下面把注意力转到耳朵。首先，取消选择脸部。脸部的UV会从UV/图像编辑器消失，但是它还在那，只是隐藏了而已。(要确认的话，在3D视图选择几个面，UV/图像编辑器就会显示对应的UV)。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:63
msgid ""
"To work on the ear, in the 3D View, we now select only the \"ear\" faces. You can use Vertex Groups to select the ear faces. Selecting sub-meshes is easy too, since they are not connected to the rest of the mesh. Simply selecting "
"Linked vertices will select that entire submesh. Basically, since you are in Edit Mode, all of the selecting/deselecting features are available to you."
msgstr "要处理耳朵，先在3D视图仅选择耳朵上的面。可以使用顶点组进行选择。选择子网格也一样简单，因为它与网格的其他部分是断开的。只需要选择相连的顶点就可以选中整个子网格了。因为是在编辑模式下，基本上所有的选择/取消选择方法都可以用。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:69
msgid ""
"Now re-unwrap the ear using the *Project* calculation from side view, and scale and rotate them somewhat (discussed in the next section), and place them off to the side. You can do this repetitively, using different UV calculations; "
"each re-calculation just puts those UVs for the selected faces somewhere else. Choose the calculation for each piece that gives you the best fit and most logical layout for subsequent painting of that piece."
msgstr "现在开始从侧面使用 *投影* 算法重新展开耳朵，然后稍稍缩放和旋转(见下文)，并放置到一边。可以使用不同的UV算法重复展开；每次重新计算也只是将选中的面放到其他位置而已。选择最适合接下来的绘制且最有逻辑的布局。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:76
msgid ""
"When all of the pieces of the mesh have been unwrapped using the various calculations, you should end up with something that looks like to the Example to the right. All of the sections of the mesh have been mapped, and all those maps "
"are laid out in the same UV texture map. Congratulations! From here, it is a simple matter of \"stitching\" (discussed in the next section) to construct the entire UV map as a single map."
msgstr "当所有的网格都已经使用不同算法展开后，你应该可以得到类似下图的结果。网格的所有部分都存在映射，且这些映射铺在同一张UV贴图里。恭喜你！下面只需要一些简单的 *缝合* (见下文)工作就可以组成一张完整的UV映射了。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:85
msgid "UV maps arranged together and stitched."
msgstr "整理后和缝合后的UV映射。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:87
msgid ""
"When you have completed arranging and stitching, you will end up with a consolidated UV map, like that shown to the right, arranged such that a single image will cover, or paint, all of the mesh that needs detailed painting. All of "
"the detailed instructions on how to do this are contained in the next section. The point of this paragraph is to show you the ultimate goal. Note that the mesh shown is Mirrored along the Z axis, so the right side of the face is "
"virtual; it is an exact copy of the right, so only one set of UVs actually exist. (If more realism is desired, the Mirror Modifier would be applied, resulting in a physical mirror and a complete head. You could then make both side "
"physically different by editing one side and not the other. Unwrapping would produce a full set of UVs (for each side) and painting could thus be different for each side of the face, which is more realistic)."
msgstr ""
"整理和缝合工作结束后，可以获得如上图一样的完整UV映射，这样一张图像就可以囊括整个网格的细节绘制了。细节的做法会在下文介绍。本段的目的在于展示最终的目标。要注意的是，上面的网格是沿Z轴镜像的，所以左侧的脸部是虚拟的；它只是右侧的副本而已，"
"所以其实只存在一组UV。(如果要获得更加真实的效果，需要应用镜像修改器，获得真实的镜像和完整的头部。接下来可以修改一侧，使两侧获得真实的差异。展开过后可以得到一组完整的UV，绘制过后的脸部两侧也会有所不同，更加真实)。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:102
msgid "Iteration and Refinement"
msgstr "重复和改进"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:104
msgid ""
"At least for common people, we just do not \"get it right the first time.\" It takes building on an idea and iterating our creative process until we reach that magical milestone called \"Done.\" In software development, this is called "
"the Spiral Methodology."
msgstr "对多数人来说，是没法做到 *一步到位* 的。这需要基于一个想法，然后不断重复创造的过程，直到抵达称之为 *完成* 的神奇的里程碑。在软件开发中，这也叫做螺旋型方法。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:108
msgid ""
"Applied to Computer Graphics, we cycle between modeling, texturing, animating, and then back to making some modifications to mesh, re-UV mapping, tweaking the animation, adding a bone or two, finding out we need a few more faces, so "
"back to modeling, etc. We continue going round and round like this until we either run out of time, money, or patience, or, in some rare cases, are actually happy with our results."
msgstr "放到计算机图形学上，我们需要反复经历建模、贴图、动画的过程，然后修改网格、重新映射UV、调整动画、添加骨骼、弄清楚还要增加几个面等等。我们需要这样循环往复，直到耗尽时间、金钱、耐心，或者在极少数的情况下得到满意的结果。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:116
msgid "Refining the Layout"
msgstr "改进布局"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:118
msgid ""
"Refinement comes into play when we finally look at our character, and realize that we need more detail in a particular spot. For example, areas around the eyes might need crow's feet, or we need to add a logo to the vest. As you start "
"to edit the image, you realize that there just are not enough pixels available to paint the detail that you want."
msgstr "当看着我们的角色，然后意识到某个点需要更多细节的时候，改进流程就派上用场了。比如，要在眼睛周围添加一些鱼尾纹，或者在马甲上加个logo。当你开始修改图片的时候，才意识到没有足够的像素点容纳你想要的细节。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:124
msgid ""
"Your only choice is to expand the size (scale out) that UV face. Using the Minimize stretch or Scale tools, you expand the UV faces around the eyes or chest, allocating more pixels to those areas, but at the same time taking away "
"pixels (detail) from something else, like the back of the head. After refining the UV map, you then edit the image so that it looks right and contains the details you want."
msgstr "你唯一的选择是扩大(放大)UV面尺寸。使用最小化拉伸或者缩放工具，放大眼睛或者胸部周围的UV面，为这些区域分配更多的像素点，但同时也拿走了其他部位的像素点(细节)，比如后脑勺。改进UV映射后，然后就可以修改图像，把你想要的细节都放进去。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:133
msgid "Reusing Textures"
msgstr "重复利用贴图"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:135
msgid ""
"Another consideration is the need to conserve resources. Each image file is loaded in memory. If you can reuse the same image on different meshes, it saves memory. So, for example, you might want to have a generic face painting, and "
"use that on different characters, but alter the UV map and shape and props (sunglasses) to differentiate."
msgstr "另外需要考虑的就是节约资源。每张图像文件都会被加载到内存里。如果可以对不同的网格重复使用同一张图像，就可以节约内存。所以，比如，可以绘制一个通用的脸部，然后用在不同的角色上，通过调整UV映射和形状以及道具(墨镜)来加以区别。"

#: ../../manual/editors/uv_image/uv/editing/layout_workflow.rst:140
msgid ""
"You might want to have a \"faded blue jeans\" texture, and unwrap just the legs of characters to use that image. It would be good to have a generic skin image, and use that for character's hands, feet, arms, legs, and neck. When "
"modeling a fantasy sword, a small image for a piece of the sword blade would suffice, and you would Reset Unwrap the sword faces to reuse that image down the length of the blade."
msgstr ""
"你可能想要一张 “褪色的蓝色牛仔裤” 贴图，并且单独展开角色的腿部来使用这张贴图。把一张皮肤图像用在角色的手部、脚步、胳膊。腿和颈部，是再好不过的。在制作一个幻想的刀剑时，有一小张剑刃的贴图就够了，可以通过重置展开刀剑的面，对整个剑身重复"
"利用这样贴图。"
