# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-07-02 14:45+0800\n"
"PO-Revision-Date: 2018-07-02 15:26+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"X-Generator: Poedit 2.0.8\n"

#: ../../manual/editors/uv_image/uv/overview.rst:4
msgid "Overview"
msgstr "概述"

#: ../../manual/editors/uv_image/uv/overview.rst:6
msgid ""
"The most flexible way of mapping a 2D texture over a 3D object is a process called \"UV mapping\". In this process, you take your three-dimensional (X, Y & Z) mesh and unwrap "
"it to a flat two-dimensional (X & Y ... or rather, as we shall soon see, \"U & V\") image. Colors in the image are thus mapped to your mesh, and show up as the color of the "
"faces of the mesh. Use UV texturing to provide realism to your objects that procedural materials and textures cannot do, and better details than Vertex Painting can provide."
msgstr ""
"*UV* 映射是把二维贴图映射到三维物体最灵活的方法。在此过程中，将三维 (X, Y & Z) 网格展开为二维 (X & Y ... 或者也叫做, \"U & V\") 图像。图像中的色彩就这样映射到网格上，显示为网"
"格表面的色彩。使用UV贴图可以做出程序化材质和贴图无法做到的真实感，可以做出比顶点绘制更好的细节。"

#: ../../manual/editors/uv_image/uv/overview.rst:14
msgid "UVs Explained"
msgstr "UV的解释"

#: ../../manual/editors/uv_image/uv/overview.rst:16
msgid "The best analogy to understanding UV mapping is cutting up a cardboard box. The box is a three-dimensional (3D) object, just like the mesh cube you add to your scene."
msgstr "要理解UV映射，最好的类比是裁开纸板箱。箱子是一个三维(3D)物体，就好比场景里的立方体网格。"

#: ../../manual/editors/uv_image/uv/overview.rst:19
msgid ""
"If you were to take a pair of scissors and cut a seam or fold of the box, you would be able to lay it flat on a tabletop. As you are looking down at the box on the table, we "
"could say that U is the left-right direction, is V is the up-down direction. This image is thus in two dimensions (2D). We use U and V to refer to these \"texture-space "
"coordinates\" instead of the normal X and Y, which are always used (along with Z) to refer to the three-dimensional space (3D)."
msgstr ""
"拿一把剪子沿折线裁开盒子，就可以把它平铺到桌面。俯视桌子上的盒子，把左右方向称之为U，上下方向称之为V。图像就这样变成了二维(2D)。我们用U和V来代替常规的X和Y指代“纹理空间坐标”，"
"后者通常(和Z一起)用来表示三维空间(3D)。"

#: ../../manual/editors/uv_image/uv/overview.rst:26
msgid ""
"When the box is reassembled, a certain UV location on the paper is transferred to an (X, Y, Z) location on the box. This is what the computer does with a 2D image in wrapping "
"it around a 3D object."
msgstr "重组盒子之后，UV坐标转换为盒子上的 (X, Y, Z) 坐标。计算机做的其实就是把一张二维图像包裹到一个3D物体表面。"

#: ../../manual/editors/uv_image/uv/overview.rst:29
msgid ""
"During the UV unwrapping process, you tell Blender exactly how to map the faces of your object (in this case, a box) to a flat image in the UV/Image Editor. You have complete "
"freedom in how to do this. (Continuing our previous example, imagine that, having initially laid the box flat on the tabletop, you now cut it into smaller pieces, somehow "
"stretch and/or shrink those pieces, and then arrange them in some way upon a photograph that is also lying on that tabletop)."
msgstr ""
"在UV展开过程中，需要在UV/图像编辑器中准确告诉Blender如何将物体的表面映射到一张平摊的二维图像。这一步你可以放手施为(继续上面的类比，想象一下，把展开的盒子放在桌面，裁成小块，拉"
"伸和/或压缩这些小块，然后就像在桌面上一样已某种方式在图像中进行排列)。"

#: ../../manual/editors/uv_image/uv/overview.rst:37
msgid "Cartography Example"
msgstr "制图学范例"

#: ../../manual/editors/uv_image/uv/overview.rst:39
msgid ""
"Cartographers (map makers) have been dealing with this problem for millennia. A cartography (map-making) example is creating a projection map of the whole world. In "
"cartography, we take the surface of the earth (a sphere) and make a flat map that can be folded up into the glove compartment aboard the space shuttle. We \"fill in\" spaces "
"toward the poles, or change the outline of the map in any of several ways:"
msgstr ""
"制图者(地图制作人员)和这个问题打了上千年交道。一个制图学(地图制作)的例子是做一张全世界的投影地图。在制图学里，我们参考地球(一个球体)表面，然后制作出一张可以折叠到航天飞机仪表"
"盘柜子里的地图。我们用下面几种方法 *填充* 朝向两极的空间，或者改变地图轮廓："

#: ../../manual/editors/uv_image/uv/overview.rst:50
msgid "Mercator Projection."
msgstr "墨卡托投影。"

#: ../../manual/editors/uv_image/uv/overview.rst:55
msgid "Mollweide Projection."
msgstr "摩尔威德投影。"

#: ../../manual/editors/uv_image/uv/overview.rst:60
msgid "Albers-equal Projection."
msgstr "Albers等距投影。"

#: ../../manual/editors/uv_image/uv/overview.rst:62
msgid ""
"Each of these is an example of a way to UV map a sphere. Each of the hundred or so commonly accepted projections has its advantages and disadvantages. Blender allows the same "
"thing anyway we want to, on the computer."
msgstr "上面都是球面UV映射方法。上百种常用的投影方法都有其优点和缺点。在计算机中，Blender允许使用我们希望的任意方法。"

#: ../../manual/editors/uv_image/uv/overview.rst:66
msgid ""
"On more complex models (like seen in the earth map above) there pops up an issue where the faces cannot be cut, but instead they are stretched in order to make them flat. "
"This helps making easier UV maps, but sometimes adds distortion to the final mapped texture. (Countries and states that are closer to the North or the South Pole look smaller "
"on a flat map than do ones which are close to the Equator)."
msgstr ""
"在更加复杂的模型里(就像上面的全球地图)引出了一个问题，哪些面不能裁开，但为了摊开而被拉伸。这有助于更简单的UV映射，不过会增加最终映射贴图的变形。(在一张摊开的地图上，靠近两极的"
"国家或州看起来比靠近赤道的小一些)。"

#: ../../manual/editors/uv_image/uv/overview.rst:75
msgid "Half-Sphere Example"
msgstr "半球范例"

#: ../../manual/editors/uv_image/uv/overview.rst:80
msgid "3D space (XYZ) versus UV space."
msgstr "3D 空间 (XYZ) VS UV空间。"

#: ../../manual/editors/uv_image/uv/overview.rst:82
msgid ""
"In this image you can easily see that the shape and size of the marked face in 3D space is different in UV space. This difference is caused by the \"stretching\" (technically "
"called mapping) of the 3D part (XYZ) onto a 2D plane (i.e. the UV map)."
msgstr "不难看出上图中3D空间和UV空间中的标记面形状和大小不一样。这种差异是3D物件(XYZ)转换为2D平面(即UV映射)的\"拉伸\"(技术上称之为映射)导致的。"

#: ../../manual/editors/uv_image/uv/overview.rst:87
msgid "If a 3D object has a UV map, then, in addition to the 3D coordinates X, Y, and Z, each point on the object will have corresponding U and V coordinates."
msgstr "如果一个三维物体存在UV映射，那么物体上的每一个点的三维坐标都有其对应的UV坐标。"

#: ../../manual/editors/uv_image/uv/overview.rst:92
msgid "Advantages of UVs"
msgstr "UV的优势"

#: ../../manual/editors/uv_image/uv/overview.rst:94
msgid ""
"While procedural textures (described in the previous chapters) are useful-they never repeat themselves and always \"fit\" 3D objects-they are not sufficient for more complex "
"or natural objects. For instance, the skin on a human head will never look quite right when procedurally generated. Wrinkles on a human head, or scratches on a car do not "
"occur in random places, but depend on the shape of the model and its usage. Manually-painted images, or images captured from the real world gives more control and realism. "
"For details such as book covers, tapestry, rugs, stains, and detailed props, artists are able to control every pixel on the surface using a UV texture."
msgstr ""
"尽管程序纹理 (前面的章节有介绍)很有用—没有重复而且总是 \"适应\" 3D物体—但对于更加复杂或者自然的物体就有些够用了。例如，使用程序生成头部的皱纹就无法获得准确的结果。人体头部的皱"
"纹，或者汽车上的划痕并非出现在随机位置，而是取决于模型的形状和用途。手动绘制的图像，或者从真实世界捕捉的图像可以带来更多的可控性和真实感。对于细节如书籍封面、挂毯、地毯、污渍"
"和细节道具，艺术家可以通过UV贴图控制物体表面的每一个像素。"

#: ../../manual/editors/uv_image/uv/overview.rst:103
msgid ""
"A UV map describes what part of the texture should be attached to each polygon in the model. Each polygon's vertex gets assigned to 2D coordinates that define which part of "
"the image gets mapped. These 2D coordinates are called UVs (compare this to the XYZ coordinates in 3D). The operation of generating these UV maps is also called \"unwrap\", "
"since it is as if the mesh were unfolded onto a 2D plane."
msgstr ""
"UV映射描述了贴图的哪一部分关联到模型的哪个多边形。多边形的每一个顶点都被指定对应一个二维坐标，后者定义了图像的哪一部分被映射至物体。这些二维坐标被称为UV(与三维中的XYZ形成对"
"比)。生成UV映射的操作也称之为 \"展开\" ，因其就像把网格展开到一个二维平面上。"

#: ../../manual/editors/uv_image/uv/overview.rst:109
msgid ""
"For most simple 3D models, Blender has an automatic set of unwrapping algorithms that you can easily apply. For more complex 3D models, regular Cubic, Cylindrical or "
"Spherical mapping, is usually not sufficient. For even and accurate projection, use seams to guide the UV mapping. This can be used to apply textures to arbitrary and complex "
"shapes, like human heads or animals. Often these textures are painted images, created in applications like the Gimp, Photoshop, or your favorite painting application."
msgstr ""
"对于大多数简单的三维模型，Blender提供了简单的自动展开算法。对于更加复杂的三维模型，常规的立方体、柱体或球体映射通常是不够用的。为了获得均匀和精确的投影，可以使用缝合线引导UV映"
"射。这可以用于给任意并且复杂的形状(比如人体头部或者动物)应用贴图。通常这些贴图是使用GIMP、Photoshop或者其他用户喜爱的绘图软件绘制的图像。"

#: ../../manual/editors/uv_image/uv/overview.rst:116
msgid "Games"
msgstr "游戏"

#: ../../manual/editors/uv_image/uv/overview.rst:118
msgid ""
"UV mapping is also essential in the :doc:`Game Engine </game_engine/index>`, or any other game. It is the de facto standard for applying textures to models; almost any model "
"you find in a game is UV-mapped."
msgstr "UV映射对于 :doc:`游戏引擎 </game_engine/index>` 或者其他游戏，都是必不可少的 。这已经是对模型应用贴图的事实标准，几乎游戏里的任何模型都是使用UV映射的。"

#~ msgid "3D Space (XYZ) versus UV Space (click to enlarge)."
#~ msgstr "3D空间 (XYZ) 与UV空间对照 (单击放大)。"

#~ msgid "Box being inspected."
#~ msgstr "被检查的盒子。"

#~ msgid "Box mapped flat."
#~ msgstr "平摊开的盒子。"

#~ msgid "In this image you can easily see that the shape and size of the marked face in 3D space is different in UV space."
#~ msgstr "在上图中，3D空间和UV空间中的标记面形状和大小不一样。"
