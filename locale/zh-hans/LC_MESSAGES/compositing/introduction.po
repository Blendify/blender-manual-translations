# SOME DESCRIPTIVE TITLE.
# Copyright (C) : BlenderCN.org [mail: blender@vip.qq.com],with kidux help
# [alipay: yuzukyo@gmail.com]
# This file is distributed under the same license as the Blender 2016
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2016 2.76\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-17 01:30+0200\n"
"PO-Revision-Date: 2018-04-26 22:19+0800\n"
"Last-Translator: kidux(xueke pei) <blender@vip.qq.com>\n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"X-Generator: Poedit 2.0.7\n"

#: ../../manual/compositing/introduction.rst:4
msgid "Introduction"
msgstr "简介"

#: ../../manual/compositing/introduction.rst:6
msgid ""
"Compositing Nodes allow you to assemble and enhance an image (or movie). Using composition nodes, you can glue two pieces of footage together and "
"colorize the whole sequence all at once. You can enhance the colors of a single image or an entire movie clip in a static manner or in a dynamic way "
"that changes over time (as the clip progresses). In this way, you use composition nodes to both assemble video clips together and enhance them."
msgstr ""
"合成节点允许用户对一张图片（或视频）进行自由的组合和增强处理。运用合成节点，用户可以将两段素材粘附在一起并同时对整个序列进行润色。在剪辑过程中，我们可"
"以运用一种静态的方法或动态的方式来加强单帧图像或整个视频片段的色调。用这种方法，用户可以运用合成节点同时对视频素材进行随意组合和效果调整。"

#: ../../manual/compositing/introduction.rst:12
msgid "Term: Image"
msgstr "术语：图像"

#: ../../manual/compositing/introduction.rst:14
msgid ""
"The term *Image* may refer to a single picture, a picture in a numbered sequence of images, or a frame of a movie clip. The Compositor processes one "
"image at a time, no matter what kind of input you provide."
msgstr ""
"在涉及一幅图像，序列帧图像中的单独一张图片，或视频片段中的一帧画面，我们使用术语 *Image(图像)* 来定义。无论用户导入以上三种中的哪类合成素材，一个节点图"
"标只能容纳其中的一种素材形式。"

#: ../../manual/compositing/introduction.rst:18
msgid "To process your image, you use nodes to import the image into Blender, change it, optionally merge it with other images, and finally, save it."
msgstr ""
"用户处理图像的过程，就是用一个node来容纳导入到Blender里的image，并对它进行随意的更改及和其他image进行合并处理，最终保存操作的结果的这样一个流程。"

#: ../../manual/compositing/introduction.rst:23
msgid "An example of a composition."
msgstr "合成示例。"

#: ../../manual/compositing/introduction.rst:27
msgid "An example of color correction."
msgstr "颜色校正示例。"

#: ../../manual/compositing/introduction.rst:31
msgid "Getting Started"
msgstr "入门"

#: ../../manual/compositing/introduction.rst:33
msgid "Access the :doc:`Node Editor </editors/node_editor/index>` and enable *Composite Nodes* by clicking on the *Image* icon."
msgstr "访问 :doc:`节点编辑器 </editors/node_editor/index>` ，并单击 *图像* 图标，启用 *composite nodes(合成节点)* 。"

#: ../../manual/compositing/introduction.rst:36
msgid "To activate nodes for compositing, click the *Use Nodes* checkbox (see :doc:`/compositing/properties`)."
msgstr "要激活合成节点，请单击 *使用节点* 复选框 (请参见 :doc:`/compositing/properties`)。"

#: ../../manual/compositing/introduction.rst:41
msgid ""
"After clicking *Use Nodes* the Compositor is enabled, however, it can also be disabled in the :doc:`Post Processing Panel </render/post_process/"
"panel>`."
msgstr "单击 *使用节点* 合成编辑器启用，它也可以在 :doc:`后期合成面板 </render/post_process/panel>` 中禁用。"

#: ../../manual/compositing/introduction.rst:44
msgid ""
"You now have your first node setup, from here you can add and connect many types of :doc:`Compositing Nodes </compositing/index>`, in a sort of map "
"layout, to your heart's content (or physical memory constraints, whichever comes first)."
msgstr ""
"现在，视图上已经有了默认的一组节点，一个renderlayer(渲染层)输入节点和由一条连线联结的output(合成输出)节点。在这两者之间（一组合成节点组成的节点流程"
"图），用户还可自行添加blender提供的各种 :doc:`不同类型的合成节点 </compositing/index>` 来实现心中所要达到的视觉效果（忘了说一点，用户实现创意是受机器安"
"装内存容量的限制的，不知是创意枯竭和硬件限制哪个来的早一点）。"

#: ../../manual/compositing/introduction.rst:50
msgid "Nodes and node concepts are explained in more detail in the :doc:`Node Editor </editors/node_editor/index>`."
msgstr "在更详细地介绍了节点和节点概念 :doc:`节点编辑器 </editors/node_editor/index>`。"

#: ../../manual/compositing/introduction.rst:54
msgid "Examples"
msgstr "示例"

#: ../../manual/compositing/introduction.rst:56
msgid "You can do just about anything with images using nodes."
msgstr "用户可以运用节点来实现几乎头脑中所能想象的一切效果。"

#: ../../manual/compositing/introduction.rst:58
msgid ""
"Raw footage from a foreground actor in front of a blue screen, or a rendered object doing something, can be layered on top of a background. Composite "
"both together, and you have composited footage."
msgstr ""
"演员在蓝色抠像布前表演的一段合成素材，和已渲染的一些其他道具物体，可以分别叠放在背景图层上方，并将两者和背景结合在一起，就获得了最终的合成后影像。"

#: ../../manual/compositing/introduction.rst:62
msgid "You can change the mood of an image:"
msgstr "用户也可以调整图像的调性（给观众的视觉情绪变化）："

#: ../../manual/compositing/introduction.rst:64
msgid "To make an image 'feel' colder, a blue tinge is added."
msgstr "比如让一幅图像看起来比本身颜色更冷一些，就可以添加一些蓝色凋。"

#: ../../manual/compositing/introduction.rst:65
msgid "To convey a flashback or memory, the image may be softened."
msgstr "向观众传达倒叙或回忆的情绪，可能画面的调性会比实际颜色暖一些更能让观众接受。"

#: ../../manual/compositing/introduction.rst:66
msgid "To convey hatred and frustration, add a red tinge or enhance the red."
msgstr ""
"表达仇恨或挫败的情绪，常常在已有素材上加入一些红颜色改变画面的调性。影片《罪恶都市》是我看到过的最能表现这种用法的作品之一。（附注：《罪恶之城》是改编"
"自弗兰克米勒的同名漫画，由罗伯特·罗德里格兹、弗兰克·米勒和昆汀·塔伦蒂诺执导的动作电影。影片讲述三个故事：Sin City，The Big Fat Kill和That Yellow "
"Bastard。这三个故事都发生在一个虚构的城市——罪恶之城，而在这座城市中，主教大人、参议员、警察却正是罪恶的根源。\n"
"该片于2005年4月1日在美国上映。\n"
"）。"

#: ../../manual/compositing/introduction.rst:67
msgid "A startling event may be sharpened and contrast-enhanced."
msgstr "表达一些令人震惊的心里情绪大多数情况会增强画面的对比度。"

#: ../../manual/compositing/introduction.rst:68
msgid "A happy feeling -- you guessed it -- add yellow (equal parts red and green, no blue) for bright and sunny."
msgstr ""
"开心的情绪，也许你已经猜到了--添加暖黄色（等同于光学三原色除去蓝色后的颜色）。\n"
"（附注：光学三原色是电子显示设备的基础色，分别为红 绿 蓝 用以区分印刷和绘画所使用的红 黄 蓝 三原色）。"

#: ../../manual/compositing/introduction.rst:69
msgid "Dust and airborne dirt are often added as a cloud texture over the image to give a little more realism."
msgstr "在充满灰尘和空气中夹杂着尘土的场景，添加云状贴图叠放在背景素材之上会让整个画面看起来更加真实可信。"

#: ../../manual/compositing/introduction.rst:73
msgid "Image Size"
msgstr "图像尺寸"

#: ../../manual/compositing/introduction.rst:75
msgid ""
"It is recommended to pay attention to image resolution and color depth when mixing and matching images. Aliasing (rough edges), color *flatness*, or "
"distorted images can all be traced to mixing inappropriate resolutions and color depths."
msgstr ""
"当混合图像或匹配图像素材时，建议关注图像的分辨率和颜色位深。反锯齿（减弱粗糙的边缘），当混合不匹配的分辨率和位深图像素材时，颜色平滑度，或者图像错位，"
"这些项目都可以通过查看分辨率和位深来调整。"

#: ../../manual/compositing/introduction.rst:79
msgid ""
"The compositor can mix images with any size, and will only perform operations on pixels where images have an overlap. When nodes receive inputs with "
"differently sized Images, these rules apply:"
msgstr "合成人员可以混合任意尺寸的图像，在素材之间发生重叠地方才会计算应用的效果。当输入节点接收到不同尺寸的图像素材时，将采取如下的规则进行素材融合："

#: ../../manual/compositing/introduction.rst:83
msgid "The first/top Image input socket defines the output size."
msgstr "按照第一幅或最上层的图像输入尺寸来定义图像素材从此节点输出的图像尺寸大小。"

#: ../../manual/compositing/introduction.rst:84
msgid "The composite is centered by default, unless a translation has been assigned to a buffer using a *Translate* node."
msgstr "合成的图像素材默认是居中显示，除非用\"变换节点\"指定其他的设置参数。"

#: ../../manual/compositing/introduction.rst:87
msgid ""
"So each node in a composite can operate on different sized images as defined by its inputs. Only the *Composite* output node has a fixed size, as "
"defined by the settings in Properties Editor :menuselection:`Render --> Dimensions`. The *Viewer* node always shows the size from its input, but when "
"not linked (or linked to a value) it shows a small 320×256 pixel image."
msgstr ""
"因此在合成中的每幅图像素材都可由它自身的输入节点来定义其素材尺寸。只有 *合成* 输出节点由其面板属性编辑器的默认设置确定成片最终输出尺寸 :menuselection:`"
"渲染 --> 尺寸大小`。*Viewer查看器* 节点在自身的输入上显示其图像尺寸大小，但当其未被其他节点连接，或连接到一个数值，它仅显示为 320*256 的尺寸大小。"

#: ../../manual/compositing/introduction.rst:95
msgid "Saving your Composite Image"
msgstr "保存合成图像"

#: ../../manual/compositing/introduction.rst:97
msgid ""
"The *Render* button renders a single frame or image. Save your image using :menuselection:`Image --> Save Image` or :kbd:`F3`. The image will be saved "
"using the image format settings on the Render panel."
msgstr ""
"*Render渲染* 按钮渲染一张序列帧或单幅图像。保存图像使用 :menuselection:`图像 --> 保存图像` 或者 :kbd:`F3`。图像将按照渲染面板的格式设置进行输出保存。"

#: ../../manual/compositing/introduction.rst:101
msgid ""
"To save a sequence of images, for example, if you input a movie clip or used a Time node with each frame in its own file, use the *Animation* button "
"and its settings. If you might want to later overlay them, be sure to use an image format that supports an Alpha channel (such as ``PNG``). If you "
"might want to later arrange them front to back or create a depth of field effect, use a format that supports a Z-depth channel (such as ``EXR``)."
msgstr ""
"若要保存序列帧图片，比如，用户导入一段视频片段或者在视频文件上使用时间节点获取每帧图像，采用默认设置然后点击 *动画* 按钮即可。如果以后要在此输出结果上"
"叠加其他素材，输出时要选择支持Alpha通道的格式（比如PNG格式）。如果以后想通过改变前景和背景的排列进而达到图片景深的效果，输出时使用支持Z通道的图像格式"
"（比如EXR格式）。"

#: ../../manual/compositing/introduction.rst:108
msgid ""
"To save a composition as a movie clip (all frames in a single file), use an ``AVI`` or ``Quicktime`` format, and use the *Animation* button and its "
"settings."
msgstr "保存合成作为影片片段(所有的序列帧图片合为一个单一视频文件），使用 ``AVI`` 或者 ``Quicktime`` 格式，然后保持默认设置单击 *动画* 按钮即可。"
