# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender Reference
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-09 22:11+0800\n"
"PO-Revision-Date: 2018-01-01 16:46+0800\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../manual/render/cycles/nodes/osl.rst:5
msgid "Open Shading Language"
msgstr "开放式着色语言 (OSL)"

#: ../../manual/render/cycles/nodes/osl.rst:7
msgid ""
"It is also possible to create your own nodes using `Open Shading Language"
" <https://github.com/imageworks/OpenShadingLanguage>`__ (OSL). Note that "
"these nodes will only work for CPU rendering; there is no support for "
"running OSL code on the GPU."
msgstr ""
"用户可以通过使用 `开放着色语言(Open Shading Language) "
"<https://github.com/imageworks/OpenShadingLanguage>`__ 创建自己的结点 "
"。注意这些结点只能在CPU渲染下运行；现在不支持OSL代码工作在GPU下的方式。"

#: ../../manual/render/cycles/nodes/osl.rst:12
msgid ""
"To enable it, select *Open Shading Language* as the shading system in the"
" render settings."
msgstr "要开启这块功能，在渲染设置的着色器系统中选择开放式着色语言。"

#: ../../manual/render/cycles/nodes/osl.rst:16
msgid ""
"On Linux, C/C++ compiler tools (in particular /usr/bin/cpp) must be "
"installed to compile OSL scripts."
msgstr "在Linux上，C/C++ 编译工具（通常实践来说是/usr/bin/cpp）必须要安装来编译OSL脚本。"

#: ../../manual/render/cycles/nodes/osl.rst:21
msgid "Script Node"
msgstr "脚本节点"

#: ../../manual/render/cycles/nodes/osl.rst:26
msgid "Script Node."
msgstr "脚本节点。"

#: ../../manual/render/cycles/nodes/osl.rst:28
msgid ""
"OSL was designed for node-based shading, and *each* OSL shader "
"corresponds to *one* node in a node setup. To add an OSL shader, add a "
"script node and link it to a text data-block or an external file. Input "
"and output sockets will be created from the shader parameters on clicking"
" the update button in the Node or the Text editor."
msgstr "OSL是专门为节点着色器式的渲染模式设计的，节点图里面一个着色器节点就对应着一个OSL着色器。要添加一个OSL着色器，需要在Blender的文本编辑器中添加脚本或者一个外部文件的链接。节点的输入和输出接口会由代码中的各种参数，在Update按钮按下时即时生成。"

#: ../../manual/render/cycles/nodes/osl.rst:34
msgid ""
"OSL shaders can be linked to the node in a few different ways. With the "
"*Internal* mode, a text data-block is used to store the OSL shader, and "
"the OSO bytecode is stored in the node itself. This is useful for "
"distributing a blend-file with everything packed into it."
msgstr "OSL着色器可以通过几种不同的方式连接到节点。使用*内部*模式，将使用文本数据块存储OSL着色器，而OSO字节码则存储在节点本身中。这对于分配一个包含所有内容的bl末端文件非常有用。"

#: ../../manual/render/cycles/nodes/osl.rst:38
msgid ""
"The *External* mode can be used to specify a ``.osl`` file from a drive, "
"and this will then be automatically compiled into a ``.oso`` file in the "
"same directory. It is also possible to specify a path to a ``.oso`` file,"
" which will then be used directly, with compilation done manually by the "
"user. The third option is to specify just the module name, which will be "
"looked up in the shader search path."
msgstr ""
"*外部* 模式可用于从驱动器指定 ``.osl`` 文件，然后它将自动编译成在同一个目录下的 ``.osl`` 文件。也可以指定一条路径到 "
"``.osl`` 文件，然后将直接使用，由用户手工完成编译。第三个选项是指定模块名称，它将在着色器搜索路径中查找。"

#: ../../manual/render/cycles/nodes/osl.rst:44
msgid ""
"The shader search path is located in the same place as the scripts or "
"configuration path, under:"
msgstr "着色器的搜索地址可以在OSL脚本内所指定的地址下找到，如下："

#: ../../manual/render/cycles/nodes/osl.rst:46
msgid "Linux"
msgstr "Linux"

#: ../../manual/render/cycles/nodes/osl.rst:48
msgid "MS-Windows"
msgstr "MS-Windows"

#: ../../manual/render/cycles/nodes/osl.rst:51
msgid "macOS"
msgstr "macOS"

#: ../../manual/render/cycles/nodes/osl.rst:55
msgid ""
"For use in production, we suggest to use a node group to wrap shader "
"script nodes, and link that into other blend-files. This makes it easier "
"to make changes to the node afterwards as sockets are added or removed, "
"without having to update the script nodes in all files."
msgstr "为了制作方便，我们建议利用节点组包装着色器脚本节点，并连接到其他的.blend文件。这样一来，后续可以更容易更改（增加或删除）节点的插口，而不需要更新全部文件里面的代码节点。"

#: ../../manual/render/cycles/nodes/osl.rst:62
msgid "Writing Shaders"
msgstr "着色器写入"

#: ../../manual/render/cycles/nodes/osl.rst:64
msgid ""
"For more details on how to write shaders, see the `OSL specification "
"<https://github.com/imageworks/OpenShadingLanguage/blob/master/src/doc"
"/osl-languagespec.pdf>`__. Here is a simple example:"
msgstr ""
"要取得更多着色器写入相关的资料，请看 `OSL规格文件 "
"<https://github.com/imageworks/OpenShadingLanguage/blob/master/src/doc"
"/osl-languagespec.pdf>`__。这里有一个简单例子："

#: ../../manual/render/cycles/nodes/osl.rst:81
msgid "Closures"
msgstr "闭包"

#: ../../manual/render/cycles/nodes/osl.rst:83
#, fuzzy
msgid ""
"OSL is different from, for example, RSL or GLSL, in that it does not have"
" a light loop. There is no access to lights in the scene, and the "
"material must be built from closures that are implemented in the renderer"
" itself. This is more limited, but also makes it possible for the "
"renderer to do optimizations and ensure all shaders can be importance "
"sampled."
msgstr ""
"OSL 不同于RSL 或 "
"GLSL等，它没有光回路。场景中没有入射光源，而且必须由在渲染引擎本身的闭包中构建。这么一来限制挺多的，但这也使渲染引擎能够进行优化，并确保所有的着色器都能被取样。"

#: ../../manual/render/cycles/nodes/osl.rst:89
msgid ""
"The available closures in Cycles correspond to the shader nodes and their"
" sockets; for more details on what they do and the meaning of the "
"parameters, see the :doc:`shader nodes manual "
"</render/cycles/nodes/types/shaders/index>`."
msgstr ""
"在cycles中可用的闭包对应于着色器节点和套接口；对他们所做的更多的细节和参数的意义更多详细信息，请参阅 :doc:`着色器节点手册 "
"</render/cycles/nodes/types/shaders/index>` 。"

#: ../../manual/render/cycles/nodes/osl.rst:95
msgid "BSDF"
msgstr "双向散射分布函数"

#: ../../manual/render/cycles/nodes/osl.rst:97
msgid "``diffuse(N)``"
msgstr "``diffuse(N)``"

#: ../../manual/render/cycles/nodes/osl.rst:98
msgid "``oren_nayar(N, roughness)``"
msgstr "``oren_nayar(N, roughness)``"

#: ../../manual/render/cycles/nodes/osl.rst:99
msgid "``diffuse_ramp(N, colors[8])``"
msgstr "``diffuse_ramp(N, colors[8])``"

#: ../../manual/render/cycles/nodes/osl.rst:100
msgid "``phong_ramp(N, exponent, colors[8])``"
msgstr "``phong_ramp(N, exponent, colors[8])``"

#: ../../manual/render/cycles/nodes/osl.rst:101
msgid "``diffuse_toon(N, size, smooth)``"
msgstr "``diffuse_toon(N, size, smooth)``"

#: ../../manual/render/cycles/nodes/osl.rst:102
msgid "``glossy_toon(N, size, smooth)``"
msgstr "``glossy_toon(N, size, smooth)``"

#: ../../manual/render/cycles/nodes/osl.rst:103
msgid "``translucent(N)``"
msgstr "``translucent(N)``"

#: ../../manual/render/cycles/nodes/osl.rst:104
msgid "``reflection(N)``"
msgstr "``reflection(N)``"

#: ../../manual/render/cycles/nodes/osl.rst:105
msgid "``refraction(N, ior)``"
msgstr "``refraction(N, ior)``"

#: ../../manual/render/cycles/nodes/osl.rst:106
msgid "``transparent()``"
msgstr "``transparent()``"

#: ../../manual/render/cycles/nodes/osl.rst:107
msgid "``microfacet_ggx(N, roughness)``"
msgstr "``microfacet_ggx(N, roughness)``"

#: ../../manual/render/cycles/nodes/osl.rst:108
msgid "``microfacet_ggx_aniso(N, T, ax, ay)``"
msgstr "``microfacet_ggx_aniso(N, T, ax, ay)``"

#: ../../manual/render/cycles/nodes/osl.rst:109
msgid "``microfacet_ggx_refraction(N, roughness, ior)``"
msgstr "``microfacet_ggx_refraction(N, roughness, ior)``"

#: ../../manual/render/cycles/nodes/osl.rst:110
msgid "``microfacet_beckmann(N, roughness)``"
msgstr "``microfacet_beckmann(N, roughness)``"

#: ../../manual/render/cycles/nodes/osl.rst:111
msgid "``microfacet_beckmann_aniso(N, T, ax, ay)``"
msgstr "``microfacet_beckmann_aniso(N, T, ax, ay)``"

#: ../../manual/render/cycles/nodes/osl.rst:112
msgid "``microfacet_beckmann_refraction(N, roughness, ior)``"
msgstr "``microfacet_beckmann_refraction(N, roughness, ior)``"

#: ../../manual/render/cycles/nodes/osl.rst:113
msgid "``ashikhmin_shirley(N, T, ax, ay)``"
msgstr "``ashikhmin_shirley(N, T, ax, ay)``"

#: ../../manual/render/cycles/nodes/osl.rst:114
msgid "``ashikhmin_velvet(N, roughness)``"
msgstr "``ashikhmin_velvet(N, roughness)``"

#: ../../manual/render/cycles/nodes/osl.rst:118
msgid "Hair"
msgstr "毛发"

#: ../../manual/render/cycles/nodes/osl.rst:120
msgid "``hair_reflection(N, roughnessu, roughnessv, T, offset)``"
msgstr "``hair_reflection(N, roughnessu, roughnessv, T, offset)``"

#: ../../manual/render/cycles/nodes/osl.rst:121
msgid "``hair_transmission(N, roughnessu, roughnessv, T, offset)``"
msgstr "``hair_transmission(N, roughnessu, roughnessv, T, offset)``"

#: ../../manual/render/cycles/nodes/osl.rst:125
msgid "BSSRDF"
msgstr "双向散射面反射分布函数"

#: ../../manual/render/cycles/nodes/osl.rst:127
msgid "``bssrdf_cubic(N, radius, texture_blur, sharpness)``"
msgstr "``bssrdf_cubic(N, radius, texture_blur, sharpness)``"

#: ../../manual/render/cycles/nodes/osl.rst:128
msgid "``bssrdf_gaussian(N, radius, texture_blur)``"
msgstr "``bssrdf_gaussian(N, radius, texture_blur)``"

#: ../../manual/render/cycles/nodes/osl.rst:132
msgid "Volume"
msgstr "体积"

#: ../../manual/render/cycles/nodes/osl.rst:134
msgid "``henyey_greenstein(g)``"
msgstr "``henyey_greenstein(g)``"

#: ../../manual/render/cycles/nodes/osl.rst:135
msgid "``absorption()``"
msgstr "``absorption()``"

#: ../../manual/render/cycles/nodes/osl.rst:139
msgid "Other"
msgstr "其他"

#: ../../manual/render/cycles/nodes/osl.rst:141
msgid "``emission()``"
msgstr "``emission()``"

#: ../../manual/render/cycles/nodes/osl.rst:142
msgid "``ambient_occlusion()``"
msgstr "``ambient_occlusion()``"

#: ../../manual/render/cycles/nodes/osl.rst:143
msgid "``holdout()``"
msgstr "``holdout()``"

#: ../../manual/render/cycles/nodes/osl.rst:144
msgid "``background()``"
msgstr "``background()``"

#: ../../manual/render/cycles/nodes/osl.rst:148
msgid "Attributes"
msgstr "属性"

#: ../../manual/render/cycles/nodes/osl.rst:150
msgid ""
"Some object, particle and mesh attributes are available to the built-in "
"``getattribute()`` function. UV maps and vertex colors can be retrieved "
"using their name. Other attributes are listed below:"
msgstr "一些物件，粒子和模型属性也可以在自带的 ``getattribute()`` 函数取得。 UV贴图和顶点颜色也可以通过他们的名字检索。其他属性如下："

#: ../../manual/render/cycles/nodes/osl.rst:154
msgid "``geom:generated``"
msgstr "``geom:generated``"

#: ../../manual/render/cycles/nodes/osl.rst:155
msgid "Generated texture coordinates."
msgstr "生成纹理坐标。"

#: ../../manual/render/cycles/nodes/osl.rst:156
msgid "``geom:uv``"
msgstr "``geom:uv``"

#: ../../manual/render/cycles/nodes/osl.rst:157
msgid "Default render UV map."
msgstr "默认渲染UV贴图。"

#: ../../manual/render/cycles/nodes/osl.rst:158
msgid "``geom:dupli_generated``"
msgstr "``geom:dupli_generated``"

#: ../../manual/render/cycles/nodes/osl.rst:159
msgid "For instances, generated coordinate from duplicator object."
msgstr "例如从其他物件生成坐标。"

#: ../../manual/render/cycles/nodes/osl.rst:160
msgid "``geom:dupli_uv``"
msgstr "``geom:dupli_uv``"

#: ../../manual/render/cycles/nodes/osl.rst:161
msgid "For instances, UV coordinate from duplicator object."
msgstr "例如其他物件UV坐标。"

#: ../../manual/render/cycles/nodes/osl.rst:162
msgid "``geom:trianglevertices``"
msgstr "``geom:trianglevertices``"

#: ../../manual/render/cycles/nodes/osl.rst:163
msgid "3 vertex coordinates of the triangle."
msgstr "三角形的3顶点坐标。"

#: ../../manual/render/cycles/nodes/osl.rst:164
msgid "``geom:numpolyvertices``"
msgstr "``geom:numpolyvertices``"

#: ../../manual/render/cycles/nodes/osl.rst:165
msgid "Number of vertices in the polygon (always returns three currently)."
msgstr "多边形的顶点数（通常返回值是3）"

#: ../../manual/render/cycles/nodes/osl.rst:166
msgid "``geom:polyvertices``"
msgstr "``geom:polyvertices``"

#: ../../manual/render/cycles/nodes/osl.rst:167
msgid "Vertex coordinates array of the polygon (always three vertices currently)."
msgstr "多边形的顶点数（通常返回值是3）"

#: ../../manual/render/cycles/nodes/osl.rst:168
msgid "``geom:name``"
msgstr "``geom:name``"

#: ../../manual/render/cycles/nodes/osl.rst:169
msgid "Name of the object."
msgstr "物件名称。"

#: ../../manual/render/cycles/nodes/osl.rst:170
msgid "``geom:is_curve``"
msgstr "``geom:is_curve``"

#: ../../manual/render/cycles/nodes/osl.rst:171
msgid "Is object a strand or not."
msgstr "物件是否线状。"

#: ../../manual/render/cycles/nodes/osl.rst:172
msgid "``geom:curve_intercept``"
msgstr "``geom:curve_intercept``"

#: ../../manual/render/cycles/nodes/osl.rst:173
msgid "Point along the strand, from root to tip."
msgstr "沿着线形从头至尾。"

#: ../../manual/render/cycles/nodes/osl.rst:174
msgid "``geom:curve_thickness``"
msgstr "``geom:curve_thickness``"

#: ../../manual/render/cycles/nodes/osl.rst:175
msgid "Thickness of the strand."
msgstr "线的厚度。"

#: ../../manual/render/cycles/nodes/osl.rst:176
msgid "``geom:curve_tangent_normal``"
msgstr "``geom:curve_tangent_normal``"

#: ../../manual/render/cycles/nodes/osl.rst:177
msgid "Tangent Normal of the strand."
msgstr "线股的切向法线。"

#: ../../manual/render/cycles/nodes/osl.rst:178
msgid "``path:ray_length``"
msgstr "``path:ray_length``"

#: ../../manual/render/cycles/nodes/osl.rst:179
msgid "Ray distance since last hit."
msgstr "光线到达距离。"

#: ../../manual/render/cycles/nodes/osl.rst:180
msgid "``object:location``"
msgstr "``object:location``"

#: ../../manual/render/cycles/nodes/osl.rst:181
msgid "Object location."
msgstr "物件位置。"

#: ../../manual/render/cycles/nodes/osl.rst:182
msgid "``object:index``"
msgstr "``object:index``"

#: ../../manual/render/cycles/nodes/osl.rst:183
msgid "Object index number."
msgstr "物件索引号。"

#: ../../manual/render/cycles/nodes/osl.rst:184
msgid "``object:random``"
msgstr "``object:random``"

#: ../../manual/render/cycles/nodes/osl.rst:185
msgid "Per object random number generated from object index and name."
msgstr "通过物件的索引和名称生成的每个对象随机数。"

#: ../../manual/render/cycles/nodes/osl.rst:186
msgid "``material:index``"
msgstr "``material:index``"

#: ../../manual/render/cycles/nodes/osl.rst:187
msgid "Material index number."
msgstr "材质索引号。"

#: ../../manual/render/cycles/nodes/osl.rst:188
msgid "``particle:index``"
msgstr "``particle:index``"

#: ../../manual/render/cycles/nodes/osl.rst:189
msgid "Particle instance number."
msgstr "粒子实例数量。"

#: ../../manual/render/cycles/nodes/osl.rst:190
msgid "``particle:age``"
msgstr "``particle:age``"

#: ../../manual/render/cycles/nodes/osl.rst:191
msgid "Particle age in frames."
msgstr "粒子帧寿命。"

#: ../../manual/render/cycles/nodes/osl.rst:192
msgid "``particle:lifetime``"
msgstr "``particle:lifetime``"

#: ../../manual/render/cycles/nodes/osl.rst:193
msgid "Total lifespan of particle in frames."
msgstr "粒子在帧的总寿命。"

#: ../../manual/render/cycles/nodes/osl.rst:194
msgid "``particle:location``"
msgstr "``particle:location``"

#: ../../manual/render/cycles/nodes/osl.rst:195
msgid "Location of the particle."
msgstr "粒子的位置。"

#: ../../manual/render/cycles/nodes/osl.rst:196
msgid "``particle:size``"
msgstr "``particle:size``"

#: ../../manual/render/cycles/nodes/osl.rst:197
msgid "Size of the particle."
msgstr "粒子的大小。"

#: ../../manual/render/cycles/nodes/osl.rst:198
msgid "``particle:velocity``"
msgstr "``particle:velocity``"

#: ../../manual/render/cycles/nodes/osl.rst:199
msgid "Velocity of the particle."
msgstr "粒子的速度。"

#: ../../manual/render/cycles/nodes/osl.rst:202
msgid "``particle:angular_velocity``"
msgstr "``particle:angular_velocity``"

#: ../../manual/render/cycles/nodes/osl.rst:201
msgid "Angular velocity of the particle."
msgstr "粒子的角速度。"

#: ../../manual/render/cycles/nodes/osl.rst:205
msgid "Trace"
msgstr "跟踪"

#: ../../manual/render/cycles/nodes/osl.rst:207
msgid ""
"We support the ``trace(point pos, vector dir, ...)`` function, to trace "
"rays from the OSL shader. The \"shade\" parameter is not supported "
"currently, but attributes can be retrieved from the object that was hit "
"using the ``getmessage(\"trace\", ..)`` function. See the OSL "
"specification for details on how to use this."
msgstr ""
"我们支持“跟踪”(point pos,vector dir，…)“功能，从OSL着色器中追踪光线。”当前不支持“阴影”参数，但是可以从使用 "
"``getmessage`` (\"trace\")的对象中检索属性功能。请参阅OSL规范了解具体用法。"

#: ../../manual/render/cycles/nodes/osl.rst:213
msgid ""
"This function cannot be used instead of lighting; the main purpose is to "
"allow shaders to \"probe\" nearby geometry, for example to apply a "
"projected texture that can be blocked by geometry, apply more \"wear\" to"
" exposed geometry, or make other ambient occlusion-like effects."
msgstr "这个功能不能代替照明;其主要目的是使着色器能够“探测”附近的几何形状，例如，应用可以被几何形状阻挡的投影纹理，应用更多的“磨损”来暴露几何图形，或者使其他环境遮挡效果类似。"

