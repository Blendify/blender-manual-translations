# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Intl. License
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.77 Manual 2.77\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 16:58+0200\n"
"PO-Revision-Date: 2019-08-22 22:16+0800\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: BlenderCN Translation Team\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"X-Generator: Poedit 2.2.1\n"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:4
msgid "Reducing Noise"
msgstr "降噪"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:6
msgid ""
"When performing a final render, it is important to reduce noise as much "
"as possible. Here we will discuss a number of tricks that, while "
"breaking the laws of physics, are particularly important when rendering "
"animations within a reasonable time. Click to enlarge the example images "
"to see the noise differences well."
msgstr ""
"在执行最终渲染时，尽可能降低噪点非常重要。在这里，我们将讨论一些技巧，虽"
"然打破了物理定律，但是在合理时间内渲染动画时尤为重要的。单击以放大示例图"
"像，查看噪声差异。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:13
msgid "Path Tracing"
msgstr "路径追踪"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:15
msgid ""
"Cycles uses path tracing with next event estimation, which is not good "
"at rendering all types of light effects, like caustics, but has the "
"advantage of being able to render more detailed and larger scenes "
"compared to some other rendering algorithms. This is because we do not "
"need to store, for example, a photon map in memory, and because we can "
"keep rays relatively coherent to use an on-demand image cache, compared "
"to e.g. bidirectional path tracing."
msgstr ""
"Cycles 在下一个事件估计时使用路径跟踪，这不擅长渲染所有类型的光效果(如焦"
"散效果)，但与其他渲染算法相比，它的优势是能够渲染更详细、更大的场景。这"
"是因为我们不需要在内存中存储光子贴图，并且与双向路径跟踪相比，我们可以保"
"持光线相对一致，以使用按需图像缓存。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:27
msgid ""
"We do the inverse of what reality does, tracing light rays from the "
"camera into the scene and onto lights, rather than from the light "
"sources into the scene and then into the camera. This has the advantage "
"that we do not waste light rays that will not end up in the camera, but "
"also means that it is difficult to find some light paths that may "
"contribute a lot. Light rays will be sent either according to the "
"surface BRDF, or in the direction of known light sources."
msgstr ""
"我们做与现实相反的事情，将相机的光线跟踪到场景中和灯光上，而不是从光源到"
"场景中，然后进入摄像机。这样做的好处是，我们不会浪费不会出现在相机中的光"
"线，但也意味着很难找到一些可能贡献很大的光路。光线将根据表面 BRDF 或已知"
"光源的方向发送。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:37
msgid ""
"For more details, see the :doc:`Light Paths </render/cycles/"
"render_settings/light_paths>` and :doc:`Sampling </render/cycles/"
"render_settings/sampling>` documentation."
msgstr ""
"有关详细信息，请参阅 :doc:`光程 </render/cycles/render_settings/"
"light_paths>` 以及 :doc:`采样 </render/cycles/render_settings/sampling>` "
"文档。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:43
msgid "Where Noise Comes From"
msgstr "噪点从何而来"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:45
msgid ""
"To understand where noise can come from, take for example the scene "
"below. When we trace a light ray into the location marked by the white "
"circle on a red dot, the second image below gives an impression of what "
"the diffuse shader \"sees\"."
msgstr ""
"要了解噪音可能来自何处，请以下面的场景为例。当我们将光线追踪到红点上由白"
"色圆圈标记的位置时，下面的第二个图像给人一种漫反射色光 \"看到\" 的印象。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:49
msgid ""
"To find the light that is reflected from this surface, we need to find "
"the average color from all these pixels. Note the glossy highlight on "
"the sphere, and the bright spot the light casts on the nearby wall. "
"These hotspots are 100x brighter than other parts of the image and will "
"contribute significantly to the lighting of this pixel."
msgstr ""
"要查找从曲面反射的光，我们需要从所有这些像素中查找平均颜色。注意球体上的"
"光泽高光，以及光线投射在附近墙壁上的亮点。这些热点比图像的其他部分亮 100 "
"倍，并将显著影响此像素的照明。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:60
msgid "The scene."
msgstr "这个场景。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:65
#: ../../manual/render/cycles/optimizations/reducing_noise.rst:96
msgid "Irradiance at the shading point."
msgstr "阴影点的亮照度。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:70
#: ../../manual/render/cycles/optimizations/reducing_noise.rst:101
msgid "The detected highlights."
msgstr "检测到的高光。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:72
msgid ""
"The light is a known light source, so its location is already known, but "
"the glossy highlight(s) that it causes are a different matter. The best "
"we can do with path tracing is to distribute light rays randomly over "
"the hemisphere, hoping to find all the important bright spots. If for "
"some pixels we miss some bright spot, but we do find it for another, "
"that results in noise. The more samples we take, the higher the "
"probability that we cover all the important sources of light."
msgstr ""
"光源是已知来源，所以其位置已知，但它导致的光泽高光又是另一回事。对于路径"
"跟踪，我们所能做的最好的事情就是在半球上随机分布光线，希望找到所有重要的"
"亮点。如果对于一些像素我们错过了一些亮点，但是我们确实为另一个像素找到了"
"它，这会导致噪点。我们采集的样本越多，我们覆盖所有重要光源的概率就越高。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:79
msgid ""
"With some tricks we can reduce this noise. If we blur the bright spots, "
"they become bigger and less intense, making them easier to find and less "
"noisy. This will not give the same exact result, but often it's close "
"enough when viewed through a diffuse or soft glossy reflection. Below is "
"an example of using :ref:`Glossy Filter <render-cycles-integrator-filter-"
"glossy>` and :doc:`Light Falloff </render/shader_nodes/color/"
"light_falloff>`."
msgstr ""
"通过一些技巧，我们可以降低这种噪点。如果我们模糊亮点，它们就会变得更大，"
"越来越不强烈，它们就更容易找到，噪点也更少。这不会给出相同的精确结果，但"
"通常通过漫反射或柔和的光泽反射查看时，效果往往足够接近。下面是使用 :ref:`"
"光泽过滤器<render-cycles-integrator-filter-glossy>` 和 :doc:`灯光衰减 </"
"render/shader_nodes/color/light_falloff>` 的文档。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:91
msgid "Using Glossy Filter & Light Falloff."
msgstr "使用光泽过滤&灯光衰减。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:105
msgid "Bounces"
msgstr "最多反弹次数"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:107
msgid ""
"In reality light will bounce a huge number of times due to the speed of "
"light being very high. In practice more bounces will introduce more "
"noise, and it might be good to use something like the Limited Global "
"Illumination preset in the :ref:`Light Paths <render-cycles-integrator-"
"light-paths>` Section that uses *fewer* bounces for different shader "
"types. Diffuse surfaces typically can get away with fewer bounces, while "
"glossy surfaces need a few more, and transmission shaders such as glass "
"usually need the most."
msgstr ""
"在现实中，由于光速非常高，光会反弹大量。实际上，更多的反弹会引起更多的噪"
"点，并且最好在 :ref:`光线追踪`<render-cycles-integrator-light-paths>` 部"
"分中使用 *更少* 反弹，用于不同的色泽器类型，使用 *有限全局照明* 预设。漫"
"反射表面通常可以减少反弹，而光泽表面需要更多，而传输制光器(如玻璃)通常最"
"需要。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:120
msgid "No bounces."
msgstr "没有反弹。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:125
msgid "Two bounces at max."
msgstr "最多两次反弹。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:130
msgid "Four bounces at max."
msgstr "最多四次反弹。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:132
msgid ""
"Also important is to use shader colors that do **not** have components "
"of value 1.0 or values near that; try to keep the maximum value to 0.8 "
"or less and make your lights brighter. In reality, surfaces are rarely "
"perfectly reflecting all light, but there are of course exceptions; "
"usually glass will let most light through, which is why we need more "
"bounces there. High values for the color components tend to introduce "
"noise because light intensity then does not decrease much as it bounces "
"off each surface."
msgstr ""
"同样重要的是，使用 **没有** 值1.0的组件或接近该值的颜色着色器；尝试将最大"
"值保持在0.8或更小，并使灯光更亮。实际上，表面很少能完全反射所有的光，但当"
"然也有例外；通常玻璃会让大部分光通过，这就是为什么我们需要更多的反射。颜"
"色分量的高值往往会引起噪点，因为光强度不会随着它从每个表面反弹而降低。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:142
msgid "Caustics and Filter Glossy"
msgstr "焦散和滤除光泽"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:144
msgid ""
"Caustics are a well-known source of noise, causing fireflies. They "
"happen because the renderer has difficulty finding specular highlights "
"viewed through a soft glossy or diffuse reflection. There is a :ref:`No "
"Caustics <render-cycles-integrator-no-caustics>` option to disable "
"glossy behind a diffuse reflection entirely. Many renderers will "
"typically disable caustics by default."
msgstr ""
"焦散是众所周知的噪点来源，会引起光斑。它们产生的原因是渲染器很难找到通过"
"软光泽反射或漫反射查看的镜面高光。有一个 :ref:`不使用焦散 <render-cycles-"
"integrator-no-caustics>` 选项可以完全禁用漫反射后面的光泽。许多渲染器在默"
"认情况下通常会禁用焦散。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:156
msgid "Default settings."
msgstr "默认设置。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:161
msgid "Caustics disabled."
msgstr "焦散禁用。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:166
msgid "Filter Glossy greater than zero."
msgstr "过滤光泽大于零。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:168
msgid ""
"However, using No Caustics will result in missing light, and it still "
"does not cover the case where a sharp glossy reflection is viewed "
"through a soft glossy reflection. There is a :ref:`Filter Glossy <render-"
"cycles-integrator-filter-glossy>` option to reduce the noise from such "
"cases at the cost of accuracy. This will blur the sharp glossy "
"reflection to make it easier to find, by increasing the shader Roughness."
msgstr ""
"然而，不使用焦散会导致光线丢失，并且它仍然不包括通过柔和的光泽反射来查看"
"锐利光泽反射的情况。有一个 :ref:`滤除光泽 <render-cycles-integrator-"
"filter-glossy>` 选项可以降低来自这种情况的噪点，但代价是准确性会产生偏"
"差。这将通过增加着色器的粗糙度来模糊锐利的光泽反射，以使其更易于查找。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:174
msgid ""
"The above images show default settings, no caustics, and filter glossy "
"set to 1.0."
msgstr "上图显示了默认设置，没有焦散，滤除器光泽设置为1.0。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:178
msgid "Light Falloff"
msgstr "光线衰减"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:180
msgid ""
"In reality light in a vacuum will always fall off at a rate of 1/"
"(distance^2). However, as distance goes to zero, this value goes to "
"infinity and we can get very bright spots in the image. These are mostly "
"a problem for indirect lighting, where the probability of hitting such a "
"small but extremely bright spot is low and so happens only rarely. This "
"is a typical recipe for fireflies."
msgstr ""
"在现实中，真空中的光总是以1/(距离^2)的速率衰减。然而，随着距离变为零，这"
"个值就变成了无穷大，我们可以在图像中得到非常亮点。这些大多是间接照明的问"
"题，在间接照明中，击中这样一个小但极亮的点的概率很低，因此很少发生。这是"
"典型的萤火虫食谱。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:192
msgid "Hard Falloff."
msgstr "硬衰减。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:197
msgid "Soft Falloff."
msgstr "软衰减。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:199
msgid ""
"To reduce this problem, the :doc:`Light Falloff </render/shader_nodes/"
"color/light_falloff>` node has a *Smooth factor*, that can be used to "
"reduce the maximum intensity a light can contribute to nearby surfaces. "
"The images above show default falloff and smooth value 1.0."
msgstr ""
"为了减少此问题，:doc:`光线衰减 </render/shader_nodes/color/"
"light_falloff>` 节点具有 *平滑因子* ，可用于降低光线对附近曲面可能影响的"
"最大强度。上面的图像显示默认衰落和平滑值 1.0。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:207
msgid "Multiple Importance Sampling"
msgstr "多重重要性采样"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:209
msgid ""
"Materials with emission shaders can be configured to use Multiple "
"Importance Sampling (:doc:`/render/cycles/material_settings`). This "
"means that they will get rays sent directly towards them, rather than "
"ending up there based on rays randomly bouncing around. For very bright "
"mesh light sources, this can reduce noise significantly. However, when "
"the emission is not particularly bright, this will take samples away "
"from other brighter light sources for which it is important to find them "
"this way."
msgstr ""
"可将具有自发光着色器的配置为使用多重重要性采样 (:doc:`/render/cycles/"
"material_settings`) 。这意味着，他们将得到射线直接发送到他们，而不是结束"
"在那里根据光线随机反弹周围。对于非常明亮的网状光源，这可以显著降低噪声。"
"然而，当发射不是特别明亮时，这将从其他较亮的光源中抽取样品，而以这种方式"
"找到它们很重要。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:217
msgid ""
"The optimal setting here is difficult to guess; it may be a matter of "
"trial and error, but often it is clear that a somewhat glowing object "
"may be only contributing light locally, while a mesh light used as a "
"light would need this option enabled. Here is an example where the "
"emissive spheres contribute little to the lighting, and the image "
"renders with slightly less noise by disabling Multiple Importance on "
"them."
msgstr ""
"这里的最佳设置很难猜测；它可能是一个试验和错误的问题，但通常很明显，一个"
"有点发光的物体可能只在本地提供光，而用作光的网光需要启用此选项。下面是一"
"个示例，其中发射球体对照明的贡献很小，并且图像通过禁用多重重要性来渲染其"
"噪点略小。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:228
msgid "Multiple Importance off."
msgstr "多重重要性关闭。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:233
msgid "Multiple Importance on."
msgstr "多重重要性开启。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:235
msgid ""
"The world background also has a *Multiple Importance* (:ref:`render-"
"cycles-integrator-world-settings`) option. This is mostly useful for "
"environment maps that have small bright spots in them, rather than being "
"smooth. This option will then, in a preprocess, determine the bright "
"spots, and send light rays directly towards them. Again, enabling this "
"option may take samples away from more important light sources if it is "
"not needed."
msgstr ""
"世界背景还有一个 *多重重要性* (:ref:`render-cycles-integrator-world-"
"settings`) 选项。这对于具有小亮点的环境地图非常有用，并不单纯是平滑处理。"
"然后在预处理中，此选项将确定亮点，并直接向它们发送光线。同样，如果不需要"
"此选项，则启用此选项可能会从更重要的光源中获取样本。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:244
msgid "Glass and Transparent Shadows"
msgstr "玻璃和透明阴影"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:246
msgid ""
"With caustics disabled, glass will miss shadows, and with filter glossy "
"they might be too soft. We can make a glass shader that will use a Glass "
"BSDF when viewed *directly*, and a Transparent BSDF when viewed "
"*indirectly*. The Transparent BSDF can be used for transparent shadows "
"to find light sources straight through surfaces, and will give properly-"
"colored shadows, but without the caustics. The Light Path node is used "
"to determine when to use which of the two shaders."
msgstr ""
"禁用焦散后，玻璃会错过阴影，并且具有滤镜光泽，它们可能会更柔和。我们可以"
"制作一个玻璃扫描器，当 *直接* 观看时，将使用玻璃BSDF，在 *间接* 查看时使"
"用透明 BSDF。透明 BSDF 可用于透明阴影，以直接通过曲面查找光源，并给出颜色"
"适当的阴影，但没有焦散。光程节点将用于确定何时使用两个着色器中的哪个。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:256
msgid "Optimized glass shader."
msgstr "优化的玻璃着色器。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:258
msgid ""
"Above we can see the node setup used for the glass transparency trick; "
"on the left the render has too much shadow due to missing caustics, and "
"on the right the render with the trick."
msgstr ""
"上面我们可以看到用于玻璃透明度技巧的节点设置；在左侧由于缺少焦散，渲染有"
"太多的阴影，右侧则带有该技巧的渲染。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:267
msgid "Default Glas BSDF."
msgstr "默认的玻璃 BSDF。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:272
msgid "Optimized Glass Shader."
msgstr "优化的玻璃着色器。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:276
msgid "Light Portals"
msgstr "日光入口"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:278
msgid ""
"When rendering a daylight indoor scene where most of the light is coming "
"in through a window or door opening, it is difficult for the integrator "
"to find its way to them. To fix this, use :ref:`Light Portals <render-"
"cycles-lights-area-portals>`. You then will need to modify its shape to "
"match that of the opening that you are trying to fill."
msgstr ""
"当渲染一个日光室内场景时，大部分光线都是通过窗户或门的开口进入，集成器很"
"难找到通向它们的路。要解决此问题，请使用 :ref:`灯光入口<render-cycles-"
"lights-area-portals>` 。然后，你将需要修改它的形状，以匹配你想要填充的洞"
"口的形状。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:288
msgid "Denoising"
msgstr "降噪"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:290
msgid ""
"Even with all the settings described above there will always end up "
"being some render noise no matter how many samples you use. To fix this "
"there is a post-processing technique to cleanup the final bit of noise. "
"To use this enable :doc:`Denoising </render/layers/denoising>` in the "
"*Render Layers* tab of the Properties editor."
msgstr ""
"即使有了上面描述的所有设置，不管使用多少个示例，最终都会出现一些渲染噪"
"点。为了解决这个问题，有一种后处理技术来清除最后一点噪点。要启用 :doc:`降"
"噪 </render/layers/denoising>` ，请在属性编辑器的 *渲染层* 选项卡其中执行"
"以下操作。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:296
msgid ""
"Below is an example render by `The Pixelary <http://blog.thepixelary.com/"
"post/160451378592/denoising-in-cycles-tested>`__."
msgstr ""
"下面是一个示例 `The Pixelary <http://blog.thepixelary.com/"
"post/160451378592/denoising-in-cycles-tested>`__."

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:303
msgid "Example render before denoising."
msgstr "降噪前的渲染示例。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:307
msgid "Example render after denoising."
msgstr "降噪后的渲染示例。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:313
msgid "Clamp Fireflies"
msgstr "钳制光斑"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:315
msgid ""
"Ideally with all the previous tricks, fireflies would be eliminated, but "
"they could still happen. For that, the *intensity* that any individual "
"light ray sample will contribute to a pixel can be *clamped* to a "
"maximum value with the integrator :ref:`Clamp setting <render-cycles-"
"integrator-clamp-samples>`."
msgstr ""
"最理想的情况是，使用之前的所有技巧，将光斑消灭，但它们仍然可能发生。为"
"此，任何单独的光线样本将有助于像素的 *强度* 可以 *钳位* 到最大值，使用积"
"分器 :ref:`钳制设置 <render-cycles-integrator-clamp-samples>`。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:319
msgid ""
"If set too low this can cause missing highlights in the image, which "
"might be useful to preserve for camera effects such as bloom or glare. "
"To mitigate this conundrum it's often useful to clamp only indirect "
"bounces, leaving highlights directly visible to the camera untouched."
msgstr ""
"如果设置得太低，这可能会导致图像中缺少高光，这或许有助于保留相机效果，如"
"光晕或眩光。为了减轻这个难题，通常只对间接反弹进行钳制是有用的，这样可以"
"使相机直接看到的高光不会受到影响。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:329
msgid "No Clamp (0)."
msgstr "没有钳制(0)。"

#: ../../manual/render/cycles/optimizations/reducing_noise.rst:334
msgid "With Clamp set to 4."
msgstr "钳制设置为 4。"
