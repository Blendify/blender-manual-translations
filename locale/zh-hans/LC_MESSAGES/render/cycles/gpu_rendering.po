# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender Reference
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-23 12:16+0800\n"
"PO-Revision-Date: 2019-12-31 18:18+0800\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: BlenderCN Translation Team\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../manual/render/cycles/gpu_rendering.rst:4
msgid "GPU Rendering"
msgstr "GPU渲染"

#: ../../manual/render/cycles/gpu_rendering.rst:6
msgid ""
":abbr:`GPU (Graphics Processing Unit)` rendering makes it possible to use your graphics card for rendering, instead of the CPU. This can speed "
"up rendering because modern GPUs are designed to do quite a lot of number crunching. On the other hand, they also have some limitations in "
"rendering complex scenes, due to more limited memory, and issues with interactivity when using the same graphics card for display and "
"rendering."
msgstr ""
":abbr:`GPU(图形处理器)` 渲染能够使用你的显卡进行渲染，而不是CPU。这会加快渲染速度，因为如今GPU的设计旨在能够胜任大量运算方面的应用。另一方面，"
"由于显存容量有限，它们在渲染复杂场景时也有一些限制，并且在使用相同的显卡进行显示和渲染时会出现交互性问题。"

#: ../../manual/render/cycles/gpu_rendering.rst:12
msgid ""
"To enable GPU rendering, go into the :menuselection:`Preferences --> System --> Cycles Render Devices`, and select either *CUDA*, *Optix* or "
"*OpenCL*. Next, you must configure each scene to use GPU rendering in :menuselection:`Properties --> Render --> Device`."
msgstr ""
"要启用GPU渲染,请进入 :menuselection:`首选项 --> 系统 --> Cycles渲染设备` ,然后选择 *CUDA* ，*Optix* 或 *OpenCL* 。接下来,您必须为每个场景设置以"
"下步骤才能使用GPU渲染 :menuselection:`属性 --> 渲染 --> 设备` 。"

#: ../../manual/render/cycles/gpu_rendering.rst:18
msgid "Supported Hardware"
msgstr "支持的硬件"

#: ../../manual/render/cycles/gpu_rendering.rst:20
msgid "Blender supports two different technologies to render on the GPU depending on the particular GPU manufacture."
msgstr "Blender支持两种不同的技术在GPU上渲染，具体取决于特定的GPU制造商。"

#: ../../manual/render/cycles/gpu_rendering.rst:24
msgid "NVIDIA"
msgstr "NVIDIA 英伟达"

#: ../../manual/render/cycles/gpu_rendering.rst:26
msgid ":abbr:`CUDA (Compute Unified Device Architecture)` and Optix are supported for GPU rendering with *NVIDIA* graphics cards."
msgstr "支持使用 *NVIDIA* 显卡进行GPU渲染的CUDA（计算机统一设备架构）和Optix。"

#: ../../manual/render/cycles/gpu_rendering.rst:29
msgid ""
"CUDA requires graphics cards with compute capability 3.0 and higher. To make sure your GPU is supported, see the `list of NVIDIA graphics "
"cards <https://developer.nvidia.com/cuda-gpus>`__ with the compute capabilities and supported graphics cards. CUDA GPU rendering is supported "
"on Windows, macOS, and Linux."
msgstr ""
"CUDA需要计算能力为3.0或更高的图形卡。 要确保您的GPU受支持，请参阅具有计算功能和受支持的图形卡的 `NVIDIA图形卡列表 <https://developer.nvidia."
"com/cuda-gpus>`__ 。 Windows，macOS和Linux支持CUDA GPU渲染。"

#: ../../manual/render/cycles/gpu_rendering.rst:35
msgid ""
"For RTX graphics cards with hardware ray tracing support (e.g. Turing), Optix can be used for better performance. Optix support is still "
"experimental and does not yet support all features, see below for details."
msgstr "对于具有硬件光线跟踪支持的RTX图形卡(比如Turing)，可以使用Optix以获得更好的性能。 Optix支持仍处于试验阶段，尚不支持所有功能，详情见下文。"

#: ../../manual/render/cycles/gpu_rendering.rst:38
msgid "Optix requires Geforce or Quadro RTX graphics card with recent NVIDIA drivers, and is supported on Windows and Linux."
msgstr "Optix需要具有最新NVIDIA驱动程序的Geforce或Quadro RTX图形卡，并且在Windows和Linux上受支持。"

#: ../../manual/render/cycles/gpu_rendering.rst:42
msgid "AMD"
msgstr "AMD"

#: ../../manual/render/cycles/gpu_rendering.rst:44
msgid ""
":abbr:`OpenCL (Open Computing Language)` is supported for GPU rendering with *AMD* graphics cards. Blender supports graphics cards with :abbr:"
"`GCN (Graphics Core Next)` generation 2 and above. To make sure your GPU is supported, see the `list of GCN generations <https://en.wikipedia."
"org/wiki/Graphics_Core_Next#Iterations>`__ with the GCN generation and supported graphics cards."
msgstr ""
":abbr:`OpenCL(开放运算语言)` 支持使用 *AMD* 显卡进行 GPU 渲染。Blender支持 :abbr:`GCN(AMD GCN显卡架构)` 第2代及以上的显卡。为了确保您的GPU受支"
"持，请参阅具有GCN世代和支持的 `GCN显卡列表 <https://en.wikipedia.org/wiki/Graphics_Core_Next#Iterations>`__ 。"

#: ../../manual/render/cycles/gpu_rendering.rst:51
msgid "AMD OpenCL GPU rendering is supported on Windows and Linux, but not on macOS."
msgstr "Windows 和 Linux 支持 AMD OpenCL GPU 渲染,但在 macOS 上不受支持。"

#: ../../manual/render/cycles/gpu_rendering.rst:55
msgid "Supported Features and Limitations"
msgstr "支持特性和限制"

#: ../../manual/render/cycles/gpu_rendering.rst:57
msgid "CUDA and OpenCL rendering supports all the same features as CPU rendering, except two:"
msgstr "CUDA和OpenCL渲染支持与CPU渲染相同的所有功能，但以下两项除外："

#: ../../manual/render/cycles/gpu_rendering.rst:59
msgid "Open Shading Language."
msgstr "开放着色语言。"

#: ../../manual/render/cycles/gpu_rendering.rst:60
msgid "Advanced volume light sampling to reduce noise."
msgstr "高级的体积光采样以降低噪点。"

#: ../../manual/render/cycles/gpu_rendering.rst:62
msgid "Optix support is experimental and does not yet support the following features:"
msgstr "Optix支持是实验性的，尚不支持以下功能："

#: ../../manual/render/cycles/gpu_rendering.rst:64
msgid "Baking"
msgstr "烘焙"

#: ../../manual/render/cycles/gpu_rendering.rst:65
msgid "Brachend Path Tracing"
msgstr "分路路径追踪"

#: ../../manual/render/cycles/gpu_rendering.rst:66
msgid "Ambient Occlusion and Bevel shader nodes"
msgstr "环境光遮蔽（AO）和倒角着色器节点"

#: ../../manual/render/cycles/gpu_rendering.rst:67
msgid "Combined CPU + GPU rendering"
msgstr "结合CPU + GPU渲染"

#: ../../manual/render/cycles/gpu_rendering.rst:68
msgid "Using CPU memory for bigger scenes"
msgstr "对更大的场景使用CPU 内存"

#: ../../manual/render/cycles/gpu_rendering.rst:72
msgid "Frequently Asked Questions"
msgstr "常见问题"

#: ../../manual/render/cycles/gpu_rendering.rst:75
msgid "Why is Blender unresponsive during rendering?"
msgstr "为什么在渲染过程中Blender没有反应？"

#: ../../manual/render/cycles/gpu_rendering.rst:77
msgid ""
"While a graphics card is rendering, it cannot redraw the user interface, which makes Blender unresponsive. We attempt to avoid this problem by "
"giving back control over the GPU as often as possible, but a completely smooth interaction cannot be guaranteed, especially on heavy scenes. "
"This is a limitation of graphics cards for which no true solution exists, though we might be able to improve this somewhat in the future."
msgstr ""
"显卡正在渲染时，它不能重新绘制用户界面，这会导致Blender无法响应。我们试图通过尽可能频繁地回馈GPU控制来避免这个问题，但是无法保证完全流畅的交"
"互，特别是在复杂的场景中。这是显卡没有真正解决方案的限制，尽管我们可能在未来有所改进。"

#: ../../manual/render/cycles/gpu_rendering.rst:83
msgid "If possible, it is best to install more than one GPU, using one for display and the other(s) for rendering."
msgstr "如果可能的话，最好配备多个GPU，其中的一个用于显示界面，另一个用于渲染。"

#: ../../manual/render/cycles/gpu_rendering.rst:88
msgid "Why does a scene that renders on the CPU not render on the GPU?"
msgstr "为什么场景是通过CPU渲染的，而不是GPU？"

#: ../../manual/render/cycles/gpu_rendering.rst:90
msgid ""
"There maybe be multiple causes, but the most common is that there is not enough memory on your graphics card. Typically while using GPU "
"rendering the GPU can only use the amount of memory that is on the GPU. This is usually much smaller then the amount of system memory that the "
"CPU uses. In the case that the GPU runs out of memory Blender will automatically try to also use system and GPU memory. This has a performance "
"impact but it is still faster than using CPU rendering. This feature does not work on OpenCL rendering."
msgstr ""
"可能有多种原因，但最常见的是显的内存不足。通常，在使用 GPU 渲染时，GPU 只能使用 GPU 上的内存。这通常比 CPU 使用的系统内存量小得多。如果 GPU 内"
"存不足，Blender 将自动尝试使用系统和 GPU 内存。这会影响性能，但仍比使用 CPU 渲染更快。此功能不适用于 OpenCL 渲染。"

#: ../../manual/render/cycles/gpu_rendering.rst:100
msgid "Can multiple GPUs be used for rendering?"
msgstr "多个GPU可以用于渲染吗？"

#: ../../manual/render/cycles/gpu_rendering.rst:102
msgid "Yes, go to :menuselection:`Preferences --> System --> Compute Device Panel`, and configure it as you desire."
msgstr "可以。打开 :menuselection:`用户设置 --> 系统 --> 计算设备面板` ，按需进行设置即可。"

#: ../../manual/render/cycles/gpu_rendering.rst:106
msgid "Would multiple GPUs increase available memory?"
msgstr "多个GPU能够增加显存容量吗？"

#: ../../manual/render/cycles/gpu_rendering.rst:108
msgid "No, each GPU can only access its own memory."
msgstr "不能，每个GPU只能访问自身的显存。"

#: ../../manual/render/cycles/gpu_rendering.rst:112
msgid "What renders faster, NVIDIA or AMD, CUDA or OpenCL?"
msgstr "哪种渲染方案更为快速？NVIDIA还是AMD？CUDA还是OpenCL？"

#: ../../manual/render/cycles/gpu_rendering.rst:114
msgid ""
"Currently NVIDIA with CUDA is rendering fastest, but this really depends on the hardware you buy. Currently, CUDA and OpenCL are about the "
"same in the newest mid-range GPUs. However, CUDA is fastest in the respect of high-end GPUs."
msgstr "目前Nvidia与CUDA的渲染速度最快，但这取决于您购买的硬件。CUDA和OpenCL在最新的中端GPU中大致相同。但是，CUDA在高端GPU方面是最快的。"

#: ../../manual/render/cycles/gpu_rendering.rst:120
msgid "Error Messages"
msgstr "报错信息"

#: ../../manual/render/cycles/gpu_rendering.rst:122
msgid ""
"In case of problems, be sure to install the official graphics drivers from the NVIDIA or AMD website, or through the package manager on Linux."
msgstr "如果出现问题，请确保从NVIDIA或AMD网站来安装官方显卡驱动程序，或者通过Linux上的软件包管理器来安装。"

#: ../../manual/render/cycles/gpu_rendering.rst:127
msgid "Unsupported GNU version! gcc 4.7 and up are not supported!"
msgstr "不支持的GNU版本！不支持gcc 4.5及以上版本！"

#: ../../manual/render/cycles/gpu_rendering.rst:129
msgid "On Linux, depending on your GCC version you might get this error. There are two possible solutions:"
msgstr "在Linux系统下，根据你的GCC版本，你可能会收到此错误。有两种可能的解决方案："

#: ../../manual/render/cycles/gpu_rendering.rst:142
msgid "Use an alternate compiler"
msgstr "使用备用编译器"

#: ../../manual/render/cycles/gpu_rendering.rst:132
msgid ""
"If you have an older GCC installed that is compatible with the installed CUDA toolkit version, then you can use it instead of the default "
"compiler. This is done by setting the ``CYCLES_CUDA_EXTRA_CFLAGS`` environment variable when starting Blender."
msgstr ""
"如果安装了与安装的CUDA工具包版本兼容的较旧GCC，则可以使用它而不是默认编译器。这是通过在启动Blender时设置 ``CYCLES_CUDA_EXTRA_CFLAGS`` 环境变量"
"来完成的。"

#: ../../manual/render/cycles/gpu_rendering.rst:136
msgid "Launch Blender from the command line as follows:"
msgstr "从命令行启动Blender，如下所示："

#: ../../manual/render/cycles/gpu_rendering.rst:142
msgid "(Substitute the name or path of the compatible GCC compiler)."
msgstr "(替换兼容GCC编译器的名称或路径)。"

#: ../../manual/render/cycles/gpu_rendering.rst:150
msgid "Remove compatibility checks"
msgstr "删除兼容性检查"

#: ../../manual/render/cycles/gpu_rendering.rst:145
msgid "If the above is unsuccessful, delete the following line in ``/usr/local/cuda/include/host_config.h``"
msgstr "如果以上方法都不管用，在 ``/usr/local/cuda/include/host_config.h`` 中删除如下行内容即可"

#: ../../manual/render/cycles/gpu_rendering.rst:152
msgid ""
"This will allow Cycles to successfully compile the CUDA rendering kernel the first time it attempts to use your GPU for rendering. Once the "
"kernel is built successfully, you can launch Blender as you normally would and the CUDA kernel will still be used for rendering."
msgstr "这将允许Cycles在第一次尝试使用GPU进行渲染时成功编译CUDA渲染内核。成功构建内核后，你可以像往常一样启动Blender，CUDA内核仍将用于渲染。"

#: ../../manual/render/cycles/gpu_rendering.rst:158
msgid "CUDA Error: Invalid kernel image"
msgstr "CUDA错误：无效的内核图像"

#: ../../manual/render/cycles/gpu_rendering.rst:160
msgid "If you get this error on Windows 64-bit, be sure to use the 64-bit build of Blender, not the 32-bit version."
msgstr "如果您在Windows 64位系统下遇到此错误信息，请务必使用64位的Blender版本，而不要使用32位版本。"

#: ../../manual/render/cycles/gpu_rendering.rst:165
msgid "CUDA Error: Kernel compilation failed"
msgstr "CUDA错误：内核编译失败"

#: ../../manual/render/cycles/gpu_rendering.rst:167
msgid ""
"This error may happen if you have a new NVIDIA graphics card that is not yet supported by the Blender version and CUDA toolkit you have "
"installed. In this case Blender may try to dynamically build a kernel for your graphics card and fail."
msgstr ""
"如果您安装了新的NVIDIA显卡,但Blender版本 CUDA工具包不支持，就可能会出现此错误。在这种情况下Blender可能会尝试为您的显卡动态构建内核，但失败。"

#: ../../manual/render/cycles/gpu_rendering.rst:171
msgid "In this case you can:"
msgstr "在这种情况下，您可以："

#: ../../manual/render/cycles/gpu_rendering.rst:173
msgid ""
"Check if the latest Blender version (official or `experimental builds <https://builder.blender.org/download/experimental/>`__) supports your "
"graphics card."
msgstr "检查最新的Blender版本(官方或 `实验版本 <https://builder.blender.org/download/experimental/>`__) 是否支持您的图形卡。"

#: ../../manual/render/cycles/gpu_rendering.rst:176
msgid "If you build Blender yourself, try to download and install a newer CUDA developer toolkit."
msgstr "如果您自己构建Blender，请尝试下载并安装更新的CUDA开发人员工具包。"

#: ../../manual/render/cycles/gpu_rendering.rst:178
msgid "Normally users do not need to install the CUDA toolkit as Blender comes with precompiled kernels."
msgstr "通常用户不需要安装CUDA工具箱，因为Blender带有预编译的内核。"

#: ../../manual/render/cycles/gpu_rendering.rst:182
msgid "CUDA Error: Out of memory"
msgstr "CUDA错误：内存不足"

#: ../../manual/render/cycles/gpu_rendering.rst:184
msgid ""
"This usually means there is not enough memory to store the scene on the GPU. We can currently only render scenes that fit in graphics card "
"memory, and this is usually smaller than that of the CPU. See above for more details."
msgstr "这通常意味着GPU中没有足够的显存容量来存储场景。目前我们只能渲染显存容量允许范围内的场景，而这通常比CPU的要小。详请参见上文内容。"

#: ../../manual/render/cycles/gpu_rendering.rst:190
msgid ""
"One way to reduce memory usage is by using smaller resolutions for textures. For example, 8k, 4k, 2k, and 1k image textures take up "
"respectively 256MB, 64MB, 16MB and 4MB of memory."
msgstr "使用较小的纹理分辨率是减少内存使用量的一种方法。比如，8k、4k、2k 和 1k 图像纹理分别占 256MB、64MB、16MB 和 4MB 的内存。"

#: ../../manual/render/cycles/gpu_rendering.rst:195
msgid "The NVIDIA OpenGL driver lost connection with the display driver"
msgstr "NVIDIA OpenGL驱动与显示驱动程序失去连接"

#: ../../manual/render/cycles/gpu_rendering.rst:197
msgid ""
"If a GPU is used for both display and rendering, Windows has a limit on the time the GPU can do render computations. If you have a "
"particularly heavy scene, Cycles can take up too much GPU time. Reducing Tile Size in the Performance panel may alleviate the issue, but the "
"only real solution is to use separate graphics cards for display and rendering."
msgstr ""
"如果同时使用GPU来显示与渲染，Windows系统在GPU渲染计算时间方面存在局限。如果您的场景非常复杂，那么Cycles引擎就需要占用过多的GPU时间。通过降低性"
"能面板中的平铺尺寸值可以让此问题得到缓解，但真正的解决方案只有使用多个相对独立的显卡分别进行界面显示与渲染。"

#: ../../manual/render/cycles/gpu_rendering.rst:203
msgid ""
"Another solution can be to increase the time-out, although this will make the user interface less responsive when rendering heavy scenes. "
"`Learn More Here <https://msdn.microsoft.com/en-us/Library/Windows/Hardware/ff570087%28v=vs.85%29.aspx>`__."
msgstr ""
"另外一种解决方案是增大失去相应的等待时间；这会使在渲染计算力非常大的场景的时候，让用户界面的反应慢很多。 `更多请参考 <https://msdn.microsoft."
"com/en-us/Library/Windows/Hardware/ff570087%28v=vs.85%29.aspx>`__."

#: ../../manual/render/cycles/gpu_rendering.rst:209
msgid "CUDA error: Unknown error in cuCtxSynchronize()"
msgstr "CUDA 错误: 在 cuCtxSynchronize() 中的未知错误"

#: ../../manual/render/cycles/gpu_rendering.rst:211
msgid "An unknown error can have many causes, but one possibility is that it is a time-out. See the above answer for solutions."
msgstr "一个未知的错误可能有很多原因，但有一种可能性是它超时。请参阅上述答案以获取解决方案。"

#~ msgid "CUDA limitations:"
#~ msgstr "CUDA限制："

#~ msgid ""
#~ "The maximum amount of individual textures is limited to 88 byte-image textures (``PNG``, ``JPEG``, ..) and 5 float-image textures "
#~ "(``OpenEXR``, 16 bit ``TIFF``, ..) on GTX 4xx/5xx cards. Newer cards do not have this limit."
#~ msgstr ""
#~ "GTX 4xx/5xx显卡商的最大数量的纹理贴图支持限制为：95张位图纹理(``PNG``,`` JPEG``, ..)或者5张浮点纹理(``OpenEXR``, 16 bit ``TIFF``, ..)， "
#~ "GTX6xx 或以上显卡这个数为145和5 。"

#~ msgid ""
#~ "Nvidia :abbr:`CUDA (Compute Unified Device Architecture)` is supported for GPU rendering with *Nvidia* graphics cards. We support graphics "
#~ "cards starting from GTX 6xx (computing capability from 3.0 to 6.1)."
#~ msgstr "Nvidia :abbr:`CUDA(计算统一设备架构)` 支持使用 *nvidia* 图形卡进行GPU渲染。我们支持从GTX6XX开始的图形卡(计算能力从3.0到6.1)。"

#~ msgid "`List of CUDA cards with shader model <https://developer.nvidia.com/cuda-gpus>`__."
#~ msgstr "`CUDA显卡列表对应的着色模式版本 <http://www.nvidia.com/object/cuda_gpus.htm>`__。"

#~ msgid ""
#~ "Cycles has two GPU rendering modes: *CUDA*, which is the preferred method for Nvidia graphics cards; and *OpenCL*, which supports rendering "
#~ "on AMD graphics cards."
#~ msgstr "Cycles 有两种GPU渲染模式: *CUDA* , 在 NVIDIA 的显卡上运行的加速模式; 以及 *OpenCL* , AMD 的显卡上运行的加速模式。"

#~ msgid "CUDA"
#~ msgstr "CUDA"

#~ msgid "Cycles requires recent Nvidia drivers to be installed, on all operating systems."
#~ msgstr "Cycles要求在所有操作系统上都需要安装最新的Nvidia驱动程序。"

#~ msgid "OpenCL"
#~ msgstr "OpenCL"

#~ msgid ""
#~ ":abbr:`OpenCL (Open Computing Language)` is supported for GPU rendering with *AMD* graphics cards. (We only support graphics cards with :"
#~ "abbr:`GCN (Graphics Core Next)` architecture 2.0 and above). To make sure your GPU is supported checkout `this Wikipedia page <https://en."
#~ "wikipedia.org/wiki/List_of_AMD_graphics_processing_units>`__."
#~ msgstr ""
#~ "使用 *AMD* 显卡支持 :abbr:`OpenCL (开放式计算语言)` 的GPU渲染。(我们只支持显卡具有 :abbr:`GCN (下一代图形核心)` 架构2.0及以上(HD 7xxx 及以"
#~ "上)。不是所有的7系显卡都是GCN架构的，为了确保您的GPU支持，请查看 `此Wikipedia页面 <https://en.wikipedia.org/wiki/"
#~ "List_of_AMD_graphics_processing_units>`__。"

#~ msgid "Cycles requires recent AMD drivers to be installed, on all operating systems."
#~ msgstr "Cycles要求最新的AMD驱动已经安装，所有平台的系统都需要。"

#~ msgid "For an overview of supported features, check the comparison in the :doc:`Features </render/cycles/features>`."
#~ msgstr "概览支持的特性，请查看对比表格 :doc:`特性 </render/cycles/features>` 。"

#~ msgid "Introduction"
#~ msgstr "介绍"

#~ msgid "Configuration"
#~ msgstr "配置"

#~ msgid ""
#~ "To enable GPU rendering, go into the Preferences, and under the System tab, select the Compute Device(s) to use. Next, for each scene, you "
#~ "can configure to use CPU or GPU rendering in the Render properties."
#~ msgstr ""
#~ "要想启用GPU渲染，请进入User Preferences(用户首选项)，在System tab(系统标签)栏下,选择Compute Device(s)to use(用于计算的设备)。然后，你就可以"
#~ "在各个场景的Render properties(渲染属性)面板中配置使用CPU或GPU进行渲染了。"

#~ msgid "NVIDIA CUDA"
#~ msgstr "NVIDIA CUDA"

#~ msgid ""
#~ "NVIDIA :abbr:`CUDA (Compute Unified Device Architecture)` is supported for GPU rendering with *NVIDIA* graphics cards. Blender supports "
#~ "graphics cards with compute capability 3.0 and higher. To make sure your GPU is supported, see the `list of NVIDIA graphics cards <https://"
#~ "developer.nvidia.com/cuda-gpus>`__ with the compute capabilities and supported graphics cards."
#~ msgstr ""
#~ "NVIDIA :abbr:`CUDA(统一计算设备架构)` 支持使用 *NVIDIA* 显卡进行GPU渲染。Blender支持具有3.0及更高计算能力的显卡。为了确保您的GPU受支持,请参"
#~ "阅具有计算功能和支持的 `NVIDIA 显卡列表 <https://developer.nvidia.com/cuda-gpus>`__ 。"

#~ msgid "NVIDIA CUDA GPU rendering is supported on Windows, macOS, and Linux."
#~ msgstr "Windows、MacOS和Linux均支持NVIDIA CUDA GPU渲染。"

#~ msgid "AMD OpenCL"
#~ msgstr "AMD OpenCL"

#~ msgid ""
#~ "There maybe be multiple causes, but the most common is that there is not enough memory on your graphics card. We can currently only render "
#~ "scenes that fit in graphics card memory, and this is usually smaller than that of the CPU. Note that, for example, 8k, 4k, 2k and 1k image "
#~ "textures take up respectively 256MB, 64MB, 16MB and 4MB of memory."
#~ msgstr ""
#~ "这可能会有多种原因，但是最常见的是您的显存不足所致。我们目前只可渲染适显存容许范围内场景，而这通常会比CPU的小。需要注意的是，举例来说，8k、"
#~ "4k、2k和1k大小的图像纹理会分别占用256MB、64MB、16MB以及4MB的显存容量。"

#~ msgid "We do intend to add a system to support scenes bigger than GPU memory, but this will not be added soon."
#~ msgstr "我们打算加入一套系统来支持超过GPU显存负载的场景，但短期内不会加入。"
